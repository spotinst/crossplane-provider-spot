---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: oceanaws.oceanaws.spot.upbound.io
spec:
  group: oceanaws.spot.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - spot
    kind: OceanAws
    listKind: OceanAwsList
    plural: oceanaws
    singular: oceanaws
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: OceanAws is the Schema for the OceanAwss API. Provides a Spotinst
          Ocean resource using AWS.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: OceanAwsSpec defines the desired state of OceanAws
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  associateIpv6Address:
                    description: Configure IPv6 address allocation.
                    type: boolean
                  associatePublicIpAddress:
                    description: Configure public IP address allocation.
                    type: boolean
                  attachLoadBalancer:
                    description: Attach load balancers to the cluster.
                    items:
                      properties:
                        arn:
                          description: Required if type is set to TARGET_GROUP
                          type: string
                        name:
                          description: The cluster name.
                          type: string
                        type:
                          description: Can be set to CLASSIC or TARGET_GROUP
                          type: string
                      type: object
                    type: array
                  autoscaler:
                    description: Describes the Ocean Kubernetes Auto Scaler.
                    items:
                      properties:
                        autoHeadroomPercentage:
                          description: Set the auto headroom percentage (a number
                            in the range [0, 200]) which controls the percentage of
                            headroom from the cluster. Relevant only when autoscale_is_auto_config
                            toggled on.
                          type: number
                        autoscaleCooldown:
                          description: Cooldown period between scaling actions.
                          type: number
                        autoscaleDown:
                          description: Auto Scaling scale down operations.
                          items:
                            properties:
                              evaluationPeriods:
                                type: number
                              isAggressiveScaleDownEnabled:
                                description: When set to 'true', the Aggressive Scale
                                  Down feature is enabled.
                                type: boolean
                              maxScaleDownPercentage:
                                description: Would represent the maximum % to scale-down.
                                  Number between 1-100.
                                type: number
                            type: object
                          type: array
                        autoscaleHeadroom:
                          description: Spare resource capacity management enabling
                            fast assignment of Pods without waiting for new resources
                            to launch.
                          items:
                            properties:
                              cpuPerUnit:
                                description: Optionally configure the number of CPUs
                                  to allocate the headroom. CPUs are denoted in millicores,
                                  where 1000 millicores = 1 vCPU.
                                type: number
                              gpuPerUnit:
                                description: Optionally configure the number of GPUs
                                  to allocate the headroom.
                                type: number
                              memoryPerUnit:
                                description: Optionally configure the amount of memory
                                  (MB) to allocate the headroom.
                                type: number
                              numOfUnits:
                                description: The number of units to retain as headroom,
                                  where each unit has the defined headroom CPU and
                                  memory.
                                type: number
                            type: object
                          type: array
                        autoscaleIsAutoConfig:
                          description: Automatically configure and optimize headroom
                            resources.
                          type: boolean
                        autoscaleIsEnabled:
                          description: Enable the Ocean Kubernetes Auto Scaler.
                          type: boolean
                        enableAutomaticAndManualHeadroom:
                          description: enables automatic and manual headroom to work
                            in parallel. When set to false, automatic headroom overrides
                            all other headroom definitions manually configured, whether
                            they are at cluster or VNG level.
                          type: boolean
                        extendedResourceDefinitions:
                          description: List of Ocean extended resource definitions
                            to use in this cluster.
                          items:
                            type: string
                          type: array
                        resourceLimits:
                          description: Optionally set upper and lower bounds on the
                            resource usage of the cluster.
                          items:
                            properties:
                              maxMemoryGib:
                                description: Maximum amount of Memory (GiB).
                                type: number
                              maxVcpu:
                                description: Maximum number of vcpus available.
                                type: number
                            type: object
                          type: array
                      type: object
                    type: array
                  blacklist:
                    description: Instance types not allowed in the Ocean cluster.
                      Cannot be configured if whitelist is configured.
                    items:
                      type: string
                    type: array
                  blockDeviceMappings:
                    description: Object. Array list of block devices that are exposed
                      to the instance, specify either virtual devices and EBS volumes.
                    items:
                      properties:
                        deviceName:
                          description: 'String. Set device name. (Example: /dev/xvda).'
                          type: string
                        ebs:
                          description: Object. Set Elastic Block Store properties
                            .
                          items:
                            properties:
                              deleteOnTermination:
                                description: Boolean. Flag to delete the EBS on instance
                                  termination.
                                type: boolean
                              dynamicIops:
                                description: Set dynamic IOPS properties. When using
                                  this object, you cannot use the iops attribute.
                                  You must use one or the other.
                                items:
                                  properties:
                                    baseSize:
                                      description: 'Int. Initial size for volume.
                                        (Example: 50)'
                                      type: number
                                    resource:
                                      description: 'String. Resource type to increase
                                        volume size dynamically by. (Valid values:
                                        CPU)'
                                      type: string
                                    sizePerResourceUnit:
                                      description: 'Int. Additional size (in GB) per
                                        resource unit. (Example: baseSize=50, sizePerResourceUnit=20,
                                        and instance with 2 CPU is launched; its total
                                        disk size will be: 90GB).'
                                      type: number
                                  type: object
                                type: array
                              dynamicVolumeSize:
                                description: Object. Set dynamic volume size properties.
                                  When using this object, you cannot use volumeSize.
                                  You must use one or the other.
                                items:
                                  properties:
                                    baseSize:
                                      description: 'Int. Initial size for volume.
                                        (Example: 50)'
                                      type: number
                                    resource:
                                      description: 'String. Resource type to increase
                                        volume size dynamically by. (Valid values:
                                        CPU)'
                                      type: string
                                    sizePerResourceUnit:
                                      description: 'Int. Additional size (in GB) per
                                        resource unit. (Example: baseSize=50, sizePerResourceUnit=20,
                                        and instance with 2 CPU is launched; its total
                                        disk size will be: 90GB).'
                                      type: number
                                  type: object
                                type: array
                              encrypted:
                                description: Boolean. Enables EBS encryption on the
                                  volume.
                                type: boolean
                              iops:
                                description: Int. The number of I/O operations per
                                  second (IOPS) that the volume supports.
                                type: number
                              kmsKeyId:
                                description: String. Identifier (key ID, key alias,
                                  ID ARN, or alias ARN) for a customer managed CMK
                                  under which the EBS volume is encrypted.
                                type: string
                              snapshotId:
                                description: String. The Snapshot ID to mount by.
                                type: string
                              throughput:
                                description: The amount of data transferred to or
                                  from a storage device per second, you can use this
                                  param just in a case that volume_type = gp3.
                                type: number
                              volumeSize:
                                description: Int. The size, in GB of the volume.
                                type: number
                              volumeType:
                                description: 'String. The type of the volume. (Example:
                                  gp2).'
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  clusterOrientation:
                    items:
                      properties:
                        availabilityVsCost:
                          description: 'You can control the approach that Ocean takes
                            while launching nodes by configuring this value. Possible
                            values: costOriented,balanced,cheapest.'
                          type: string
                      type: object
                    type: array
                  controllerId:
                    description: A unique identifier used for connecting the Ocean
                      SaaS platform and the Kubernetes cluster. Typically, the cluster
                      name is used as its identifier.
                    type: string
                  desiredCapacity:
                    description: The number of instances to launch and maintain in
                      the cluster.
                    type: number
                  detachLoadBalancer:
                    description: Detach load balancers from the cluster.
                    items:
                      properties:
                        arn:
                          description: Required if type is set to TARGET_GROUP
                          type: string
                        name:
                          description: The cluster name.
                          type: string
                        type:
                          description: Can be set to CLASSIC or TARGET_GROUP
                          type: string
                      type: object
                    type: array
                  drainingTimeout:
                    description: The time in seconds, the instance is allowed to run
                      while detached from the ELB. This is to allow the instance time
                      to be drained from incoming TCP connections before terminating
                      it, during a scale down operation.
                    type: number
                  ebsOptimized:
                    description: Enable EBS optimized for cluster. Flag will enable
                      optimized capacity for high bandwidth connectivity to the EB
                      service for non EBS optimized instance types. For instances
                      that are EBS optimized this flag will be ignored.
                    type: boolean
                  fallbackToOndemand:
                    description: If not Spot instance markets are available, enable
                      Ocean to launch On-Demand instances instead.
                    type: boolean
                  filters:
                    description: List of filters. The Instance types that match with
                      all filters compose the Ocean's whitelist parameter. Cannot
                      be configured together with whitelist/blacklist.
                    items:
                      properties:
                        architectures:
                          description: The filtered instance types will support at
                            least one of the architectures from this list.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        categories:
                          description: The filtered instance types will belong to
                            one of the categories types from this list.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        diskTypes:
                          description: The filtered instance types will have one of
                            the disk type from this list.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        excludeFamilies:
                          description: 'Types belonging to a family from the ExcludeFamilies
                            will not be available for scaling (asterisk wildcard is
                            also supported). For example, C* will exclude instance
                            types from these families: c5, c4, c4a, etc.'
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        excludeMetal:
                          description: In case excludeMetal is set to true, metal
                            types will not be available for scaling.
                          type: boolean
                        hypervisor:
                          description: The filtered instance types will have a hypervisor
                            type from this list.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        includeFamilies:
                          description: 'Types belonging to a family from the IncludeFamilies
                            will be available for scaling (asterisk wildcard is also
                            supported). For example, C* will include instance types
                            from these families: c5, c4, c4a, etc.'
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        isEnaSupported:
                          description: Ena is supported or not.
                          type: string
                        maxGpu:
                          description: Maximum total number of GPUs.
                          type: number
                        maxMemoryGib:
                          description: Maximum amount of Memory (GiB).
                          type: number
                        maxNetworkPerformance:
                          description: Maximum Bandwidth in Gib/s of network performance.
                          type: number
                        maxVcpu:
                          description: Maximum number of vcpus available.
                          type: number
                        minEnis:
                          description: Minimum number of network interfaces (ENIs).
                          type: number
                        minGpu:
                          description: Minimum total number of GPUs.
                          type: number
                        minMemoryGib:
                          description: Minimum amount of Memory (GiB).
                          type: number
                        minNetworkPerformance:
                          description: Minimum Bandwidth in Gib/s of network performance.
                          type: number
                        minVcpu:
                          description: Minimum number of vcpus available.
                          type: number
                        rootDeviceTypes:
                          description: The filtered instance types will have a root
                            device types from this list.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        virtualizationTypes:
                          description: The filtered instance types will support at
                            least one of the virtualization types from this list.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                      type: object
                    type: array
                  gracePeriod:
                    description: The amount of time, in seconds, after the instance
                      has launched to start checking its health.
                    type: number
                  healthCheckUnhealthyDurationBeforeReplacement:
                    description: The amount of time, in seconds, an existing instance
                      should remain active after becoming unhealthy. After the set
                      time out the instance will be replaced. The minimum value allowed
                      is 60, and it must be a multiple of 60.
                    type: number
                  iamInstanceProfile:
                    description: The instance profile iam role.
                    type: string
                  imageId:
                    description: ID of the image used to launch the instances.
                    type: string
                  instanceMetadataOptions:
                    description: Ocean instance metadata options object for IMDSv2.
                    items:
                      properties:
                        httpPutResponseHopLimit:
                          description: An integer from 1 through 64. The desired HTTP
                            PUT response hop limit for instance metadata requests.
                            The larger the number, the further the instance metadata
                            requests can travel.
                          type: number
                        httpTokens:
                          description: 'Determines if a signed token is required or
                            not. Valid values: optional or required.'
                          type: string
                      type: object
                    type: array
                  keyName:
                    description: The key pair to attach the instances.
                    type: string
                  loadBalancers:
                    description: '- Array of load balancer objects to add to ocean
                      cluster'
                    items:
                      properties:
                        arn:
                          description: Required if type is set to TARGET_GROUP
                          type: string
                        name:
                          description: The cluster name.
                          type: string
                        type:
                          description: Can be set to CLASSIC or TARGET_GROUP
                          type: string
                      type: object
                    type: array
                  logging:
                    description: Logging configuration.
                    items:
                      properties:
                        export:
                          description: Logging Export configuration.
                          items:
                            properties:
                              s3:
                                description: Exports your cluster's logs to the S3
                                  bucket and subdir configured on the S3 data integration
                                  given.
                                items:
                                  properties:
                                    id:
                                      description: The identifier of The S3 data integration
                                        to export the logs to.
                                      type: string
                                  type: object
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                  maxSize:
                    description: The upper limit of instances the cluster can scale
                      up to.
                    type: number
                  minSize:
                    description: The lower limit of instances the cluster can scale
                      down to.
                    type: number
                  monitoring:
                    description: 'Enable detailed monitoring for cluster. Flag will
                      enable Cloud Watch detailed monitoring (one minute increments).
                      Note: there are additional hourly costs for this service based
                      on the region used.'
                    type: boolean
                  name:
                    description: The cluster name.
                    type: string
                  region:
                    description: The region the cluster will run in.
                    type: string
                  resourceTagSpecification:
                    description: Specify which resources should be tagged with Virtual
                      Node Group tags or Ocean tags. If tags are set on the VNG, the
                      resources will be tagged with the VNG tags; otherwise, they
                      will be tagged with the Ocean tags.
                    items:
                      properties:
                        shouldTagVolumes:
                          description: Specify if Volume resources will be tagged
                            with Virtual Node Group tags or Ocean tags.
                          type: boolean
                      type: object
                    type: array
                  rootVolumeSize:
                    description: The size (in Gb) to allocate for the root volume.
                      Minimum 20.
                    type: number
                  scheduledTask:
                    description: Set scheduling object.
                    items:
                      properties:
                        shutdownHours:
                          description: Set shutdown hours for cluster object.
                          items:
                            properties:
                              isEnabled:
                                description: 'Toggle the shutdown hours task. (Example:
                                  true).'
                                type: boolean
                              timeWindows:
                                description: 'Set time windows for shutdown hours.
                                  Specify a list of timeWindows with at least one
                                  time window Each string is in the format of: ddd:hh:mm-ddd:hh:mm
                                  where ddd = day of week = Sun | Mon | Tue | Wed
                                  | Thu | Fri | Sat, hh = hour 24 = 0 -23, mm = minute
                                  = 0 - 59. Time windows should not overlap. Required
                                  if cluster.scheduling.isEnabled is true. (Example:
                                  Fri:15:30-Wed:14:30).'
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        tasks:
                          description: The scheduling tasks for the cluster.
                          items:
                            properties:
                              cronExpression:
                                description: 'A valid cron expression. The cron is
                                  running in UTC time zone and is in Unix cron format
                                  Cron Expression Validator Script. Only one of frequency
                                  or cronExpression should be used at a time. Required
                                  for cluster.scheduling.tasks object. (Example: 0
                                  1 * * *).'
                                type: string
                              isEnabled:
                                description: 'Toggle the shutdown hours task. (Example:
                                  true).'
                                type: boolean
                              parameters:
                                description: This filed will be compatible to the
                                  task_type field. If task_type is defined as clusterRoll,
                                  user cluster roll object in parameters.
                                items:
                                  properties:
                                    amiAutoUpdate:
                                      description: Set amiAutoUpdate object
                                      items:
                                        properties:
                                          amiAutoUpdateClusterRoll:
                                            description: Set clusterRoll object
                                            items:
                                              properties:
                                                batchMinHealthyPercentage:
                                                  description: 'Default: 50. Indicates
                                                    the threshold of minimum healthy
                                                    instances in single batch. If
                                                    the amount of healthy instances
                                                    in single batch is under the threshold,
                                                    the cluster roll will fail. If
                                                    exists, the parameter value will
                                                    be in range of 1-100. In case
                                                    of null as value, the default
                                                    value in the backend will be 50%.
                                                    Value of param should represent
                                                    the number in percentage (%) of
                                                    the batch.'
                                                  type: number
                                                batchSizePercentage:
                                                  description: Sets the percentage
                                                    of the instances to deploy in
                                                    each batch.
                                                  type: number
                                                comment:
                                                  description: Add a comment description
                                                    for the roll. The comment is limited
                                                    to 256 chars
                                                  type: string
                                                respectPdb:
                                                  description: During the roll, if
                                                    the parameter is set to true we
                                                    honor PDB during the instance
                                                    replacement.
                                                  type: boolean
                                              type: object
                                            type: array
                                          applyRoll:
                                            description: When the AMI is updated according
                                              to the configuration set, a cluster
                                              roll can be triggered
                                            type: boolean
                                          minorVersion:
                                            description: When set to 'true', the auto-update
                                              process will update the VNGs’ AMI with
                                              the AMI to match the Kubernetes control
                                              plane version. either "patch" or "minor_version"
                                              must be true.
                                            type: boolean
                                          patch:
                                            description: When set to 'true', the auto-update
                                              process will update the VNGs’ images
                                              with the latest security patches. either
                                              "patch" or "minorVersion" must be true.
                                            type: boolean
                                        type: object
                                      type: array
                                    parametersClusterRoll:
                                      description: Set clusterRoll object
                                      items:
                                        properties:
                                          batchMinHealthyPercentage:
                                            description: 'Default: 50. Indicates the
                                              threshold of minimum healthy instances
                                              in single batch. If the amount of healthy
                                              instances in single batch is under the
                                              threshold, the cluster roll will fail.
                                              If exists, the parameter value will
                                              be in range of 1-100. In case of null
                                              as value, the default value in the backend
                                              will be 50%. Value of param should represent
                                              the number in percentage (%) of the
                                              batch.'
                                            type: number
                                          batchSizePercentage:
                                            description: Sets the percentage of the
                                              instances to deploy in each batch.
                                            type: number
                                          comment:
                                            description: Add a comment description
                                              for the roll. The comment is limited
                                              to 256 chars
                                            type: string
                                          respectPdb:
                                            description: During the roll, if the parameter
                                              is set to true we honor PDB during the
                                              instance replacement.
                                            type: boolean
                                        type: object
                                      type: array
                                  type: object
                                type: array
                              taskType:
                                description: 'Valid values: clusterRoll amiAutoUpdate.
                                  Required for cluster.scheduling.tasks'
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  securityGroups:
                    description: One or more security group ids.
                    items:
                      type: string
                    type: array
                  spotPercentage:
                    description: The desired percentage of Spot instances out of all
                      running instances. Only available when the field is not set
                      in any VNG directly (launchSpec.strategy.spotPercentage).
                    type: number
                  spreadNodesBy:
                    description: 'Ocean will spread the nodes across markets by this
                      value. Possible values: vcpu or count.'
                    type: string
                  subnetIds:
                    description: A comma-separated list of subnet identifiers for
                      the Ocean cluster. Subnet IDs should be configured with auto
                      assign public IP.
                    items:
                      type: string
                    type: array
                  tags:
                    description: Optionally adds tags to instances launched in an
                      Ocean cluster.
                    items:
                      properties:
                        key:
                          description: The tag key.
                          type: string
                        value:
                          description: The tag value.
                          type: string
                      type: object
                    type: array
                  updatePolicy:
                    items:
                      properties:
                        autoApplyTags:
                          description: will update instance tags on the fly without
                            rolling the cluster.
                          type: boolean
                        conditionedRoll:
                          description: Spot will perform a cluster Roll in accordance
                            with a relevant modification of the cluster’s settings.
                            When set to true , only specific changes in the cluster’s
                            configuration will trigger a cluster roll (such as AMI,
                            Key Pair, user data, instance types, load balancers, etc).
                          type: boolean
                        conditionedRollParams:
                          description: 'A custom list of attributes will trigger the
                            cluster roll operation (overrides the predefined list
                            of parameters). Valid only when the conditioned_roll parameter
                            is set to true. (Valid values: "subnet_ids","whitelist","blacklist","user_data","image_id","security_groups","key_name","iam_instance_profile","associate_public_ip_address","load_balancers","instance_metadata_options","ebs_optimized","root_volume_size")'
                          items:
                            type: string
                          type: array
                        rollConfig:
                          description: While used, you can control whether the group
                            should perform a deployment after an update to the configuration.
                          items:
                            properties:
                              batchMinHealthyPercentage:
                                description: 'Default: 50. Indicates the threshold
                                  of minimum healthy instances in single batch. If
                                  the amount of healthy instances in single batch
                                  is under the threshold, the cluster roll will fail.
                                  If exists, the parameter value will be in range
                                  of 1-100. In case of null as value, the default
                                  value in the backend will be 50%. Value of param
                                  should represent the number in percentage (%) of
                                  the batch.'
                                type: number
                              batchSizePercentage:
                                description: Sets the percentage of the instances
                                  to deploy in each batch.
                                type: number
                              launchSpecIds:
                                description: List of virtual node group identifiers
                                  to be rolled.
                                items:
                                  type: string
                                type: array
                              respectPdb:
                                description: During the roll, if the parameter is
                                  set to true we honor PDB during the instance replacement.
                                type: boolean
                            type: object
                          type: array
                        shouldRoll:
                          description: Enables the roll.
                          type: boolean
                      type: object
                    type: array
                  useAsTemplateOnly:
                    description: |-
                      launch specification defined on the Ocean object will function only as a template for virtual node groups.
                      When set to true, on Ocean resource creation please make sure your custom VNG has an initial_nodes parameter to create nodes for your VNG.
                    type: boolean
                  userData:
                    description: Base64-encoded MIME user data to make available to
                      the instances.
                    type: string
                  utilizeCommitments:
                    description: If savings plans exist, Ocean will utilize them before
                      launching Spot instances.
                    type: boolean
                  utilizeReservedInstances:
                    description: If Reserved instances exist, Ocean will utilize them
                      before launching Spot instances.
                    type: boolean
                  whitelist:
                    description: Instance types allowed in the Ocean cluster. Cannot
                      be configured if blacklist is configured.
                    items:
                      type: string
                    type: array
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  associateIpv6Address:
                    description: Configure IPv6 address allocation.
                    type: boolean
                  associatePublicIpAddress:
                    description: Configure public IP address allocation.
                    type: boolean
                  attachLoadBalancer:
                    description: Attach load balancers to the cluster.
                    items:
                      properties:
                        arn:
                          description: Required if type is set to TARGET_GROUP
                          type: string
                        name:
                          description: The cluster name.
                          type: string
                        type:
                          description: Can be set to CLASSIC or TARGET_GROUP
                          type: string
                      type: object
                    type: array
                  autoscaler:
                    description: Describes the Ocean Kubernetes Auto Scaler.
                    items:
                      properties:
                        autoHeadroomPercentage:
                          description: Set the auto headroom percentage (a number
                            in the range [0, 200]) which controls the percentage of
                            headroom from the cluster. Relevant only when autoscale_is_auto_config
                            toggled on.
                          type: number
                        autoscaleCooldown:
                          description: Cooldown period between scaling actions.
                          type: number
                        autoscaleDown:
                          description: Auto Scaling scale down operations.
                          items:
                            properties:
                              evaluationPeriods:
                                type: number
                              isAggressiveScaleDownEnabled:
                                description: When set to 'true', the Aggressive Scale
                                  Down feature is enabled.
                                type: boolean
                              maxScaleDownPercentage:
                                description: Would represent the maximum % to scale-down.
                                  Number between 1-100.
                                type: number
                            type: object
                          type: array
                        autoscaleHeadroom:
                          description: Spare resource capacity management enabling
                            fast assignment of Pods without waiting for new resources
                            to launch.
                          items:
                            properties:
                              cpuPerUnit:
                                description: Optionally configure the number of CPUs
                                  to allocate the headroom. CPUs are denoted in millicores,
                                  where 1000 millicores = 1 vCPU.
                                type: number
                              gpuPerUnit:
                                description: Optionally configure the number of GPUs
                                  to allocate the headroom.
                                type: number
                              memoryPerUnit:
                                description: Optionally configure the amount of memory
                                  (MB) to allocate the headroom.
                                type: number
                              numOfUnits:
                                description: The number of units to retain as headroom,
                                  where each unit has the defined headroom CPU and
                                  memory.
                                type: number
                            type: object
                          type: array
                        autoscaleIsAutoConfig:
                          description: Automatically configure and optimize headroom
                            resources.
                          type: boolean
                        autoscaleIsEnabled:
                          description: Enable the Ocean Kubernetes Auto Scaler.
                          type: boolean
                        enableAutomaticAndManualHeadroom:
                          description: enables automatic and manual headroom to work
                            in parallel. When set to false, automatic headroom overrides
                            all other headroom definitions manually configured, whether
                            they are at cluster or VNG level.
                          type: boolean
                        extendedResourceDefinitions:
                          description: List of Ocean extended resource definitions
                            to use in this cluster.
                          items:
                            type: string
                          type: array
                        resourceLimits:
                          description: Optionally set upper and lower bounds on the
                            resource usage of the cluster.
                          items:
                            properties:
                              maxMemoryGib:
                                description: Maximum amount of Memory (GiB).
                                type: number
                              maxVcpu:
                                description: Maximum number of vcpus available.
                                type: number
                            type: object
                          type: array
                      type: object
                    type: array
                  blacklist:
                    description: Instance types not allowed in the Ocean cluster.
                      Cannot be configured if whitelist is configured.
                    items:
                      type: string
                    type: array
                  blockDeviceMappings:
                    description: Object. Array list of block devices that are exposed
                      to the instance, specify either virtual devices and EBS volumes.
                    items:
                      properties:
                        deviceName:
                          description: 'String. Set device name. (Example: /dev/xvda).'
                          type: string
                        ebs:
                          description: Object. Set Elastic Block Store properties
                            .
                          items:
                            properties:
                              deleteOnTermination:
                                description: Boolean. Flag to delete the EBS on instance
                                  termination.
                                type: boolean
                              dynamicIops:
                                description: Set dynamic IOPS properties. When using
                                  this object, you cannot use the iops attribute.
                                  You must use one or the other.
                                items:
                                  properties:
                                    baseSize:
                                      description: 'Int. Initial size for volume.
                                        (Example: 50)'
                                      type: number
                                    resource:
                                      description: 'String. Resource type to increase
                                        volume size dynamically by. (Valid values:
                                        CPU)'
                                      type: string
                                    sizePerResourceUnit:
                                      description: 'Int. Additional size (in GB) per
                                        resource unit. (Example: baseSize=50, sizePerResourceUnit=20,
                                        and instance with 2 CPU is launched; its total
                                        disk size will be: 90GB).'
                                      type: number
                                  type: object
                                type: array
                              dynamicVolumeSize:
                                description: Object. Set dynamic volume size properties.
                                  When using this object, you cannot use volumeSize.
                                  You must use one or the other.
                                items:
                                  properties:
                                    baseSize:
                                      description: 'Int. Initial size for volume.
                                        (Example: 50)'
                                      type: number
                                    resource:
                                      description: 'String. Resource type to increase
                                        volume size dynamically by. (Valid values:
                                        CPU)'
                                      type: string
                                    sizePerResourceUnit:
                                      description: 'Int. Additional size (in GB) per
                                        resource unit. (Example: baseSize=50, sizePerResourceUnit=20,
                                        and instance with 2 CPU is launched; its total
                                        disk size will be: 90GB).'
                                      type: number
                                  type: object
                                type: array
                              encrypted:
                                description: Boolean. Enables EBS encryption on the
                                  volume.
                                type: boolean
                              iops:
                                description: Int. The number of I/O operations per
                                  second (IOPS) that the volume supports.
                                type: number
                              kmsKeyId:
                                description: String. Identifier (key ID, key alias,
                                  ID ARN, or alias ARN) for a customer managed CMK
                                  under which the EBS volume is encrypted.
                                type: string
                              snapshotId:
                                description: String. The Snapshot ID to mount by.
                                type: string
                              throughput:
                                description: The amount of data transferred to or
                                  from a storage device per second, you can use this
                                  param just in a case that volume_type = gp3.
                                type: number
                              volumeSize:
                                description: Int. The size, in GB of the volume.
                                type: number
                              volumeType:
                                description: 'String. The type of the volume. (Example:
                                  gp2).'
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  clusterOrientation:
                    items:
                      properties:
                        availabilityVsCost:
                          description: 'You can control the approach that Ocean takes
                            while launching nodes by configuring this value. Possible
                            values: costOriented,balanced,cheapest.'
                          type: string
                      type: object
                    type: array
                  controllerId:
                    description: A unique identifier used for connecting the Ocean
                      SaaS platform and the Kubernetes cluster. Typically, the cluster
                      name is used as its identifier.
                    type: string
                  desiredCapacity:
                    description: The number of instances to launch and maintain in
                      the cluster.
                    type: number
                  detachLoadBalancer:
                    description: Detach load balancers from the cluster.
                    items:
                      properties:
                        arn:
                          description: Required if type is set to TARGET_GROUP
                          type: string
                        name:
                          description: The cluster name.
                          type: string
                        type:
                          description: Can be set to CLASSIC or TARGET_GROUP
                          type: string
                      type: object
                    type: array
                  drainingTimeout:
                    description: The time in seconds, the instance is allowed to run
                      while detached from the ELB. This is to allow the instance time
                      to be drained from incoming TCP connections before terminating
                      it, during a scale down operation.
                    type: number
                  ebsOptimized:
                    description: Enable EBS optimized for cluster. Flag will enable
                      optimized capacity for high bandwidth connectivity to the EB
                      service for non EBS optimized instance types. For instances
                      that are EBS optimized this flag will be ignored.
                    type: boolean
                  fallbackToOndemand:
                    description: If not Spot instance markets are available, enable
                      Ocean to launch On-Demand instances instead.
                    type: boolean
                  filters:
                    description: List of filters. The Instance types that match with
                      all filters compose the Ocean's whitelist parameter. Cannot
                      be configured together with whitelist/blacklist.
                    items:
                      properties:
                        architectures:
                          description: The filtered instance types will support at
                            least one of the architectures from this list.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        categories:
                          description: The filtered instance types will belong to
                            one of the categories types from this list.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        diskTypes:
                          description: The filtered instance types will have one of
                            the disk type from this list.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        excludeFamilies:
                          description: 'Types belonging to a family from the ExcludeFamilies
                            will not be available for scaling (asterisk wildcard is
                            also supported). For example, C* will exclude instance
                            types from these families: c5, c4, c4a, etc.'
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        excludeMetal:
                          description: In case excludeMetal is set to true, metal
                            types will not be available for scaling.
                          type: boolean
                        hypervisor:
                          description: The filtered instance types will have a hypervisor
                            type from this list.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        includeFamilies:
                          description: 'Types belonging to a family from the IncludeFamilies
                            will be available for scaling (asterisk wildcard is also
                            supported). For example, C* will include instance types
                            from these families: c5, c4, c4a, etc.'
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        isEnaSupported:
                          description: Ena is supported or not.
                          type: string
                        maxGpu:
                          description: Maximum total number of GPUs.
                          type: number
                        maxMemoryGib:
                          description: Maximum amount of Memory (GiB).
                          type: number
                        maxNetworkPerformance:
                          description: Maximum Bandwidth in Gib/s of network performance.
                          type: number
                        maxVcpu:
                          description: Maximum number of vcpus available.
                          type: number
                        minEnis:
                          description: Minimum number of network interfaces (ENIs).
                          type: number
                        minGpu:
                          description: Minimum total number of GPUs.
                          type: number
                        minMemoryGib:
                          description: Minimum amount of Memory (GiB).
                          type: number
                        minNetworkPerformance:
                          description: Minimum Bandwidth in Gib/s of network performance.
                          type: number
                        minVcpu:
                          description: Minimum number of vcpus available.
                          type: number
                        rootDeviceTypes:
                          description: The filtered instance types will have a root
                            device types from this list.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        virtualizationTypes:
                          description: The filtered instance types will support at
                            least one of the virtualization types from this list.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                      type: object
                    type: array
                  gracePeriod:
                    description: The amount of time, in seconds, after the instance
                      has launched to start checking its health.
                    type: number
                  healthCheckUnhealthyDurationBeforeReplacement:
                    description: The amount of time, in seconds, an existing instance
                      should remain active after becoming unhealthy. After the set
                      time out the instance will be replaced. The minimum value allowed
                      is 60, and it must be a multiple of 60.
                    type: number
                  iamInstanceProfile:
                    description: The instance profile iam role.
                    type: string
                  imageId:
                    description: ID of the image used to launch the instances.
                    type: string
                  instanceMetadataOptions:
                    description: Ocean instance metadata options object for IMDSv2.
                    items:
                      properties:
                        httpPutResponseHopLimit:
                          description: An integer from 1 through 64. The desired HTTP
                            PUT response hop limit for instance metadata requests.
                            The larger the number, the further the instance metadata
                            requests can travel.
                          type: number
                        httpTokens:
                          description: 'Determines if a signed token is required or
                            not. Valid values: optional or required.'
                          type: string
                      type: object
                    type: array
                  keyName:
                    description: The key pair to attach the instances.
                    type: string
                  loadBalancers:
                    description: '- Array of load balancer objects to add to ocean
                      cluster'
                    items:
                      properties:
                        arn:
                          description: Required if type is set to TARGET_GROUP
                          type: string
                        name:
                          description: The cluster name.
                          type: string
                        type:
                          description: Can be set to CLASSIC or TARGET_GROUP
                          type: string
                      type: object
                    type: array
                  logging:
                    description: Logging configuration.
                    items:
                      properties:
                        export:
                          description: Logging Export configuration.
                          items:
                            properties:
                              s3:
                                description: Exports your cluster's logs to the S3
                                  bucket and subdir configured on the S3 data integration
                                  given.
                                items:
                                  properties:
                                    id:
                                      description: The identifier of The S3 data integration
                                        to export the logs to.
                                      type: string
                                  type: object
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                  maxSize:
                    description: The upper limit of instances the cluster can scale
                      up to.
                    type: number
                  minSize:
                    description: The lower limit of instances the cluster can scale
                      down to.
                    type: number
                  monitoring:
                    description: 'Enable detailed monitoring for cluster. Flag will
                      enable Cloud Watch detailed monitoring (one minute increments).
                      Note: there are additional hourly costs for this service based
                      on the region used.'
                    type: boolean
                  name:
                    description: The cluster name.
                    type: string
                  region:
                    description: The region the cluster will run in.
                    type: string
                  resourceTagSpecification:
                    description: Specify which resources should be tagged with Virtual
                      Node Group tags or Ocean tags. If tags are set on the VNG, the
                      resources will be tagged with the VNG tags; otherwise, they
                      will be tagged with the Ocean tags.
                    items:
                      properties:
                        shouldTagVolumes:
                          description: Specify if Volume resources will be tagged
                            with Virtual Node Group tags or Ocean tags.
                          type: boolean
                      type: object
                    type: array
                  rootVolumeSize:
                    description: The size (in Gb) to allocate for the root volume.
                      Minimum 20.
                    type: number
                  scheduledTask:
                    description: Set scheduling object.
                    items:
                      properties:
                        shutdownHours:
                          description: Set shutdown hours for cluster object.
                          items:
                            properties:
                              isEnabled:
                                description: 'Toggle the shutdown hours task. (Example:
                                  true).'
                                type: boolean
                              timeWindows:
                                description: 'Set time windows for shutdown hours.
                                  Specify a list of timeWindows with at least one
                                  time window Each string is in the format of: ddd:hh:mm-ddd:hh:mm
                                  where ddd = day of week = Sun | Mon | Tue | Wed
                                  | Thu | Fri | Sat, hh = hour 24 = 0 -23, mm = minute
                                  = 0 - 59. Time windows should not overlap. Required
                                  if cluster.scheduling.isEnabled is true. (Example:
                                  Fri:15:30-Wed:14:30).'
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        tasks:
                          description: The scheduling tasks for the cluster.
                          items:
                            properties:
                              cronExpression:
                                description: 'A valid cron expression. The cron is
                                  running in UTC time zone and is in Unix cron format
                                  Cron Expression Validator Script. Only one of frequency
                                  or cronExpression should be used at a time. Required
                                  for cluster.scheduling.tasks object. (Example: 0
                                  1 * * *).'
                                type: string
                              isEnabled:
                                description: 'Toggle the shutdown hours task. (Example:
                                  true).'
                                type: boolean
                              parameters:
                                description: This filed will be compatible to the
                                  task_type field. If task_type is defined as clusterRoll,
                                  user cluster roll object in parameters.
                                items:
                                  properties:
                                    amiAutoUpdate:
                                      description: Set amiAutoUpdate object
                                      items:
                                        properties:
                                          amiAutoUpdateClusterRoll:
                                            description: Set clusterRoll object
                                            items:
                                              properties:
                                                batchMinHealthyPercentage:
                                                  description: 'Default: 50. Indicates
                                                    the threshold of minimum healthy
                                                    instances in single batch. If
                                                    the amount of healthy instances
                                                    in single batch is under the threshold,
                                                    the cluster roll will fail. If
                                                    exists, the parameter value will
                                                    be in range of 1-100. In case
                                                    of null as value, the default
                                                    value in the backend will be 50%.
                                                    Value of param should represent
                                                    the number in percentage (%) of
                                                    the batch.'
                                                  type: number
                                                batchSizePercentage:
                                                  description: Sets the percentage
                                                    of the instances to deploy in
                                                    each batch.
                                                  type: number
                                                comment:
                                                  description: Add a comment description
                                                    for the roll. The comment is limited
                                                    to 256 chars
                                                  type: string
                                                respectPdb:
                                                  description: During the roll, if
                                                    the parameter is set to true we
                                                    honor PDB during the instance
                                                    replacement.
                                                  type: boolean
                                              type: object
                                            type: array
                                          applyRoll:
                                            description: When the AMI is updated according
                                              to the configuration set, a cluster
                                              roll can be triggered
                                            type: boolean
                                          minorVersion:
                                            description: When set to 'true', the auto-update
                                              process will update the VNGs’ AMI with
                                              the AMI to match the Kubernetes control
                                              plane version. either "patch" or "minor_version"
                                              must be true.
                                            type: boolean
                                          patch:
                                            description: When set to 'true', the auto-update
                                              process will update the VNGs’ images
                                              with the latest security patches. either
                                              "patch" or "minorVersion" must be true.
                                            type: boolean
                                        type: object
                                      type: array
                                    parametersClusterRoll:
                                      description: Set clusterRoll object
                                      items:
                                        properties:
                                          batchMinHealthyPercentage:
                                            description: 'Default: 50. Indicates the
                                              threshold of minimum healthy instances
                                              in single batch. If the amount of healthy
                                              instances in single batch is under the
                                              threshold, the cluster roll will fail.
                                              If exists, the parameter value will
                                              be in range of 1-100. In case of null
                                              as value, the default value in the backend
                                              will be 50%. Value of param should represent
                                              the number in percentage (%) of the
                                              batch.'
                                            type: number
                                          batchSizePercentage:
                                            description: Sets the percentage of the
                                              instances to deploy in each batch.
                                            type: number
                                          comment:
                                            description: Add a comment description
                                              for the roll. The comment is limited
                                              to 256 chars
                                            type: string
                                          respectPdb:
                                            description: During the roll, if the parameter
                                              is set to true we honor PDB during the
                                              instance replacement.
                                            type: boolean
                                        type: object
                                      type: array
                                  type: object
                                type: array
                              taskType:
                                description: 'Valid values: clusterRoll amiAutoUpdate.
                                  Required for cluster.scheduling.tasks'
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  securityGroups:
                    description: One or more security group ids.
                    items:
                      type: string
                    type: array
                  spotPercentage:
                    description: The desired percentage of Spot instances out of all
                      running instances. Only available when the field is not set
                      in any VNG directly (launchSpec.strategy.spotPercentage).
                    type: number
                  spreadNodesBy:
                    description: 'Ocean will spread the nodes across markets by this
                      value. Possible values: vcpu or count.'
                    type: string
                  subnetIds:
                    description: A comma-separated list of subnet identifiers for
                      the Ocean cluster. Subnet IDs should be configured with auto
                      assign public IP.
                    items:
                      type: string
                    type: array
                  tags:
                    description: Optionally adds tags to instances launched in an
                      Ocean cluster.
                    items:
                      properties:
                        key:
                          description: The tag key.
                          type: string
                        value:
                          description: The tag value.
                          type: string
                      type: object
                    type: array
                  updatePolicy:
                    items:
                      properties:
                        autoApplyTags:
                          description: will update instance tags on the fly without
                            rolling the cluster.
                          type: boolean
                        conditionedRoll:
                          description: Spot will perform a cluster Roll in accordance
                            with a relevant modification of the cluster’s settings.
                            When set to true , only specific changes in the cluster’s
                            configuration will trigger a cluster roll (such as AMI,
                            Key Pair, user data, instance types, load balancers, etc).
                          type: boolean
                        conditionedRollParams:
                          description: 'A custom list of attributes will trigger the
                            cluster roll operation (overrides the predefined list
                            of parameters). Valid only when the conditioned_roll parameter
                            is set to true. (Valid values: "subnet_ids","whitelist","blacklist","user_data","image_id","security_groups","key_name","iam_instance_profile","associate_public_ip_address","load_balancers","instance_metadata_options","ebs_optimized","root_volume_size")'
                          items:
                            type: string
                          type: array
                        rollConfig:
                          description: While used, you can control whether the group
                            should perform a deployment after an update to the configuration.
                          items:
                            properties:
                              batchMinHealthyPercentage:
                                description: 'Default: 50. Indicates the threshold
                                  of minimum healthy instances in single batch. If
                                  the amount of healthy instances in single batch
                                  is under the threshold, the cluster roll will fail.
                                  If exists, the parameter value will be in range
                                  of 1-100. In case of null as value, the default
                                  value in the backend will be 50%. Value of param
                                  should represent the number in percentage (%) of
                                  the batch.'
                                type: number
                              batchSizePercentage:
                                description: Sets the percentage of the instances
                                  to deploy in each batch.
                                type: number
                              launchSpecIds:
                                description: List of virtual node group identifiers
                                  to be rolled.
                                items:
                                  type: string
                                type: array
                              respectPdb:
                                description: During the roll, if the parameter is
                                  set to true we honor PDB during the instance replacement.
                                type: boolean
                            type: object
                          type: array
                        shouldRoll:
                          description: Enables the roll.
                          type: boolean
                      type: object
                    type: array
                  useAsTemplateOnly:
                    description: |-
                      launch specification defined on the Ocean object will function only as a template for virtual node groups.
                      When set to true, on Ocean resource creation please make sure your custom VNG has an initial_nodes parameter to create nodes for your VNG.
                    type: boolean
                  userData:
                    description: Base64-encoded MIME user data to make available to
                      the instances.
                    type: string
                  utilizeCommitments:
                    description: If savings plans exist, Ocean will utilize them before
                      launching Spot instances.
                    type: boolean
                  utilizeReservedInstances:
                    description: If Reserved instances exist, Ocean will utilize them
                      before launching Spot instances.
                    type: boolean
                  whitelist:
                    description: Instance types allowed in the Ocean cluster. Cannot
                      be configured if blacklist is configured.
                    items:
                      type: string
                    type: array
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.imageId is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.imageId)
                || (has(self.initProvider) && has(self.initProvider.imageId))'
            - message: spec.forProvider.securityGroups is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.securityGroups)
                || (has(self.initProvider) && has(self.initProvider.securityGroups))'
            - message: spec.forProvider.subnetIds is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.subnetIds)
                || (has(self.initProvider) && has(self.initProvider.subnetIds))'
          status:
            description: OceanAwsStatus defines the observed state of OceanAws.
            properties:
              atProvider:
                properties:
                  associateIpv6Address:
                    description: Configure IPv6 address allocation.
                    type: boolean
                  associatePublicIpAddress:
                    description: Configure public IP address allocation.
                    type: boolean
                  attachLoadBalancer:
                    description: Attach load balancers to the cluster.
                    items:
                      properties:
                        arn:
                          description: Required if type is set to TARGET_GROUP
                          type: string
                        name:
                          description: The cluster name.
                          type: string
                        type:
                          description: Can be set to CLASSIC or TARGET_GROUP
                          type: string
                      type: object
                    type: array
                  autoscaler:
                    description: Describes the Ocean Kubernetes Auto Scaler.
                    items:
                      properties:
                        autoHeadroomPercentage:
                          description: Set the auto headroom percentage (a number
                            in the range [0, 200]) which controls the percentage of
                            headroom from the cluster. Relevant only when autoscale_is_auto_config
                            toggled on.
                          type: number
                        autoscaleCooldown:
                          description: Cooldown period between scaling actions.
                          type: number
                        autoscaleDown:
                          description: Auto Scaling scale down operations.
                          items:
                            properties:
                              evaluationPeriods:
                                type: number
                              isAggressiveScaleDownEnabled:
                                description: When set to 'true', the Aggressive Scale
                                  Down feature is enabled.
                                type: boolean
                              maxScaleDownPercentage:
                                description: Would represent the maximum % to scale-down.
                                  Number between 1-100.
                                type: number
                            type: object
                          type: array
                        autoscaleHeadroom:
                          description: Spare resource capacity management enabling
                            fast assignment of Pods without waiting for new resources
                            to launch.
                          items:
                            properties:
                              cpuPerUnit:
                                description: Optionally configure the number of CPUs
                                  to allocate the headroom. CPUs are denoted in millicores,
                                  where 1000 millicores = 1 vCPU.
                                type: number
                              gpuPerUnit:
                                description: Optionally configure the number of GPUs
                                  to allocate the headroom.
                                type: number
                              memoryPerUnit:
                                description: Optionally configure the amount of memory
                                  (MB) to allocate the headroom.
                                type: number
                              numOfUnits:
                                description: The number of units to retain as headroom,
                                  where each unit has the defined headroom CPU and
                                  memory.
                                type: number
                            type: object
                          type: array
                        autoscaleIsAutoConfig:
                          description: Automatically configure and optimize headroom
                            resources.
                          type: boolean
                        autoscaleIsEnabled:
                          description: Enable the Ocean Kubernetes Auto Scaler.
                          type: boolean
                        enableAutomaticAndManualHeadroom:
                          description: enables automatic and manual headroom to work
                            in parallel. When set to false, automatic headroom overrides
                            all other headroom definitions manually configured, whether
                            they are at cluster or VNG level.
                          type: boolean
                        extendedResourceDefinitions:
                          description: List of Ocean extended resource definitions
                            to use in this cluster.
                          items:
                            type: string
                          type: array
                        resourceLimits:
                          description: Optionally set upper and lower bounds on the
                            resource usage of the cluster.
                          items:
                            properties:
                              maxMemoryGib:
                                description: Maximum amount of Memory (GiB).
                                type: number
                              maxVcpu:
                                description: Maximum number of vcpus available.
                                type: number
                            type: object
                          type: array
                      type: object
                    type: array
                  blacklist:
                    description: Instance types not allowed in the Ocean cluster.
                      Cannot be configured if whitelist is configured.
                    items:
                      type: string
                    type: array
                  blockDeviceMappings:
                    description: Object. Array list of block devices that are exposed
                      to the instance, specify either virtual devices and EBS volumes.
                    items:
                      properties:
                        deviceName:
                          description: 'String. Set device name. (Example: /dev/xvda).'
                          type: string
                        ebs:
                          description: Object. Set Elastic Block Store properties
                            .
                          items:
                            properties:
                              deleteOnTermination:
                                description: Boolean. Flag to delete the EBS on instance
                                  termination.
                                type: boolean
                              dynamicIops:
                                description: Set dynamic IOPS properties. When using
                                  this object, you cannot use the iops attribute.
                                  You must use one or the other.
                                items:
                                  properties:
                                    baseSize:
                                      description: 'Int. Initial size for volume.
                                        (Example: 50)'
                                      type: number
                                    resource:
                                      description: 'String. Resource type to increase
                                        volume size dynamically by. (Valid values:
                                        CPU)'
                                      type: string
                                    sizePerResourceUnit:
                                      description: 'Int. Additional size (in GB) per
                                        resource unit. (Example: baseSize=50, sizePerResourceUnit=20,
                                        and instance with 2 CPU is launched; its total
                                        disk size will be: 90GB).'
                                      type: number
                                  type: object
                                type: array
                              dynamicVolumeSize:
                                description: Object. Set dynamic volume size properties.
                                  When using this object, you cannot use volumeSize.
                                  You must use one or the other.
                                items:
                                  properties:
                                    baseSize:
                                      description: 'Int. Initial size for volume.
                                        (Example: 50)'
                                      type: number
                                    resource:
                                      description: 'String. Resource type to increase
                                        volume size dynamically by. (Valid values:
                                        CPU)'
                                      type: string
                                    sizePerResourceUnit:
                                      description: 'Int. Additional size (in GB) per
                                        resource unit. (Example: baseSize=50, sizePerResourceUnit=20,
                                        and instance with 2 CPU is launched; its total
                                        disk size will be: 90GB).'
                                      type: number
                                  type: object
                                type: array
                              encrypted:
                                description: Boolean. Enables EBS encryption on the
                                  volume.
                                type: boolean
                              iops:
                                description: Int. The number of I/O operations per
                                  second (IOPS) that the volume supports.
                                type: number
                              kmsKeyId:
                                description: String. Identifier (key ID, key alias,
                                  ID ARN, or alias ARN) for a customer managed CMK
                                  under which the EBS volume is encrypted.
                                type: string
                              snapshotId:
                                description: String. The Snapshot ID to mount by.
                                type: string
                              throughput:
                                description: The amount of data transferred to or
                                  from a storage device per second, you can use this
                                  param just in a case that volume_type = gp3.
                                type: number
                              volumeSize:
                                description: Int. The size, in GB of the volume.
                                type: number
                              volumeType:
                                description: 'String. The type of the volume. (Example:
                                  gp2).'
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  clusterOrientation:
                    items:
                      properties:
                        availabilityVsCost:
                          description: 'You can control the approach that Ocean takes
                            while launching nodes by configuring this value. Possible
                            values: costOriented,balanced,cheapest.'
                          type: string
                      type: object
                    type: array
                  controllerId:
                    description: A unique identifier used for connecting the Ocean
                      SaaS platform and the Kubernetes cluster. Typically, the cluster
                      name is used as its identifier.
                    type: string
                  desiredCapacity:
                    description: The number of instances to launch and maintain in
                      the cluster.
                    type: number
                  detachLoadBalancer:
                    description: Detach load balancers from the cluster.
                    items:
                      properties:
                        arn:
                          description: Required if type is set to TARGET_GROUP
                          type: string
                        name:
                          description: The cluster name.
                          type: string
                        type:
                          description: Can be set to CLASSIC or TARGET_GROUP
                          type: string
                      type: object
                    type: array
                  drainingTimeout:
                    description: The time in seconds, the instance is allowed to run
                      while detached from the ELB. This is to allow the instance time
                      to be drained from incoming TCP connections before terminating
                      it, during a scale down operation.
                    type: number
                  ebsOptimized:
                    description: Enable EBS optimized for cluster. Flag will enable
                      optimized capacity for high bandwidth connectivity to the EB
                      service for non EBS optimized instance types. For instances
                      that are EBS optimized this flag will be ignored.
                    type: boolean
                  fallbackToOndemand:
                    description: If not Spot instance markets are available, enable
                      Ocean to launch On-Demand instances instead.
                    type: boolean
                  filters:
                    description: List of filters. The Instance types that match with
                      all filters compose the Ocean's whitelist parameter. Cannot
                      be configured together with whitelist/blacklist.
                    items:
                      properties:
                        architectures:
                          description: The filtered instance types will support at
                            least one of the architectures from this list.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        categories:
                          description: The filtered instance types will belong to
                            one of the categories types from this list.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        diskTypes:
                          description: The filtered instance types will have one of
                            the disk type from this list.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        excludeFamilies:
                          description: 'Types belonging to a family from the ExcludeFamilies
                            will not be available for scaling (asterisk wildcard is
                            also supported). For example, C* will exclude instance
                            types from these families: c5, c4, c4a, etc.'
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        excludeMetal:
                          description: In case excludeMetal is set to true, metal
                            types will not be available for scaling.
                          type: boolean
                        hypervisor:
                          description: The filtered instance types will have a hypervisor
                            type from this list.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        includeFamilies:
                          description: 'Types belonging to a family from the IncludeFamilies
                            will be available for scaling (asterisk wildcard is also
                            supported). For example, C* will include instance types
                            from these families: c5, c4, c4a, etc.'
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        isEnaSupported:
                          description: Ena is supported or not.
                          type: string
                        maxGpu:
                          description: Maximum total number of GPUs.
                          type: number
                        maxMemoryGib:
                          description: Maximum amount of Memory (GiB).
                          type: number
                        maxNetworkPerformance:
                          description: Maximum Bandwidth in Gib/s of network performance.
                          type: number
                        maxVcpu:
                          description: Maximum number of vcpus available.
                          type: number
                        minEnis:
                          description: Minimum number of network interfaces (ENIs).
                          type: number
                        minGpu:
                          description: Minimum total number of GPUs.
                          type: number
                        minMemoryGib:
                          description: Minimum amount of Memory (GiB).
                          type: number
                        minNetworkPerformance:
                          description: Minimum Bandwidth in Gib/s of network performance.
                          type: number
                        minVcpu:
                          description: Minimum number of vcpus available.
                          type: number
                        rootDeviceTypes:
                          description: The filtered instance types will have a root
                            device types from this list.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        virtualizationTypes:
                          description: The filtered instance types will support at
                            least one of the virtualization types from this list.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                      type: object
                    type: array
                  gracePeriod:
                    description: The amount of time, in seconds, after the instance
                      has launched to start checking its health.
                    type: number
                  healthCheckUnhealthyDurationBeforeReplacement:
                    description: The amount of time, in seconds, an existing instance
                      should remain active after becoming unhealthy. After the set
                      time out the instance will be replaced. The minimum value allowed
                      is 60, and it must be a multiple of 60.
                    type: number
                  iamInstanceProfile:
                    description: The instance profile iam role.
                    type: string
                  id:
                    description: The identifier of The S3 data integration to export
                      the logs to.
                    type: string
                  imageId:
                    description: ID of the image used to launch the instances.
                    type: string
                  instanceMetadataOptions:
                    description: Ocean instance metadata options object for IMDSv2.
                    items:
                      properties:
                        httpPutResponseHopLimit:
                          description: An integer from 1 through 64. The desired HTTP
                            PUT response hop limit for instance metadata requests.
                            The larger the number, the further the instance metadata
                            requests can travel.
                          type: number
                        httpTokens:
                          description: 'Determines if a signed token is required or
                            not. Valid values: optional or required.'
                          type: string
                      type: object
                    type: array
                  keyName:
                    description: The key pair to attach the instances.
                    type: string
                  loadBalancers:
                    description: '- Array of load balancer objects to add to ocean
                      cluster'
                    items:
                      properties:
                        arn:
                          description: Required if type is set to TARGET_GROUP
                          type: string
                        name:
                          description: The cluster name.
                          type: string
                        type:
                          description: Can be set to CLASSIC or TARGET_GROUP
                          type: string
                      type: object
                    type: array
                  logging:
                    description: Logging configuration.
                    items:
                      properties:
                        export:
                          description: Logging Export configuration.
                          items:
                            properties:
                              s3:
                                description: Exports your cluster's logs to the S3
                                  bucket and subdir configured on the S3 data integration
                                  given.
                                items:
                                  properties:
                                    id:
                                      description: The identifier of The S3 data integration
                                        to export the logs to.
                                      type: string
                                  type: object
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                  maxSize:
                    description: The upper limit of instances the cluster can scale
                      up to.
                    type: number
                  minSize:
                    description: The lower limit of instances the cluster can scale
                      down to.
                    type: number
                  monitoring:
                    description: 'Enable detailed monitoring for cluster. Flag will
                      enable Cloud Watch detailed monitoring (one minute increments).
                      Note: there are additional hourly costs for this service based
                      on the region used.'
                    type: boolean
                  name:
                    description: The cluster name.
                    type: string
                  region:
                    description: The region the cluster will run in.
                    type: string
                  resourceTagSpecification:
                    description: Specify which resources should be tagged with Virtual
                      Node Group tags or Ocean tags. If tags are set on the VNG, the
                      resources will be tagged with the VNG tags; otherwise, they
                      will be tagged with the Ocean tags.
                    items:
                      properties:
                        shouldTagVolumes:
                          description: Specify if Volume resources will be tagged
                            with Virtual Node Group tags or Ocean tags.
                          type: boolean
                      type: object
                    type: array
                  rootVolumeSize:
                    description: The size (in Gb) to allocate for the root volume.
                      Minimum 20.
                    type: number
                  scheduledTask:
                    description: Set scheduling object.
                    items:
                      properties:
                        shutdownHours:
                          description: Set shutdown hours for cluster object.
                          items:
                            properties:
                              isEnabled:
                                description: 'Toggle the shutdown hours task. (Example:
                                  true).'
                                type: boolean
                              timeWindows:
                                description: 'Set time windows for shutdown hours.
                                  Specify a list of timeWindows with at least one
                                  time window Each string is in the format of: ddd:hh:mm-ddd:hh:mm
                                  where ddd = day of week = Sun | Mon | Tue | Wed
                                  | Thu | Fri | Sat, hh = hour 24 = 0 -23, mm = minute
                                  = 0 - 59. Time windows should not overlap. Required
                                  if cluster.scheduling.isEnabled is true. (Example:
                                  Fri:15:30-Wed:14:30).'
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        tasks:
                          description: The scheduling tasks for the cluster.
                          items:
                            properties:
                              cronExpression:
                                description: 'A valid cron expression. The cron is
                                  running in UTC time zone and is in Unix cron format
                                  Cron Expression Validator Script. Only one of frequency
                                  or cronExpression should be used at a time. Required
                                  for cluster.scheduling.tasks object. (Example: 0
                                  1 * * *).'
                                type: string
                              isEnabled:
                                description: 'Toggle the shutdown hours task. (Example:
                                  true).'
                                type: boolean
                              parameters:
                                description: This filed will be compatible to the
                                  task_type field. If task_type is defined as clusterRoll,
                                  user cluster roll object in parameters.
                                items:
                                  properties:
                                    amiAutoUpdate:
                                      description: Set amiAutoUpdate object
                                      items:
                                        properties:
                                          amiAutoUpdateClusterRoll:
                                            description: Set clusterRoll object
                                            items:
                                              properties:
                                                batchMinHealthyPercentage:
                                                  description: 'Default: 50. Indicates
                                                    the threshold of minimum healthy
                                                    instances in single batch. If
                                                    the amount of healthy instances
                                                    in single batch is under the threshold,
                                                    the cluster roll will fail. If
                                                    exists, the parameter value will
                                                    be in range of 1-100. In case
                                                    of null as value, the default
                                                    value in the backend will be 50%.
                                                    Value of param should represent
                                                    the number in percentage (%) of
                                                    the batch.'
                                                  type: number
                                                batchSizePercentage:
                                                  description: Sets the percentage
                                                    of the instances to deploy in
                                                    each batch.
                                                  type: number
                                                comment:
                                                  description: Add a comment description
                                                    for the roll. The comment is limited
                                                    to 256 chars
                                                  type: string
                                                respectPdb:
                                                  description: During the roll, if
                                                    the parameter is set to true we
                                                    honor PDB during the instance
                                                    replacement.
                                                  type: boolean
                                              type: object
                                            type: array
                                          applyRoll:
                                            description: When the AMI is updated according
                                              to the configuration set, a cluster
                                              roll can be triggered
                                            type: boolean
                                          minorVersion:
                                            description: When set to 'true', the auto-update
                                              process will update the VNGs’ AMI with
                                              the AMI to match the Kubernetes control
                                              plane version. either "patch" or "minor_version"
                                              must be true.
                                            type: boolean
                                          patch:
                                            description: When set to 'true', the auto-update
                                              process will update the VNGs’ images
                                              with the latest security patches. either
                                              "patch" or "minorVersion" must be true.
                                            type: boolean
                                        type: object
                                      type: array
                                    parametersClusterRoll:
                                      description: Set clusterRoll object
                                      items:
                                        properties:
                                          batchMinHealthyPercentage:
                                            description: 'Default: 50. Indicates the
                                              threshold of minimum healthy instances
                                              in single batch. If the amount of healthy
                                              instances in single batch is under the
                                              threshold, the cluster roll will fail.
                                              If exists, the parameter value will
                                              be in range of 1-100. In case of null
                                              as value, the default value in the backend
                                              will be 50%. Value of param should represent
                                              the number in percentage (%) of the
                                              batch.'
                                            type: number
                                          batchSizePercentage:
                                            description: Sets the percentage of the
                                              instances to deploy in each batch.
                                            type: number
                                          comment:
                                            description: Add a comment description
                                              for the roll. The comment is limited
                                              to 256 chars
                                            type: string
                                          respectPdb:
                                            description: During the roll, if the parameter
                                              is set to true we honor PDB during the
                                              instance replacement.
                                            type: boolean
                                        type: object
                                      type: array
                                  type: object
                                type: array
                              taskType:
                                description: 'Valid values: clusterRoll amiAutoUpdate.
                                  Required for cluster.scheduling.tasks'
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  securityGroups:
                    description: One or more security group ids.
                    items:
                      type: string
                    type: array
                  spotPercentage:
                    description: The desired percentage of Spot instances out of all
                      running instances. Only available when the field is not set
                      in any VNG directly (launchSpec.strategy.spotPercentage).
                    type: number
                  spreadNodesBy:
                    description: 'Ocean will spread the nodes across markets by this
                      value. Possible values: vcpu or count.'
                    type: string
                  subnetIds:
                    description: A comma-separated list of subnet identifiers for
                      the Ocean cluster. Subnet IDs should be configured with auto
                      assign public IP.
                    items:
                      type: string
                    type: array
                  tags:
                    description: Optionally adds tags to instances launched in an
                      Ocean cluster.
                    items:
                      properties:
                        key:
                          description: The tag key.
                          type: string
                        value:
                          description: The tag value.
                          type: string
                      type: object
                    type: array
                  updatePolicy:
                    items:
                      properties:
                        autoApplyTags:
                          description: will update instance tags on the fly without
                            rolling the cluster.
                          type: boolean
                        conditionedRoll:
                          description: Spot will perform a cluster Roll in accordance
                            with a relevant modification of the cluster’s settings.
                            When set to true , only specific changes in the cluster’s
                            configuration will trigger a cluster roll (such as AMI,
                            Key Pair, user data, instance types, load balancers, etc).
                          type: boolean
                        conditionedRollParams:
                          description: 'A custom list of attributes will trigger the
                            cluster roll operation (overrides the predefined list
                            of parameters). Valid only when the conditioned_roll parameter
                            is set to true. (Valid values: "subnet_ids","whitelist","blacklist","user_data","image_id","security_groups","key_name","iam_instance_profile","associate_public_ip_address","load_balancers","instance_metadata_options","ebs_optimized","root_volume_size")'
                          items:
                            type: string
                          type: array
                        rollConfig:
                          description: While used, you can control whether the group
                            should perform a deployment after an update to the configuration.
                          items:
                            properties:
                              batchMinHealthyPercentage:
                                description: 'Default: 50. Indicates the threshold
                                  of minimum healthy instances in single batch. If
                                  the amount of healthy instances in single batch
                                  is under the threshold, the cluster roll will fail.
                                  If exists, the parameter value will be in range
                                  of 1-100. In case of null as value, the default
                                  value in the backend will be 50%. Value of param
                                  should represent the number in percentage (%) of
                                  the batch.'
                                type: number
                              batchSizePercentage:
                                description: Sets the percentage of the instances
                                  to deploy in each batch.
                                type: number
                              launchSpecIds:
                                description: List of virtual node group identifiers
                                  to be rolled.
                                items:
                                  type: string
                                type: array
                              respectPdb:
                                description: During the roll, if the parameter is
                                  set to true we honor PDB during the instance replacement.
                                type: boolean
                            type: object
                          type: array
                        shouldRoll:
                          description: Enables the roll.
                          type: boolean
                      type: object
                    type: array
                  useAsTemplateOnly:
                    description: |-
                      launch specification defined on the Ocean object will function only as a template for virtual node groups.
                      When set to true, on Ocean resource creation please make sure your custom VNG has an initial_nodes parameter to create nodes for your VNG.
                    type: boolean
                  userData:
                    description: Base64-encoded MIME user data to make available to
                      the instances.
                    type: string
                  utilizeCommitments:
                    description: If savings plans exist, Ocean will utilize them before
                      launching Spot instances.
                    type: boolean
                  utilizeReservedInstances:
                    description: If Reserved instances exist, Ocean will utilize them
                      before launching Spot instances.
                    type: boolean
                  whitelist:
                    description: Instance types allowed in the Ocean cluster. Cannot
                      be configured if blacklist is configured.
                    items:
                      type: string
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
