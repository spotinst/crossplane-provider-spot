---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: oceangkevngs.oceangkevng.spot.upbound.io
spec:
  group: oceangkevng.spot.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - spot
    kind: OceanGkeVng
    listKind: OceanGkeVngList
    plural: oceangkevngs
    singular: oceangkevng
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: OceanGkeVng is the Schema for the OceanGkeVngs API. Provides
          a Spotinst Ocean Launch Spec resource using GKE.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: OceanGkeVngSpec defines the desired state of OceanGkeVng
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  autoscaleHeadrooms:
                    description: Set custom headroom per launch spec. provide list
                      of headrooms object.
                    items:
                      properties:
                        cpuPerUnit:
                          description: Optionally configure the number of CPUs to
                            allocate for each headroom unit. CPUs are denoted in millicores,
                            where 1000 millicores = 1 vCPU.
                          type: number
                        gpuPerUnit:
                          description: Optionally configure the number of GPUS to
                            allocate for each headroom unit.
                          type: number
                        memoryPerUnit:
                          description: Optionally configure the amount of memory (MiB)
                            to allocate for each headroom unit.
                          type: number
                        numOfUnits:
                          description: The number of units to retain as headroom,
                            where each unit has the defined headroom CPU, memory and
                            GPU.
                          type: number
                      type: object
                    type: array
                  autoscaleHeadroomsAutomatic:
                    description: Set automatic headroom per launch spec.
                    items:
                      properties:
                        autoHeadroomPercentage:
                          description: Number between 0-200 to control the headroom
                            % of the specific Virtual Node Group. Effective when cluster.autoScaler.headroom.automatic.is_enabled
                            = true is set on the Ocean cluster.
                          type: number
                      type: object
                    type: array
                  createOptions:
                    items:
                      properties:
                        initialNodes:
                          type: number
                      type: object
                    type: array
                  instanceTypes:
                    description: List of supported machine types for the Launch Spec.
                    items:
                      type: string
                    type: array
                  labels:
                    description: Optionally adds labels to instances launched in an
                      Ocean cluster.
                    items:
                      properties:
                        key:
                          description: The metadata key.
                          type: string
                        value:
                          description: The metadata value.
                          type: string
                      type: object
                    type: array
                  metadata:
                    description: Cluster's metadata.
                    items:
                      properties:
                        key:
                          description: The metadata key.
                          type: string
                        value:
                          description: The metadata value.
                          type: string
                      type: object
                    type: array
                  name:
                    description: The launch specification name.
                    type: string
                  networkInterfaces:
                    description: Settings for network interfaces.
                    items:
                      properties:
                        accessConfigs:
                          description: The network protocol of the VNG.
                          items:
                            properties:
                              name:
                                description: The launch specification name.
                                type: string
                              type:
                                description: The type of the access configuration.
                                type: string
                            type: object
                          type: array
                        aliasIpRanges:
                          description: use the imported node poolâ€™s associated aliasIpRange
                            to assign secondary IP addresses to the nodes. Cannot
                            be changed after VNG creation.
                          items:
                            properties:
                              ipCidrRange:
                                description: specify the IP address range in CIDR
                                  notation that can be used for the alias IP addresses
                                  associated with the imported node pool.
                                type: string
                              subnetworkRangeName:
                                description: specify the IP address range for the
                                  subnet secondary IP range.
                                type: string
                            type: object
                          type: array
                        network:
                          description: The name of the network.
                          type: string
                        projectId:
                          description: Use a network resource from a different project.
                            Set the project identifier to use its network resource.
                            This parameter is relevant only if the network resource
                            is in a different project.
                          type: string
                      type: object
                    type: array
                  nodePoolName:
                    description: The node pool you wish to use in your Launch Spec.
                    type: string
                  oceanId:
                    description: The Ocean cluster ID.
                    type: string
                  resourceLimits:
                    description: The Ocean virtual node group resource limits object.
                    items:
                      properties:
                        maxInstanceCount:
                          description: Option to set a maximum number of instances
                            per virtual node group. Can be null. If set, the value
                            must be greater than or equal to 0.
                          type: number
                        minInstanceCount:
                          description: Option to set a minimum number of instances
                            per virtual node group. Can be null. If set, the value
                            must be greater than or equal to 0.
                          type: number
                      type: object
                    type: array
                  restrictScaleDown:
                    description: Boolean. When set to true, VNG nodes will be treated
                      as if all pods running have the restrict-scale-down label. Therefore,
                      Ocean will not scale nodes down unless empty.
                    type: boolean
                  rootVolumeSize:
                    description: Root volume size (in GB).
                    type: number
                  rootVolumeType:
                    description: 'Root volume disk type. Valid values: "pd-standard",
                      "pd-ssd".'
                    type: string
                  schedulingTask:
                    description: Used to define scheduled tasks such as a manual headroom
                      update.
                    items:
                      properties:
                        cronExpression:
                          description: 'A valid cron expression. For example : " *
                            * * * * ". The cron job runs in UTC time and is in Unix
                            cron format.'
                          type: string
                        isEnabled:
                          description: Describes whether the task is enabled. When
                            True, the task runs. When False, it does not run.
                          type: boolean
                        taskHeadroom:
                          description: The config of this scheduled task. Depends
                            on the value of taskType.
                          items:
                            properties:
                              cpuPerUnit:
                                description: Optionally configure the number of CPUs
                                  to allocate for each headroom unit. CPUs are denoted
                                  in millicores, where 1000 millicores = 1 vCPU.
                                type: number
                              gpuPerUnit:
                                description: Optionally configure the number of GPUS
                                  to allocate for each headroom unit.
                                type: number
                              memoryPerUnit:
                                description: Optionally configure the amount of memory
                                  (MiB) to allocate for each headroom unit.
                                type: number
                              numOfUnits:
                                description: The number of units to retain as headroom,
                                  where each unit has the defined headroom CPU, memory
                                  and GPU.
                                type: number
                            type: object
                          type: array
                        taskType:
                          description: 'The activity that you are scheduling. Valid
                            values: "manualHeadroomUpdate".'
                          type: string
                      type: object
                    type: array
                  serviceAccount:
                    description: The account used by applications running on the VM
                      to call GCP APIs.
                    type: string
                  shieldedInstanceConfig:
                    description: The Ocean shielded instance configuration object.
                    items:
                      properties:
                        enableIntegrityMonitoring:
                          description: Boolean. Enable the integrity monitoring parameter
                            on the GCP instances.
                          type: boolean
                        enableSecureBoot:
                          description: Boolean. Enable the secure boot parameter on
                            the GCP instances.
                          type: boolean
                      type: object
                    type: array
                  sourceImage:
                    description: Image URL.
                    type: string
                  storage:
                    description: The Ocean virtual node group storage object.
                    items:
                      properties:
                        localSsdCount:
                          description: Defines the number of local SSDs to be attached
                            per node for this VNG.
                          type: number
                      type: object
                    type: array
                  strategy:
                    description: The Ocean Launch Spec Strategy object.
                    items:
                      properties:
                        preemptiblePercentage:
                          description: Defines the desired preemptible percentage
                            for this launch specification.
                          type: number
                        scalingOrientation:
                          type: string
                      type: object
                    type: array
                  tags:
                    description: 'Every node launched from this configuration will
                      be tagged with those tags. Note: during creation some tags are
                      automatically imported to the state file, it is required to
                      manually add it to the template configuration'
                    items:
                      type: string
                    type: array
                  taints:
                    description: Optionally adds labels to instances launched in an
                      Ocean cluster.
                    items:
                      properties:
                        effect:
                          description: 'The effect of the taint. Valid values: "NoSchedule",
                            "PreferNoSchedule", "NoExecute".'
                          type: string
                        key:
                          description: The metadata key.
                          type: string
                        value:
                          description: The metadata value.
                          type: string
                      type: object
                    type: array
                  updatePolicy:
                    items:
                      properties:
                        rollConfig:
                          description: Holds the roll configuration.
                          items:
                            properties:
                              batchSizePercentage:
                                description: Sets the percentage of the instances
                                  to deploy in each batch.
                                type: number
                            type: object
                          type: array
                        shouldRoll:
                          description: Enables the roll.
                          type: boolean
                      type: object
                    type: array
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  autoscaleHeadrooms:
                    description: Set custom headroom per launch spec. provide list
                      of headrooms object.
                    items:
                      properties:
                        cpuPerUnit:
                          description: Optionally configure the number of CPUs to
                            allocate for each headroom unit. CPUs are denoted in millicores,
                            where 1000 millicores = 1 vCPU.
                          type: number
                        gpuPerUnit:
                          description: Optionally configure the number of GPUS to
                            allocate for each headroom unit.
                          type: number
                        memoryPerUnit:
                          description: Optionally configure the amount of memory (MiB)
                            to allocate for each headroom unit.
                          type: number
                        numOfUnits:
                          description: The number of units to retain as headroom,
                            where each unit has the defined headroom CPU, memory and
                            GPU.
                          type: number
                      type: object
                    type: array
                  autoscaleHeadroomsAutomatic:
                    description: Set automatic headroom per launch spec.
                    items:
                      properties:
                        autoHeadroomPercentage:
                          description: Number between 0-200 to control the headroom
                            % of the specific Virtual Node Group. Effective when cluster.autoScaler.headroom.automatic.is_enabled
                            = true is set on the Ocean cluster.
                          type: number
                      type: object
                    type: array
                  createOptions:
                    items:
                      properties:
                        initialNodes:
                          type: number
                      type: object
                    type: array
                  instanceTypes:
                    description: List of supported machine types for the Launch Spec.
                    items:
                      type: string
                    type: array
                  labels:
                    description: Optionally adds labels to instances launched in an
                      Ocean cluster.
                    items:
                      properties:
                        key:
                          description: The metadata key.
                          type: string
                        value:
                          description: The metadata value.
                          type: string
                      type: object
                    type: array
                  metadata:
                    description: Cluster's metadata.
                    items:
                      properties:
                        key:
                          description: The metadata key.
                          type: string
                        value:
                          description: The metadata value.
                          type: string
                      type: object
                    type: array
                  name:
                    description: The launch specification name.
                    type: string
                  networkInterfaces:
                    description: Settings for network interfaces.
                    items:
                      properties:
                        accessConfigs:
                          description: The network protocol of the VNG.
                          items:
                            properties:
                              name:
                                description: The launch specification name.
                                type: string
                              type:
                                description: The type of the access configuration.
                                type: string
                            type: object
                          type: array
                        aliasIpRanges:
                          description: use the imported node poolâ€™s associated aliasIpRange
                            to assign secondary IP addresses to the nodes. Cannot
                            be changed after VNG creation.
                          items:
                            properties:
                              ipCidrRange:
                                description: specify the IP address range in CIDR
                                  notation that can be used for the alias IP addresses
                                  associated with the imported node pool.
                                type: string
                              subnetworkRangeName:
                                description: specify the IP address range for the
                                  subnet secondary IP range.
                                type: string
                            type: object
                          type: array
                        network:
                          description: The name of the network.
                          type: string
                        projectId:
                          description: Use a network resource from a different project.
                            Set the project identifier to use its network resource.
                            This parameter is relevant only if the network resource
                            is in a different project.
                          type: string
                      type: object
                    type: array
                  nodePoolName:
                    description: The node pool you wish to use in your Launch Spec.
                    type: string
                  oceanId:
                    description: The Ocean cluster ID.
                    type: string
                  resourceLimits:
                    description: The Ocean virtual node group resource limits object.
                    items:
                      properties:
                        maxInstanceCount:
                          description: Option to set a maximum number of instances
                            per virtual node group. Can be null. If set, the value
                            must be greater than or equal to 0.
                          type: number
                        minInstanceCount:
                          description: Option to set a minimum number of instances
                            per virtual node group. Can be null. If set, the value
                            must be greater than or equal to 0.
                          type: number
                      type: object
                    type: array
                  restrictScaleDown:
                    description: Boolean. When set to true, VNG nodes will be treated
                      as if all pods running have the restrict-scale-down label. Therefore,
                      Ocean will not scale nodes down unless empty.
                    type: boolean
                  rootVolumeSize:
                    description: Root volume size (in GB).
                    type: number
                  rootVolumeType:
                    description: 'Root volume disk type. Valid values: "pd-standard",
                      "pd-ssd".'
                    type: string
                  schedulingTask:
                    description: Used to define scheduled tasks such as a manual headroom
                      update.
                    items:
                      properties:
                        cronExpression:
                          description: 'A valid cron expression. For example : " *
                            * * * * ". The cron job runs in UTC time and is in Unix
                            cron format.'
                          type: string
                        isEnabled:
                          description: Describes whether the task is enabled. When
                            True, the task runs. When False, it does not run.
                          type: boolean
                        taskHeadroom:
                          description: The config of this scheduled task. Depends
                            on the value of taskType.
                          items:
                            properties:
                              cpuPerUnit:
                                description: Optionally configure the number of CPUs
                                  to allocate for each headroom unit. CPUs are denoted
                                  in millicores, where 1000 millicores = 1 vCPU.
                                type: number
                              gpuPerUnit:
                                description: Optionally configure the number of GPUS
                                  to allocate for each headroom unit.
                                type: number
                              memoryPerUnit:
                                description: Optionally configure the amount of memory
                                  (MiB) to allocate for each headroom unit.
                                type: number
                              numOfUnits:
                                description: The number of units to retain as headroom,
                                  where each unit has the defined headroom CPU, memory
                                  and GPU.
                                type: number
                            type: object
                          type: array
                        taskType:
                          description: 'The activity that you are scheduling. Valid
                            values: "manualHeadroomUpdate".'
                          type: string
                      type: object
                    type: array
                  serviceAccount:
                    description: The account used by applications running on the VM
                      to call GCP APIs.
                    type: string
                  shieldedInstanceConfig:
                    description: The Ocean shielded instance configuration object.
                    items:
                      properties:
                        enableIntegrityMonitoring:
                          description: Boolean. Enable the integrity monitoring parameter
                            on the GCP instances.
                          type: boolean
                        enableSecureBoot:
                          description: Boolean. Enable the secure boot parameter on
                            the GCP instances.
                          type: boolean
                      type: object
                    type: array
                  sourceImage:
                    description: Image URL.
                    type: string
                  storage:
                    description: The Ocean virtual node group storage object.
                    items:
                      properties:
                        localSsdCount:
                          description: Defines the number of local SSDs to be attached
                            per node for this VNG.
                          type: number
                      type: object
                    type: array
                  strategy:
                    description: The Ocean Launch Spec Strategy object.
                    items:
                      properties:
                        preemptiblePercentage:
                          description: Defines the desired preemptible percentage
                            for this launch specification.
                          type: number
                        scalingOrientation:
                          type: string
                      type: object
                    type: array
                  tags:
                    description: 'Every node launched from this configuration will
                      be tagged with those tags. Note: during creation some tags are
                      automatically imported to the state file, it is required to
                      manually add it to the template configuration'
                    items:
                      type: string
                    type: array
                  taints:
                    description: Optionally adds labels to instances launched in an
                      Ocean cluster.
                    items:
                      properties:
                        effect:
                          description: 'The effect of the taint. Valid values: "NoSchedule",
                            "PreferNoSchedule", "NoExecute".'
                          type: string
                        key:
                          description: The metadata key.
                          type: string
                        value:
                          description: The metadata value.
                          type: string
                      type: object
                    type: array
                  updatePolicy:
                    items:
                      properties:
                        rollConfig:
                          description: Holds the roll configuration.
                          items:
                            properties:
                              batchSizePercentage:
                                description: Sets the percentage of the instances
                                  to deploy in each batch.
                                type: number
                            type: object
                          type: array
                        shouldRoll:
                          description: Enables the roll.
                          type: boolean
                      type: object
                    type: array
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.oceanId is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.oceanId)
                || (has(self.initProvider) && has(self.initProvider.oceanId))'
          status:
            description: OceanGkeVngStatus defines the observed state of OceanGkeVng.
            properties:
              atProvider:
                properties:
                  autoscaleHeadrooms:
                    description: Set custom headroom per launch spec. provide list
                      of headrooms object.
                    items:
                      properties:
                        cpuPerUnit:
                          description: Optionally configure the number of CPUs to
                            allocate for each headroom unit. CPUs are denoted in millicores,
                            where 1000 millicores = 1 vCPU.
                          type: number
                        gpuPerUnit:
                          description: Optionally configure the number of GPUS to
                            allocate for each headroom unit.
                          type: number
                        memoryPerUnit:
                          description: Optionally configure the amount of memory (MiB)
                            to allocate for each headroom unit.
                          type: number
                        numOfUnits:
                          description: The number of units to retain as headroom,
                            where each unit has the defined headroom CPU, memory and
                            GPU.
                          type: number
                      type: object
                    type: array
                  autoscaleHeadroomsAutomatic:
                    description: Set automatic headroom per launch spec.
                    items:
                      properties:
                        autoHeadroomPercentage:
                          description: Number between 0-200 to control the headroom
                            % of the specific Virtual Node Group. Effective when cluster.autoScaler.headroom.automatic.is_enabled
                            = true is set on the Ocean cluster.
                          type: number
                      type: object
                    type: array
                  createOptions:
                    items:
                      properties:
                        initialNodes:
                          type: number
                      type: object
                    type: array
                  id:
                    description: The Spotinst LaunchSpec ID.
                    type: string
                  instanceTypes:
                    description: List of supported machine types for the Launch Spec.
                    items:
                      type: string
                    type: array
                  labels:
                    description: Optionally adds labels to instances launched in an
                      Ocean cluster.
                    items:
                      properties:
                        key:
                          description: The metadata key.
                          type: string
                        value:
                          description: The metadata value.
                          type: string
                      type: object
                    type: array
                  metadata:
                    description: Cluster's metadata.
                    items:
                      properties:
                        key:
                          description: The metadata key.
                          type: string
                        value:
                          description: The metadata value.
                          type: string
                      type: object
                    type: array
                  name:
                    description: The launch specification name.
                    type: string
                  networkInterfaces:
                    description: Settings for network interfaces.
                    items:
                      properties:
                        accessConfigs:
                          description: The network protocol of the VNG.
                          items:
                            properties:
                              name:
                                description: The launch specification name.
                                type: string
                              type:
                                description: The type of the access configuration.
                                type: string
                            type: object
                          type: array
                        aliasIpRanges:
                          description: use the imported node poolâ€™s associated aliasIpRange
                            to assign secondary IP addresses to the nodes. Cannot
                            be changed after VNG creation.
                          items:
                            properties:
                              ipCidrRange:
                                description: specify the IP address range in CIDR
                                  notation that can be used for the alias IP addresses
                                  associated with the imported node pool.
                                type: string
                              subnetworkRangeName:
                                description: specify the IP address range for the
                                  subnet secondary IP range.
                                type: string
                            type: object
                          type: array
                        network:
                          description: The name of the network.
                          type: string
                        projectId:
                          description: Use a network resource from a different project.
                            Set the project identifier to use its network resource.
                            This parameter is relevant only if the network resource
                            is in a different project.
                          type: string
                      type: object
                    type: array
                  nodePoolName:
                    description: The node pool you wish to use in your Launch Spec.
                    type: string
                  oceanId:
                    description: The Ocean cluster ID.
                    type: string
                  resourceLimits:
                    description: The Ocean virtual node group resource limits object.
                    items:
                      properties:
                        maxInstanceCount:
                          description: Option to set a maximum number of instances
                            per virtual node group. Can be null. If set, the value
                            must be greater than or equal to 0.
                          type: number
                        minInstanceCount:
                          description: Option to set a minimum number of instances
                            per virtual node group. Can be null. If set, the value
                            must be greater than or equal to 0.
                          type: number
                      type: object
                    type: array
                  restrictScaleDown:
                    description: Boolean. When set to true, VNG nodes will be treated
                      as if all pods running have the restrict-scale-down label. Therefore,
                      Ocean will not scale nodes down unless empty.
                    type: boolean
                  rootVolumeSize:
                    description: Root volume size (in GB).
                    type: number
                  rootVolumeType:
                    description: 'Root volume disk type. Valid values: "pd-standard",
                      "pd-ssd".'
                    type: string
                  schedulingTask:
                    description: Used to define scheduled tasks such as a manual headroom
                      update.
                    items:
                      properties:
                        cronExpression:
                          description: 'A valid cron expression. For example : " *
                            * * * * ". The cron job runs in UTC time and is in Unix
                            cron format.'
                          type: string
                        isEnabled:
                          description: Describes whether the task is enabled. When
                            True, the task runs. When False, it does not run.
                          type: boolean
                        taskHeadroom:
                          description: The config of this scheduled task. Depends
                            on the value of taskType.
                          items:
                            properties:
                              cpuPerUnit:
                                description: Optionally configure the number of CPUs
                                  to allocate for each headroom unit. CPUs are denoted
                                  in millicores, where 1000 millicores = 1 vCPU.
                                type: number
                              gpuPerUnit:
                                description: Optionally configure the number of GPUS
                                  to allocate for each headroom unit.
                                type: number
                              memoryPerUnit:
                                description: Optionally configure the amount of memory
                                  (MiB) to allocate for each headroom unit.
                                type: number
                              numOfUnits:
                                description: The number of units to retain as headroom,
                                  where each unit has the defined headroom CPU, memory
                                  and GPU.
                                type: number
                            type: object
                          type: array
                        taskType:
                          description: 'The activity that you are scheduling. Valid
                            values: "manualHeadroomUpdate".'
                          type: string
                      type: object
                    type: array
                  serviceAccount:
                    description: The account used by applications running on the VM
                      to call GCP APIs.
                    type: string
                  shieldedInstanceConfig:
                    description: The Ocean shielded instance configuration object.
                    items:
                      properties:
                        enableIntegrityMonitoring:
                          description: Boolean. Enable the integrity monitoring parameter
                            on the GCP instances.
                          type: boolean
                        enableSecureBoot:
                          description: Boolean. Enable the secure boot parameter on
                            the GCP instances.
                          type: boolean
                      type: object
                    type: array
                  sourceImage:
                    description: Image URL.
                    type: string
                  storage:
                    description: The Ocean virtual node group storage object.
                    items:
                      properties:
                        localSsdCount:
                          description: Defines the number of local SSDs to be attached
                            per node for this VNG.
                          type: number
                      type: object
                    type: array
                  strategy:
                    description: The Ocean Launch Spec Strategy object.
                    items:
                      properties:
                        preemptiblePercentage:
                          description: Defines the desired preemptible percentage
                            for this launch specification.
                          type: number
                        scalingOrientation:
                          type: string
                      type: object
                    type: array
                  tags:
                    description: 'Every node launched from this configuration will
                      be tagged with those tags. Note: during creation some tags are
                      automatically imported to the state file, it is required to
                      manually add it to the template configuration'
                    items:
                      type: string
                    type: array
                  taints:
                    description: Optionally adds labels to instances launched in an
                      Ocean cluster.
                    items:
                      properties:
                        effect:
                          description: 'The effect of the taint. Valid values: "NoSchedule",
                            "PreferNoSchedule", "NoExecute".'
                          type: string
                        key:
                          description: The metadata key.
                          type: string
                        value:
                          description: The metadata value.
                          type: string
                      type: object
                    type: array
                  updatePolicy:
                    items:
                      properties:
                        rollConfig:
                          description: Holds the roll configuration.
                          items:
                            properties:
                              batchSizePercentage:
                                description: Sets the percentage of the instances
                                  to deploy in each batch.
                                type: number
                            type: object
                          type: array
                        shouldRoll:
                          description: Enables the roll.
                          type: boolean
                      type: object
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
