---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: oceanawslaunchspecs.oceanawslaunchspec.spot.upbound.io
spec:
  group: oceanawslaunchspec.spot.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - spot
    kind: OceanAwsLaunchSpec
    listKind: OceanAwsLaunchSpecList
    plural: oceanawslaunchspecs
    singular: oceanawslaunchspec
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: OceanAwsLaunchSpec is the Schema for the OceanAwsLaunchSpecs
          API. Provides a Spotinst Virtual Node Group resource using AWS.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: OceanAwsLaunchSpecSpec defines the desired state of OceanAwsLaunchSpec
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  associatePublicIpAddress:
                    description: Configure public IP address allocation.
                    type: boolean
                  autoscaleDown:
                    description: Auto Scaling scale down operations.
                    items:
                      properties:
                        maxScaleDownPercentage:
                          description: The maximum percentage allowed to scale down
                            in a single scaling action on the nodes running in a specific
                            VNG. Allowed only if maxScaleDownPercentage is set to
                            null at the cluster level. Number between [0.1-100].
                          type: number
                      type: object
                    type: array
                  autoscaleHeadrooms:
                    description: Set custom headroom per Virtual Node Group. Provide
                      a list of headrooms object.
                    items:
                      properties:
                        cpuPerUnit:
                          description: Optionally configure the number of CPUs to
                            allocate for each headroom unit. CPUs are denoted in millicores,
                            where 1000 millicores = 1 vCPU.
                          type: number
                        gpuPerUnit:
                          description: Optionally configure the number of GPUS to
                            allocate for each headroom unit.
                          type: number
                        memoryPerUnit:
                          description: Optionally configure the amount of memory (MiB)
                            to allocate for each headroom unit.
                          type: number
                        numOfUnits:
                          description: The number of units to retain as headroom,
                            where each unit has the defined headroom CPU, memory and
                            GPU.
                          type: number
                      type: object
                    type: array
                  autoscaleHeadroomsAutomatic:
                    description: Set automatic headroom per launch spec.
                    items:
                      properties:
                        autoHeadroomPercentage:
                          description: Number between 0-200 to control the headroom
                            % of the specific Virtual Node Group. Effective when cluster.autoScaler.headroom.automatic.is_enabled
                            = true is set on the Ocean cluster.
                          type: number
                      type: object
                    type: array
                  blockDeviceMappings:
                    description: Object. Array list of block devices that are exposed
                      to the instance, specify either virtual devices and EBS volumes.
                    items:
                      properties:
                        deviceName:
                          description: 'String. Set device name. (Example: /dev/xvda).'
                          type: string
                        ebs:
                          description: Object. Set Elastic Block Store properties
                            .
                          items:
                            properties:
                              deleteOnTermination:
                                description: Boolean. Flag to delete the EBS on instance
                                  termination.
                                type: boolean
                              dynamicVolumeSize:
                                description: Object. Set dynamic volume size properties.
                                  When using this object, you cannot use volumeSize.
                                  You must use one or the other.
                                items:
                                  properties:
                                    baseSize:
                                      description: 'Int. Initial size for volume.
                                        (Example: 50)'
                                      type: number
                                    resource:
                                      description: 'String. Resource type to increase
                                        volume size dynamically by. (Valid values:
                                        CPU)'
                                      type: string
                                    sizePerResourceUnit:
                                      description: 'Int. Additional size (in GB) per
                                        resource unit. (Example: baseSize=50, sizePerResourceUnit=20,
                                        and instance with 2 CPU is launched; its total
                                        disk size will be: 90GB)'
                                      type: number
                                  type: object
                                type: array
                              encrypted:
                                description: Boolean. Enables EBS encryption on the
                                  volume.
                                type: boolean
                              iops:
                                description: Int. The number of I/O operations per
                                  second (IOPS) that the volume supports.
                                type: number
                              kmsKeyId:
                                description: String. Identifier (key ID, key alias,
                                  ID ARN, or alias ARN) for a customer managed CMK
                                  under which the EBS volume is encrypted.
                                type: string
                              snapshotId:
                                description: String. The Snapshot ID to mount by.
                                type: string
                              throughput:
                                description: The amount of data transferred to or
                                  from a storage device per second, you can use this
                                  param just in a case that volume_type = gp3.
                                type: number
                              volumeSize:
                                description: Int. The size, in GB of the volume.
                                type: number
                              volumeType:
                                description: 'String. The type of the volume. (Example:
                                  gp2).'
                                type: string
                            type: object
                          type: array
                        noDevice:
                          description: String. Suppresses the specified device included
                            in the block device mapping of the AMI.
                          type: string
                        virtualName:
                          description: The name of the Virtual Node Group.
                          type: string
                      type: object
                    type: array
                  createOptions:
                    items:
                      properties:
                        initialNodes:
                          description: When set to an integer greater than 0, a corresponding
                            amount of nodes will be launched from the created Virtual
                            Node Group. The parameter is recommended in case the use_as_template_only
                            (in spotinst_ocean_aws resource) is set to true during
                            Ocean resource creation.
                          type: number
                      type: object
                    type: array
                  deleteOptions:
                    items:
                      properties:
                        deleteNodes:
                          description: When set to "true", all instances belonging
                            to the deleted launch specification will be drained, detached,
                            and terminated.
                          type: boolean
                        forceDelete:
                          description: When set to true, delete even if it is the
                            last Virtual Node Group (also, the default Virtual Node
                            Group must be configured with useAsTemlateOnly = true).
                            Should be set at creation or update, but will be used
                            only at deletion.
                          type: boolean
                      type: object
                    type: array
                  elasticIpPool:
                    description: Assign an Elastic IP to the instances spun by the
                      Virtual Node Group. Can be null.
                    items:
                      properties:
                        tagSelector:
                          description: A key-value pair, which defines an Elastic
                            IP from the customer pool. Can be null.
                          items:
                            properties:
                              tagKey:
                                description: Elastic IP tag key. The Virtual Node
                                  Group will consider all Elastic IPs tagged with
                                  this tag as a part of the Elastic IP pool to use.
                                type: string
                              tagValue:
                                description: Elastic IP tag value. Can be null.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  ephemeralStorage:
                    items:
                      properties:
                        ephemeralStorageDeviceName:
                          description: Specify an alternative device name from which
                            ephemeral storage calculations should be derived. This
                            parameter is used when the ephemeral storage should not
                            utilize the root device. Provide the device name configured
                            in the VNG's BDM or AMI's BDM that differs from the default
                            root device.
                          type: string
                      type: object
                    type: array
                  iamInstanceProfile:
                    description: The ARN or name of an IAM instance profile to associate
                      with launched instances.
                    type: string
                  imageId:
                    description: ID of the image used to launch the instances.
                    type: string
                  images:
                    description: |-
                      Array of objects (Image object, containing the id of the image used to launch instances.) You can configure VNG with either the imageId or images objects, but not both simultaneously.
                      For each architecture type (amd64, arm64) only one AMI is allowed. Valid values: null, or an array with at least one element.
                    items:
                      properties:
                        imageId:
                          description: ID of the image used to launch the instances.
                          type: string
                      type: object
                    type: array
                  instanceMetadataOptions:
                    description: Ocean instance metadata options object for IMDSv2.
                    items:
                      properties:
                        httpPutResponseHopLimit:
                          description: An integer from 1 through 64. The desired HTTP
                            PUT response hop limit for instance metadata requests.
                            The larger the number, the further the instance metadata
                            requests can travel.
                          type: number
                        httpTokens:
                          description: 'Determines if a signed token is required or
                            not. Valid values: optional or required.'
                          type: string
                      type: object
                    type: array
                  instanceStorePolicy:
                    items:
                      properties:
                        instanceStorePolicyType:
                          type: string
                      type: object
                    type: array
                  instanceTypes:
                    description: A list of instance types allowed to be provisioned
                      for pods pending under the specified launch specification. The
                      list overrides the list defined for the cluster.
                    items:
                      type: string
                    type: array
                  instanceTypesFilters:
                    description: |-
                      The instance types that match with all filters compose the Virtual Node Group's instanceTypes parameter.
                      The architectures that come from the Virtual Node Group's images will be taken into account when using this parameter. Cannot be configured together with Virtual Node Group's instanceTypes and with the Cluster's whitelist/blacklist/filters.
                    items:
                      properties:
                        categories:
                          description: 'The filtered instance types will belong to
                            one of the categories types from this list. Valid values:
                            Accelerated_computing, Compute_optimized, General_purpose,
                            Memory_optimized, Storage_optimized.'
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        diskTypes:
                          description: 'The filtered instance types will have one
                            of the disk type from this list. Valid values: NVMe, EBS,
                            SSD, HDD.'
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        excludeFamilies:
                          description: 'Types belonging to a family from the ExcludeFamilies
                            will not be available for scaling (asterisk wildcard is
                            also supported). For example, C* will exclude instance
                            types from these families: c5, c4, c4a, etc.'
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        excludeMetal:
                          description: In case excludeMetal is set to true, metal
                            types will not be available for scaling.
                          type: boolean
                        hypervisor:
                          description: 'The filtered instance types will have a hypervisor
                            type from this list. Valid values: nitro, xen.'
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        includeFamilies:
                          description: 'Types belonging to a family from the IncludeFamilies
                            will be available for scaling (asterisk wildcard is also
                            supported). For example, C* will include instance types
                            from these families: c5, c4, c4a, etc.'
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        isEnaSupported:
                          description: Ena is supported or not.
                          type: string
                        maxGpu:
                          description: Maximum total number of GPUs.
                          type: number
                        maxMemoryGib:
                          description: Maximum amount of Memory (GiB).
                          type: number
                        maxNetworkPerformance:
                          description: Maximum Bandwidth in Gib/s of network performance.
                          type: number
                        maxVcpu:
                          description: Maximum number of vcpus available.
                          type: number
                        minEnis:
                          description: Minimum number of network interfaces (ENIs).
                          type: number
                        minGpu:
                          description: Minimum total number of GPUs.
                          type: number
                        minMemoryGib:
                          description: Minimum amount of Memory (GiB).
                          type: number
                        minNetworkPerformance:
                          description: Minimum Bandwidth in Gib/s of network performance.
                          type: number
                        minVcpu:
                          description: Minimum number of vcpus available.
                          type: number
                        rootDeviceTypes:
                          description: 'The filtered instance types will have a root
                            device types from this list. Valid values: ebs, or instance-store.'
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        virtualizationTypes:
                          description: 'The filtered instance types will support at
                            least one of the virtualization types from this list.
                            Valid values: hvm, paravirtual.'
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                      type: object
                    type: array
                  labels:
                    description: Optionally adds labels to instances launched in the
                      cluster.
                    items:
                      properties:
                        key:
                          description: The label key.
                          type: string
                        value:
                          description: The label value.
                          type: string
                      type: object
                    type: array
                  name:
                    description: The name of the Virtual Node Group.
                    type: string
                  oceanId:
                    description: The ID of the Ocean cluster.
                    type: string
                  preferredOdTypes:
                    description: A list of instance types. Takes the preferred types
                      into consideration while maintaining a variety of machine types
                      running for optimized distribution.
                    items:
                      type: string
                    type: array
                  preferredSpotTypes:
                    description: A list of instance types. Takes the preferred types
                      into consideration while maintaining a variety of machine types
                      running for optimized distribution.
                    items:
                      type: string
                    type: array
                  reservedEnis:
                    description: Specifies the count of ENIs to reserve per instance
                      type for scaling purposes.
                    type: number
                  resourceLimits:
                    items:
                      properties:
                        maxInstanceCount:
                          description: Set a maximum number of instances per Virtual
                            Node Group. Can be null. If set, value must be greater
                            than or equal to 0.
                          type: number
                        minInstanceCount:
                          description: Set a minimum number of instances per Virtual
                            Node Group. Can be null. If set, value must be greater
                            than or equal to 0.
                          type: number
                      type: object
                    type: array
                  restrictScaleDown:
                    description: Boolean. When set to true, nodes will be treated
                      as if all pods running have the restrict-scale-down label. Therefore,
                      Ocean will not scale nodes down unless empty.
                    type: boolean
                  rootVolumeSize:
                    description: Set root volume size (in GB).
                    type: number
                  schedulingShutdownHours:
                    description: Used to specify times that the nodes in the virtual
                      node group will be taken down.
                    items:
                      properties:
                        isEnabled:
                          description: Describes whether the task is enabled. When
                            true, the task runs. When false, it does not run.
                          type: boolean
                        timeWindows:
                          description: The times that the shutdown hours will apply.
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                  schedulingTask:
                    description: Used to define scheduled tasks such as a manual headroom
                      update.
                    items:
                      properties:
                        cronExpression:
                          description: 'A valid cron expression. For example : " *
                            * * * * ". The cron job runs in UTC time and is in Unix
                            cron format.'
                          type: string
                        isEnabled:
                          description: Describes whether the task is enabled. When
                            true, the task runs. When false, it does not run.
                          type: boolean
                        taskHeadroom:
                          description: The config of this scheduled task. Depends
                            on the value of taskType.
                          items:
                            properties:
                              cpuPerUnit:
                                description: Optionally configure the number of CPUs
                                  to allocate for each headroom unit. CPUs are denoted
                                  in millicores, where 1000 millicores = 1 vCPU.
                                type: number
                              gpuPerUnit:
                                description: Optionally configure the number of GPUS
                                  to allocate for each headroom unit.
                                type: number
                              memoryPerUnit:
                                description: Optionally configure the amount of memory
                                  (MiB) to allocate for each headroom unit.
                                type: number
                              numOfUnits:
                                description: The number of units to retain as headroom,
                                  where each unit has the defined headroom CPU, memory
                                  and GPU.
                                type: number
                            type: object
                          type: array
                        taskType:
                          description: 'The activity that you are scheduling. Valid
                            values: "manualHeadroomUpdate".'
                          type: string
                      type: object
                    type: array
                  securityGroups:
                    description: Optionally adds security group IDs.
                    items:
                      type: string
                    type: array
                  strategy:
                    items:
                      properties:
                        drainingTimeout:
                          description: The configurable amount of time that Ocean
                            will wait for the draining process to complete before
                            terminating an instance. If you have not defined a draining
                            timeout, the default of 300 seconds will be used.
                          type: number
                        spotPercentage:
                          description: The desired percentage of the Spot instances
                            out of all running instances for this VNG. Only available
                            when the field is not set in the cluster directly (cluster.strategy.spotPercentage).
                          type: number
                        utilizeCommitments:
                          description: When set as ‘true’, if savings plans commitments
                            have available capacity, Ocean will utilize them alongside
                            RIs (if exist) to maximize cost efficiency. If the value
                            is set as 'null', it will automatically be inherited from
                            the cluster level.
                          type: boolean
                        utilizeReservedInstances:
                          description: When set as ‘true’, if reserved instances exist,
                            Ocean will utilize them before launching spot instances.
                            If the value is set as 'null', it will automatically be
                            inherited from the cluster level.
                          type: boolean
                      type: object
                    type: array
                  subnetIds:
                    description: A list of subnet IDs.
                    items:
                      type: string
                    type: array
                  tags:
                    description: A key/value mapping of tags to assign to the resource.
                    items:
                      properties:
                        key:
                          description: The label key.
                          type: string
                        value:
                          description: The label value.
                          type: string
                      type: object
                    type: array
                  taints:
                    description: Optionally adds labels to instances launched in the
                      cluster.
                    items:
                      properties:
                        effect:
                          description: 'The effect of the taint. Valid values: "NoSchedule",
                            "PreferNoSchedule", "NoExecute".'
                          type: string
                        key:
                          description: The label key.
                          type: string
                        value:
                          description: The label value.
                          type: string
                      type: object
                    type: array
                  updatePolicy:
                    items:
                      properties:
                        rollConfig:
                          description: Holds the roll configuration.
                          items:
                            properties:
                              batchSizePercentage:
                                description: Sets the percentage of the instances
                                  to deploy in each batch.
                                type: number
                              respectPdb:
                                description: During the roll, if the parameter is
                                  set to true we honor PDB during the instance replacement.
                                type: boolean
                            type: object
                          type: array
                        shouldRoll:
                          description: Enables the roll.
                          type: boolean
                      type: object
                    type: array
                  userData:
                    description: Base64-encoded MIME user data to make available to
                      the instances.
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  associatePublicIpAddress:
                    description: Configure public IP address allocation.
                    type: boolean
                  autoscaleDown:
                    description: Auto Scaling scale down operations.
                    items:
                      properties:
                        maxScaleDownPercentage:
                          description: The maximum percentage allowed to scale down
                            in a single scaling action on the nodes running in a specific
                            VNG. Allowed only if maxScaleDownPercentage is set to
                            null at the cluster level. Number between [0.1-100].
                          type: number
                      type: object
                    type: array
                  autoscaleHeadrooms:
                    description: Set custom headroom per Virtual Node Group. Provide
                      a list of headrooms object.
                    items:
                      properties:
                        cpuPerUnit:
                          description: Optionally configure the number of CPUs to
                            allocate for each headroom unit. CPUs are denoted in millicores,
                            where 1000 millicores = 1 vCPU.
                          type: number
                        gpuPerUnit:
                          description: Optionally configure the number of GPUS to
                            allocate for each headroom unit.
                          type: number
                        memoryPerUnit:
                          description: Optionally configure the amount of memory (MiB)
                            to allocate for each headroom unit.
                          type: number
                        numOfUnits:
                          description: The number of units to retain as headroom,
                            where each unit has the defined headroom CPU, memory and
                            GPU.
                          type: number
                      type: object
                    type: array
                  autoscaleHeadroomsAutomatic:
                    description: Set automatic headroom per launch spec.
                    items:
                      properties:
                        autoHeadroomPercentage:
                          description: Number between 0-200 to control the headroom
                            % of the specific Virtual Node Group. Effective when cluster.autoScaler.headroom.automatic.is_enabled
                            = true is set on the Ocean cluster.
                          type: number
                      type: object
                    type: array
                  blockDeviceMappings:
                    description: Object. Array list of block devices that are exposed
                      to the instance, specify either virtual devices and EBS volumes.
                    items:
                      properties:
                        deviceName:
                          description: 'String. Set device name. (Example: /dev/xvda).'
                          type: string
                        ebs:
                          description: Object. Set Elastic Block Store properties
                            .
                          items:
                            properties:
                              deleteOnTermination:
                                description: Boolean. Flag to delete the EBS on instance
                                  termination.
                                type: boolean
                              dynamicVolumeSize:
                                description: Object. Set dynamic volume size properties.
                                  When using this object, you cannot use volumeSize.
                                  You must use one or the other.
                                items:
                                  properties:
                                    baseSize:
                                      description: 'Int. Initial size for volume.
                                        (Example: 50)'
                                      type: number
                                    resource:
                                      description: 'String. Resource type to increase
                                        volume size dynamically by. (Valid values:
                                        CPU)'
                                      type: string
                                    sizePerResourceUnit:
                                      description: 'Int. Additional size (in GB) per
                                        resource unit. (Example: baseSize=50, sizePerResourceUnit=20,
                                        and instance with 2 CPU is launched; its total
                                        disk size will be: 90GB)'
                                      type: number
                                  type: object
                                type: array
                              encrypted:
                                description: Boolean. Enables EBS encryption on the
                                  volume.
                                type: boolean
                              iops:
                                description: Int. The number of I/O operations per
                                  second (IOPS) that the volume supports.
                                type: number
                              kmsKeyId:
                                description: String. Identifier (key ID, key alias,
                                  ID ARN, or alias ARN) for a customer managed CMK
                                  under which the EBS volume is encrypted.
                                type: string
                              snapshotId:
                                description: String. The Snapshot ID to mount by.
                                type: string
                              throughput:
                                description: The amount of data transferred to or
                                  from a storage device per second, you can use this
                                  param just in a case that volume_type = gp3.
                                type: number
                              volumeSize:
                                description: Int. The size, in GB of the volume.
                                type: number
                              volumeType:
                                description: 'String. The type of the volume. (Example:
                                  gp2).'
                                type: string
                            type: object
                          type: array
                        noDevice:
                          description: String. Suppresses the specified device included
                            in the block device mapping of the AMI.
                          type: string
                        virtualName:
                          description: The name of the Virtual Node Group.
                          type: string
                      type: object
                    type: array
                  createOptions:
                    items:
                      properties:
                        initialNodes:
                          description: When set to an integer greater than 0, a corresponding
                            amount of nodes will be launched from the created Virtual
                            Node Group. The parameter is recommended in case the use_as_template_only
                            (in spotinst_ocean_aws resource) is set to true during
                            Ocean resource creation.
                          type: number
                      type: object
                    type: array
                  deleteOptions:
                    items:
                      properties:
                        deleteNodes:
                          description: When set to "true", all instances belonging
                            to the deleted launch specification will be drained, detached,
                            and terminated.
                          type: boolean
                        forceDelete:
                          description: When set to true, delete even if it is the
                            last Virtual Node Group (also, the default Virtual Node
                            Group must be configured with useAsTemlateOnly = true).
                            Should be set at creation or update, but will be used
                            only at deletion.
                          type: boolean
                      type: object
                    type: array
                  elasticIpPool:
                    description: Assign an Elastic IP to the instances spun by the
                      Virtual Node Group. Can be null.
                    items:
                      properties:
                        tagSelector:
                          description: A key-value pair, which defines an Elastic
                            IP from the customer pool. Can be null.
                          items:
                            properties:
                              tagKey:
                                description: Elastic IP tag key. The Virtual Node
                                  Group will consider all Elastic IPs tagged with
                                  this tag as a part of the Elastic IP pool to use.
                                type: string
                              tagValue:
                                description: Elastic IP tag value. Can be null.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  ephemeralStorage:
                    items:
                      properties:
                        ephemeralStorageDeviceName:
                          description: Specify an alternative device name from which
                            ephemeral storage calculations should be derived. This
                            parameter is used when the ephemeral storage should not
                            utilize the root device. Provide the device name configured
                            in the VNG's BDM or AMI's BDM that differs from the default
                            root device.
                          type: string
                      type: object
                    type: array
                  iamInstanceProfile:
                    description: The ARN or name of an IAM instance profile to associate
                      with launched instances.
                    type: string
                  imageId:
                    description: ID of the image used to launch the instances.
                    type: string
                  images:
                    description: |-
                      Array of objects (Image object, containing the id of the image used to launch instances.) You can configure VNG with either the imageId or images objects, but not both simultaneously.
                      For each architecture type (amd64, arm64) only one AMI is allowed. Valid values: null, or an array with at least one element.
                    items:
                      properties:
                        imageId:
                          description: ID of the image used to launch the instances.
                          type: string
                      type: object
                    type: array
                  instanceMetadataOptions:
                    description: Ocean instance metadata options object for IMDSv2.
                    items:
                      properties:
                        httpPutResponseHopLimit:
                          description: An integer from 1 through 64. The desired HTTP
                            PUT response hop limit for instance metadata requests.
                            The larger the number, the further the instance metadata
                            requests can travel.
                          type: number
                        httpTokens:
                          description: 'Determines if a signed token is required or
                            not. Valid values: optional or required.'
                          type: string
                      type: object
                    type: array
                  instanceStorePolicy:
                    items:
                      properties:
                        instanceStorePolicyType:
                          type: string
                      type: object
                    type: array
                  instanceTypes:
                    description: A list of instance types allowed to be provisioned
                      for pods pending under the specified launch specification. The
                      list overrides the list defined for the cluster.
                    items:
                      type: string
                    type: array
                  instanceTypesFilters:
                    description: |-
                      The instance types that match with all filters compose the Virtual Node Group's instanceTypes parameter.
                      The architectures that come from the Virtual Node Group's images will be taken into account when using this parameter. Cannot be configured together with Virtual Node Group's instanceTypes and with the Cluster's whitelist/blacklist/filters.
                    items:
                      properties:
                        categories:
                          description: 'The filtered instance types will belong to
                            one of the categories types from this list. Valid values:
                            Accelerated_computing, Compute_optimized, General_purpose,
                            Memory_optimized, Storage_optimized.'
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        diskTypes:
                          description: 'The filtered instance types will have one
                            of the disk type from this list. Valid values: NVMe, EBS,
                            SSD, HDD.'
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        excludeFamilies:
                          description: 'Types belonging to a family from the ExcludeFamilies
                            will not be available for scaling (asterisk wildcard is
                            also supported). For example, C* will exclude instance
                            types from these families: c5, c4, c4a, etc.'
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        excludeMetal:
                          description: In case excludeMetal is set to true, metal
                            types will not be available for scaling.
                          type: boolean
                        hypervisor:
                          description: 'The filtered instance types will have a hypervisor
                            type from this list. Valid values: nitro, xen.'
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        includeFamilies:
                          description: 'Types belonging to a family from the IncludeFamilies
                            will be available for scaling (asterisk wildcard is also
                            supported). For example, C* will include instance types
                            from these families: c5, c4, c4a, etc.'
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        isEnaSupported:
                          description: Ena is supported or not.
                          type: string
                        maxGpu:
                          description: Maximum total number of GPUs.
                          type: number
                        maxMemoryGib:
                          description: Maximum amount of Memory (GiB).
                          type: number
                        maxNetworkPerformance:
                          description: Maximum Bandwidth in Gib/s of network performance.
                          type: number
                        maxVcpu:
                          description: Maximum number of vcpus available.
                          type: number
                        minEnis:
                          description: Minimum number of network interfaces (ENIs).
                          type: number
                        minGpu:
                          description: Minimum total number of GPUs.
                          type: number
                        minMemoryGib:
                          description: Minimum amount of Memory (GiB).
                          type: number
                        minNetworkPerformance:
                          description: Minimum Bandwidth in Gib/s of network performance.
                          type: number
                        minVcpu:
                          description: Minimum number of vcpus available.
                          type: number
                        rootDeviceTypes:
                          description: 'The filtered instance types will have a root
                            device types from this list. Valid values: ebs, or instance-store.'
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        virtualizationTypes:
                          description: 'The filtered instance types will support at
                            least one of the virtualization types from this list.
                            Valid values: hvm, paravirtual.'
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                      type: object
                    type: array
                  labels:
                    description: Optionally adds labels to instances launched in the
                      cluster.
                    items:
                      properties:
                        key:
                          description: The label key.
                          type: string
                        value:
                          description: The label value.
                          type: string
                      type: object
                    type: array
                  name:
                    description: The name of the Virtual Node Group.
                    type: string
                  oceanId:
                    description: The ID of the Ocean cluster.
                    type: string
                  preferredOdTypes:
                    description: A list of instance types. Takes the preferred types
                      into consideration while maintaining a variety of machine types
                      running for optimized distribution.
                    items:
                      type: string
                    type: array
                  preferredSpotTypes:
                    description: A list of instance types. Takes the preferred types
                      into consideration while maintaining a variety of machine types
                      running for optimized distribution.
                    items:
                      type: string
                    type: array
                  reservedEnis:
                    description: Specifies the count of ENIs to reserve per instance
                      type for scaling purposes.
                    type: number
                  resourceLimits:
                    items:
                      properties:
                        maxInstanceCount:
                          description: Set a maximum number of instances per Virtual
                            Node Group. Can be null. If set, value must be greater
                            than or equal to 0.
                          type: number
                        minInstanceCount:
                          description: Set a minimum number of instances per Virtual
                            Node Group. Can be null. If set, value must be greater
                            than or equal to 0.
                          type: number
                      type: object
                    type: array
                  restrictScaleDown:
                    description: Boolean. When set to true, nodes will be treated
                      as if all pods running have the restrict-scale-down label. Therefore,
                      Ocean will not scale nodes down unless empty.
                    type: boolean
                  rootVolumeSize:
                    description: Set root volume size (in GB).
                    type: number
                  schedulingShutdownHours:
                    description: Used to specify times that the nodes in the virtual
                      node group will be taken down.
                    items:
                      properties:
                        isEnabled:
                          description: Describes whether the task is enabled. When
                            true, the task runs. When false, it does not run.
                          type: boolean
                        timeWindows:
                          description: The times that the shutdown hours will apply.
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                  schedulingTask:
                    description: Used to define scheduled tasks such as a manual headroom
                      update.
                    items:
                      properties:
                        cronExpression:
                          description: 'A valid cron expression. For example : " *
                            * * * * ". The cron job runs in UTC time and is in Unix
                            cron format.'
                          type: string
                        isEnabled:
                          description: Describes whether the task is enabled. When
                            true, the task runs. When false, it does not run.
                          type: boolean
                        taskHeadroom:
                          description: The config of this scheduled task. Depends
                            on the value of taskType.
                          items:
                            properties:
                              cpuPerUnit:
                                description: Optionally configure the number of CPUs
                                  to allocate for each headroom unit. CPUs are denoted
                                  in millicores, where 1000 millicores = 1 vCPU.
                                type: number
                              gpuPerUnit:
                                description: Optionally configure the number of GPUS
                                  to allocate for each headroom unit.
                                type: number
                              memoryPerUnit:
                                description: Optionally configure the amount of memory
                                  (MiB) to allocate for each headroom unit.
                                type: number
                              numOfUnits:
                                description: The number of units to retain as headroom,
                                  where each unit has the defined headroom CPU, memory
                                  and GPU.
                                type: number
                            type: object
                          type: array
                        taskType:
                          description: 'The activity that you are scheduling. Valid
                            values: "manualHeadroomUpdate".'
                          type: string
                      type: object
                    type: array
                  securityGroups:
                    description: Optionally adds security group IDs.
                    items:
                      type: string
                    type: array
                  strategy:
                    items:
                      properties:
                        drainingTimeout:
                          description: The configurable amount of time that Ocean
                            will wait for the draining process to complete before
                            terminating an instance. If you have not defined a draining
                            timeout, the default of 300 seconds will be used.
                          type: number
                        spotPercentage:
                          description: The desired percentage of the Spot instances
                            out of all running instances for this VNG. Only available
                            when the field is not set in the cluster directly (cluster.strategy.spotPercentage).
                          type: number
                        utilizeCommitments:
                          description: When set as ‘true’, if savings plans commitments
                            have available capacity, Ocean will utilize them alongside
                            RIs (if exist) to maximize cost efficiency. If the value
                            is set as 'null', it will automatically be inherited from
                            the cluster level.
                          type: boolean
                        utilizeReservedInstances:
                          description: When set as ‘true’, if reserved instances exist,
                            Ocean will utilize them before launching spot instances.
                            If the value is set as 'null', it will automatically be
                            inherited from the cluster level.
                          type: boolean
                      type: object
                    type: array
                  subnetIds:
                    description: A list of subnet IDs.
                    items:
                      type: string
                    type: array
                  tags:
                    description: A key/value mapping of tags to assign to the resource.
                    items:
                      properties:
                        key:
                          description: The label key.
                          type: string
                        value:
                          description: The label value.
                          type: string
                      type: object
                    type: array
                  taints:
                    description: Optionally adds labels to instances launched in the
                      cluster.
                    items:
                      properties:
                        effect:
                          description: 'The effect of the taint. Valid values: "NoSchedule",
                            "PreferNoSchedule", "NoExecute".'
                          type: string
                        key:
                          description: The label key.
                          type: string
                        value:
                          description: The label value.
                          type: string
                      type: object
                    type: array
                  updatePolicy:
                    items:
                      properties:
                        rollConfig:
                          description: Holds the roll configuration.
                          items:
                            properties:
                              batchSizePercentage:
                                description: Sets the percentage of the instances
                                  to deploy in each batch.
                                type: number
                              respectPdb:
                                description: During the roll, if the parameter is
                                  set to true we honor PDB during the instance replacement.
                                type: boolean
                            type: object
                          type: array
                        shouldRoll:
                          description: Enables the roll.
                          type: boolean
                      type: object
                    type: array
                  userData:
                    description: Base64-encoded MIME user data to make available to
                      the instances.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.oceanId is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.oceanId)
                || (has(self.initProvider) && has(self.initProvider.oceanId))'
          status:
            description: OceanAwsLaunchSpecStatus defines the observed state of OceanAwsLaunchSpec.
            properties:
              atProvider:
                properties:
                  associatePublicIpAddress:
                    description: Configure public IP address allocation.
                    type: boolean
                  autoscaleDown:
                    description: Auto Scaling scale down operations.
                    items:
                      properties:
                        maxScaleDownPercentage:
                          description: The maximum percentage allowed to scale down
                            in a single scaling action on the nodes running in a specific
                            VNG. Allowed only if maxScaleDownPercentage is set to
                            null at the cluster level. Number between [0.1-100].
                          type: number
                      type: object
                    type: array
                  autoscaleHeadrooms:
                    description: Set custom headroom per Virtual Node Group. Provide
                      a list of headrooms object.
                    items:
                      properties:
                        cpuPerUnit:
                          description: Optionally configure the number of CPUs to
                            allocate for each headroom unit. CPUs are denoted in millicores,
                            where 1000 millicores = 1 vCPU.
                          type: number
                        gpuPerUnit:
                          description: Optionally configure the number of GPUS to
                            allocate for each headroom unit.
                          type: number
                        memoryPerUnit:
                          description: Optionally configure the amount of memory (MiB)
                            to allocate for each headroom unit.
                          type: number
                        numOfUnits:
                          description: The number of units to retain as headroom,
                            where each unit has the defined headroom CPU, memory and
                            GPU.
                          type: number
                      type: object
                    type: array
                  autoscaleHeadroomsAutomatic:
                    description: Set automatic headroom per launch spec.
                    items:
                      properties:
                        autoHeadroomPercentage:
                          description: Number between 0-200 to control the headroom
                            % of the specific Virtual Node Group. Effective when cluster.autoScaler.headroom.automatic.is_enabled
                            = true is set on the Ocean cluster.
                          type: number
                      type: object
                    type: array
                  blockDeviceMappings:
                    description: Object. Array list of block devices that are exposed
                      to the instance, specify either virtual devices and EBS volumes.
                    items:
                      properties:
                        deviceName:
                          description: 'String. Set device name. (Example: /dev/xvda).'
                          type: string
                        ebs:
                          description: Object. Set Elastic Block Store properties
                            .
                          items:
                            properties:
                              deleteOnTermination:
                                description: Boolean. Flag to delete the EBS on instance
                                  termination.
                                type: boolean
                              dynamicVolumeSize:
                                description: Object. Set dynamic volume size properties.
                                  When using this object, you cannot use volumeSize.
                                  You must use one or the other.
                                items:
                                  properties:
                                    baseSize:
                                      description: 'Int. Initial size for volume.
                                        (Example: 50)'
                                      type: number
                                    resource:
                                      description: 'String. Resource type to increase
                                        volume size dynamically by. (Valid values:
                                        CPU)'
                                      type: string
                                    sizePerResourceUnit:
                                      description: 'Int. Additional size (in GB) per
                                        resource unit. (Example: baseSize=50, sizePerResourceUnit=20,
                                        and instance with 2 CPU is launched; its total
                                        disk size will be: 90GB)'
                                      type: number
                                  type: object
                                type: array
                              encrypted:
                                description: Boolean. Enables EBS encryption on the
                                  volume.
                                type: boolean
                              iops:
                                description: Int. The number of I/O operations per
                                  second (IOPS) that the volume supports.
                                type: number
                              kmsKeyId:
                                description: String. Identifier (key ID, key alias,
                                  ID ARN, or alias ARN) for a customer managed CMK
                                  under which the EBS volume is encrypted.
                                type: string
                              snapshotId:
                                description: String. The Snapshot ID to mount by.
                                type: string
                              throughput:
                                description: The amount of data transferred to or
                                  from a storage device per second, you can use this
                                  param just in a case that volume_type = gp3.
                                type: number
                              volumeSize:
                                description: Int. The size, in GB of the volume.
                                type: number
                              volumeType:
                                description: 'String. The type of the volume. (Example:
                                  gp2).'
                                type: string
                            type: object
                          type: array
                        noDevice:
                          description: String. Suppresses the specified device included
                            in the block device mapping of the AMI.
                          type: string
                        virtualName:
                          description: The name of the Virtual Node Group.
                          type: string
                      type: object
                    type: array
                  createOptions:
                    items:
                      properties:
                        initialNodes:
                          description: When set to an integer greater than 0, a corresponding
                            amount of nodes will be launched from the created Virtual
                            Node Group. The parameter is recommended in case the use_as_template_only
                            (in spotinst_ocean_aws resource) is set to true during
                            Ocean resource creation.
                          type: number
                      type: object
                    type: array
                  deleteOptions:
                    items:
                      properties:
                        deleteNodes:
                          description: When set to "true", all instances belonging
                            to the deleted launch specification will be drained, detached,
                            and terminated.
                          type: boolean
                        forceDelete:
                          description: When set to true, delete even if it is the
                            last Virtual Node Group (also, the default Virtual Node
                            Group must be configured with useAsTemlateOnly = true).
                            Should be set at creation or update, but will be used
                            only at deletion.
                          type: boolean
                      type: object
                    type: array
                  elasticIpPool:
                    description: Assign an Elastic IP to the instances spun by the
                      Virtual Node Group. Can be null.
                    items:
                      properties:
                        tagSelector:
                          description: A key-value pair, which defines an Elastic
                            IP from the customer pool. Can be null.
                          items:
                            properties:
                              tagKey:
                                description: Elastic IP tag key. The Virtual Node
                                  Group will consider all Elastic IPs tagged with
                                  this tag as a part of the Elastic IP pool to use.
                                type: string
                              tagValue:
                                description: Elastic IP tag value. Can be null.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  ephemeralStorage:
                    items:
                      properties:
                        ephemeralStorageDeviceName:
                          description: Specify an alternative device name from which
                            ephemeral storage calculations should be derived. This
                            parameter is used when the ephemeral storage should not
                            utilize the root device. Provide the device name configured
                            in the VNG's BDM or AMI's BDM that differs from the default
                            root device.
                          type: string
                      type: object
                    type: array
                  iamInstanceProfile:
                    description: The ARN or name of an IAM instance profile to associate
                      with launched instances.
                    type: string
                  id:
                    description: The Virtual Node Group ID.
                    type: string
                  imageId:
                    description: ID of the image used to launch the instances.
                    type: string
                  images:
                    description: |-
                      Array of objects (Image object, containing the id of the image used to launch instances.) You can configure VNG with either the imageId or images objects, but not both simultaneously.
                      For each architecture type (amd64, arm64) only one AMI is allowed. Valid values: null, or an array with at least one element.
                    items:
                      properties:
                        imageId:
                          description: ID of the image used to launch the instances.
                          type: string
                      type: object
                    type: array
                  instanceMetadataOptions:
                    description: Ocean instance metadata options object for IMDSv2.
                    items:
                      properties:
                        httpPutResponseHopLimit:
                          description: An integer from 1 through 64. The desired HTTP
                            PUT response hop limit for instance metadata requests.
                            The larger the number, the further the instance metadata
                            requests can travel.
                          type: number
                        httpTokens:
                          description: 'Determines if a signed token is required or
                            not. Valid values: optional or required.'
                          type: string
                      type: object
                    type: array
                  instanceStorePolicy:
                    items:
                      properties:
                        instanceStorePolicyType:
                          type: string
                      type: object
                    type: array
                  instanceTypes:
                    description: A list of instance types allowed to be provisioned
                      for pods pending under the specified launch specification. The
                      list overrides the list defined for the cluster.
                    items:
                      type: string
                    type: array
                  instanceTypesFilters:
                    description: |-
                      The instance types that match with all filters compose the Virtual Node Group's instanceTypes parameter.
                      The architectures that come from the Virtual Node Group's images will be taken into account when using this parameter. Cannot be configured together with Virtual Node Group's instanceTypes and with the Cluster's whitelist/blacklist/filters.
                    items:
                      properties:
                        categories:
                          description: 'The filtered instance types will belong to
                            one of the categories types from this list. Valid values:
                            Accelerated_computing, Compute_optimized, General_purpose,
                            Memory_optimized, Storage_optimized.'
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        diskTypes:
                          description: 'The filtered instance types will have one
                            of the disk type from this list. Valid values: NVMe, EBS,
                            SSD, HDD.'
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        excludeFamilies:
                          description: 'Types belonging to a family from the ExcludeFamilies
                            will not be available for scaling (asterisk wildcard is
                            also supported). For example, C* will exclude instance
                            types from these families: c5, c4, c4a, etc.'
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        excludeMetal:
                          description: In case excludeMetal is set to true, metal
                            types will not be available for scaling.
                          type: boolean
                        hypervisor:
                          description: 'The filtered instance types will have a hypervisor
                            type from this list. Valid values: nitro, xen.'
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        includeFamilies:
                          description: 'Types belonging to a family from the IncludeFamilies
                            will be available for scaling (asterisk wildcard is also
                            supported). For example, C* will include instance types
                            from these families: c5, c4, c4a, etc.'
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        isEnaSupported:
                          description: Ena is supported or not.
                          type: string
                        maxGpu:
                          description: Maximum total number of GPUs.
                          type: number
                        maxMemoryGib:
                          description: Maximum amount of Memory (GiB).
                          type: number
                        maxNetworkPerformance:
                          description: Maximum Bandwidth in Gib/s of network performance.
                          type: number
                        maxVcpu:
                          description: Maximum number of vcpus available.
                          type: number
                        minEnis:
                          description: Minimum number of network interfaces (ENIs).
                          type: number
                        minGpu:
                          description: Minimum total number of GPUs.
                          type: number
                        minMemoryGib:
                          description: Minimum amount of Memory (GiB).
                          type: number
                        minNetworkPerformance:
                          description: Minimum Bandwidth in Gib/s of network performance.
                          type: number
                        minVcpu:
                          description: Minimum number of vcpus available.
                          type: number
                        rootDeviceTypes:
                          description: 'The filtered instance types will have a root
                            device types from this list. Valid values: ebs, or instance-store.'
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        virtualizationTypes:
                          description: 'The filtered instance types will support at
                            least one of the virtualization types from this list.
                            Valid values: hvm, paravirtual.'
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                      type: object
                    type: array
                  labels:
                    description: Optionally adds labels to instances launched in the
                      cluster.
                    items:
                      properties:
                        key:
                          description: The label key.
                          type: string
                        value:
                          description: The label value.
                          type: string
                      type: object
                    type: array
                  name:
                    description: The name of the Virtual Node Group.
                    type: string
                  oceanId:
                    description: The ID of the Ocean cluster.
                    type: string
                  preferredOdTypes:
                    description: A list of instance types. Takes the preferred types
                      into consideration while maintaining a variety of machine types
                      running for optimized distribution.
                    items:
                      type: string
                    type: array
                  preferredSpotTypes:
                    description: A list of instance types. Takes the preferred types
                      into consideration while maintaining a variety of machine types
                      running for optimized distribution.
                    items:
                      type: string
                    type: array
                  reservedEnis:
                    description: Specifies the count of ENIs to reserve per instance
                      type for scaling purposes.
                    type: number
                  resourceLimits:
                    items:
                      properties:
                        maxInstanceCount:
                          description: Set a maximum number of instances per Virtual
                            Node Group. Can be null. If set, value must be greater
                            than or equal to 0.
                          type: number
                        minInstanceCount:
                          description: Set a minimum number of instances per Virtual
                            Node Group. Can be null. If set, value must be greater
                            than or equal to 0.
                          type: number
                      type: object
                    type: array
                  restrictScaleDown:
                    description: Boolean. When set to true, nodes will be treated
                      as if all pods running have the restrict-scale-down label. Therefore,
                      Ocean will not scale nodes down unless empty.
                    type: boolean
                  rootVolumeSize:
                    description: Set root volume size (in GB).
                    type: number
                  schedulingShutdownHours:
                    description: Used to specify times that the nodes in the virtual
                      node group will be taken down.
                    items:
                      properties:
                        isEnabled:
                          description: Describes whether the task is enabled. When
                            true, the task runs. When false, it does not run.
                          type: boolean
                        timeWindows:
                          description: The times that the shutdown hours will apply.
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                  schedulingTask:
                    description: Used to define scheduled tasks such as a manual headroom
                      update.
                    items:
                      properties:
                        cronExpression:
                          description: 'A valid cron expression. For example : " *
                            * * * * ". The cron job runs in UTC time and is in Unix
                            cron format.'
                          type: string
                        isEnabled:
                          description: Describes whether the task is enabled. When
                            true, the task runs. When false, it does not run.
                          type: boolean
                        taskHeadroom:
                          description: The config of this scheduled task. Depends
                            on the value of taskType.
                          items:
                            properties:
                              cpuPerUnit:
                                description: Optionally configure the number of CPUs
                                  to allocate for each headroom unit. CPUs are denoted
                                  in millicores, where 1000 millicores = 1 vCPU.
                                type: number
                              gpuPerUnit:
                                description: Optionally configure the number of GPUS
                                  to allocate for each headroom unit.
                                type: number
                              memoryPerUnit:
                                description: Optionally configure the amount of memory
                                  (MiB) to allocate for each headroom unit.
                                type: number
                              numOfUnits:
                                description: The number of units to retain as headroom,
                                  where each unit has the defined headroom CPU, memory
                                  and GPU.
                                type: number
                            type: object
                          type: array
                        taskType:
                          description: 'The activity that you are scheduling. Valid
                            values: "manualHeadroomUpdate".'
                          type: string
                      type: object
                    type: array
                  securityGroups:
                    description: Optionally adds security group IDs.
                    items:
                      type: string
                    type: array
                  strategy:
                    items:
                      properties:
                        drainingTimeout:
                          description: The configurable amount of time that Ocean
                            will wait for the draining process to complete before
                            terminating an instance. If you have not defined a draining
                            timeout, the default of 300 seconds will be used.
                          type: number
                        spotPercentage:
                          description: The desired percentage of the Spot instances
                            out of all running instances for this VNG. Only available
                            when the field is not set in the cluster directly (cluster.strategy.spotPercentage).
                          type: number
                        utilizeCommitments:
                          description: When set as ‘true’, if savings plans commitments
                            have available capacity, Ocean will utilize them alongside
                            RIs (if exist) to maximize cost efficiency. If the value
                            is set as 'null', it will automatically be inherited from
                            the cluster level.
                          type: boolean
                        utilizeReservedInstances:
                          description: When set as ‘true’, if reserved instances exist,
                            Ocean will utilize them before launching spot instances.
                            If the value is set as 'null', it will automatically be
                            inherited from the cluster level.
                          type: boolean
                      type: object
                    type: array
                  subnetIds:
                    description: A list of subnet IDs.
                    items:
                      type: string
                    type: array
                  tags:
                    description: A key/value mapping of tags to assign to the resource.
                    items:
                      properties:
                        key:
                          description: The label key.
                          type: string
                        value:
                          description: The label value.
                          type: string
                      type: object
                    type: array
                  taints:
                    description: Optionally adds labels to instances launched in the
                      cluster.
                    items:
                      properties:
                        effect:
                          description: 'The effect of the taint. Valid values: "NoSchedule",
                            "PreferNoSchedule", "NoExecute".'
                          type: string
                        key:
                          description: The label key.
                          type: string
                        value:
                          description: The label value.
                          type: string
                      type: object
                    type: array
                  updatePolicy:
                    items:
                      properties:
                        rollConfig:
                          description: Holds the roll configuration.
                          items:
                            properties:
                              batchSizePercentage:
                                description: Sets the percentage of the instances
                                  to deploy in each batch.
                                type: number
                              respectPdb:
                                description: During the roll, if the parameter is
                                  set to true we honor PDB during the instance replacement.
                                type: boolean
                            type: object
                          type: array
                        shouldRoll:
                          description: Enables the roll.
                          type: boolean
                      type: object
                    type: array
                  userData:
                    description: Base64-encoded MIME user data to make available to
                      the instances.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
