---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: oceangkes.oceangke.spot.upbound.io
spec:
  group: oceangke.spot.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - spot
    kind: OceanGke
    listKind: OceanGkeList
    plural: oceangkes
    singular: oceangke
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: OceanGke is the Schema for the OceanGkes API. Provides a Spotinst
          Ocean resource using gke.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: OceanGkeSpec defines the desired state of OceanGke
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  autoUpdate:
                    description: The Ocean Kubernetes AutoUpdate object. If set to
                      'true', Ocean will ensure that your clusters have an up-to-date
                      configuration according to the respective GKE cluster.
                    items:
                      properties:
                        isEnabled:
                          description: Enable the Ocean Kubernetes AutoUpdate.
                          type: boolean
                      type: object
                    type: array
                  autoscaler:
                    description: The Ocean Kubernetes Autoscaler object.
                    items:
                      properties:
                        autoHeadroomPercentage:
                          description: Optionally set the auto headroom percentage,
                            set a number between 0-200 to control the headroom % from
                            the cluster. Relevant when isAutoConfig=true.
                          type: number
                        cooldown:
                          description: Cooldown period between scaling actions.
                          type: number
                        down:
                          description: Auto Scaling scale down operations.
                          items:
                            properties:
                              evaluationPeriods:
                                description: The number of evaluation periods that
                                  should accumulate before a scale down action takes
                                  place.
                                type: number
                              isAggressiveScaleDownEnabled:
                                description: When set to 'true', the Aggressive Scale
                                  Down feature is enabled.
                                type: boolean
                              maxScaleDownPercentage:
                                description: Would represent the maximum % to scale-down.
                                  Number between 1-100.
                                type: number
                            type: object
                          type: array
                        enableAutomaticAndManualHeadroom:
                          description: enables automatic and manual headroom to work
                            in parallel. When set to false, automatic headroom overrides
                            all other headroom definitions manually configured, whether
                            they are at cluster or VNG level.
                          type: boolean
                        headroom:
                          description: Spare resource capacity management enabling
                            fast assignment of Pods without waiting for new resources
                            to launch.
                          items:
                            properties:
                              cpuPerUnit:
                                description: Optionally configure the number of CPUs
                                  to allocate the headroom. CPUs are denoted in millicores,
                                  where 1000 millicores = 1 vCPU.
                                type: number
                              gpuPerUnit:
                                description: How much GPU allocate for headroom unit.
                                type: number
                              memoryPerUnit:
                                description: Optionally configure the amount of memory
                                  (MiB) to allocate the headroom.
                                type: number
                              numOfUnits:
                                description: The number of units to retain as headroom,
                                  where each unit has the defined headroom CPU and
                                  memory.
                                type: number
                            type: object
                          type: array
                        isAutoConfig:
                          description: Automatically configure and optimize headroom
                            resources.
                          type: boolean
                        isEnabled:
                          description: Enable the Ocean Kubernetes AutoUpdate.
                          type: boolean
                        resourceLimits:
                          description: Optionally set upper and lower bounds on the
                            resource usage of the cluster.
                          items:
                            properties:
                              maxMemoryGib:
                                description: Maximum amount of Memory (GiB).
                                type: number
                              maxVcpu:
                                description: Maximum number of vcpus available.
                                type: number
                            type: object
                          type: array
                      type: object
                    type: array
                  backendServices:
                    description: Describes the backend service configurations.
                    items:
                      properties:
                        locationType:
                          description: 'Sets which location the backend services will
                            be active. Valid values: regional, global.'
                          type: string
                        namedPorts:
                          description: A list of ports.
                          items:
                            properties:
                              name:
                                type: string
                              ports:
                                description: A list of ports.
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        scheme:
                          description: 'Use when location_type is regional. Set the
                            traffic for the backend service to either between the
                            instances in the vpc or to traffic from the internet.
                            Valid values: INTERNAL, EXTERNAL.'
                          type: string
                        serviceName:
                          description: The name of the backend service.
                          type: string
                      type: object
                    type: array
                  blacklist:
                    description: Instance types to avoid launching in the Ocean cluster.
                      Cannot be configured if whitelist list is configured.
                    items:
                      type: string
                    type: array
                  clusterName:
                    description: The GKE cluster name.
                    type: string
                  controllerClusterId:
                    description: A unique identifier used for connecting the Ocean
                      SaaS platform and the Kubernetes cluster. Typically, the cluster
                      name is used as its identifier.
                    type: string
                  desiredCapacity:
                    description: The number of instances to launch and maintain in
                      the cluster.
                    type: number
                  filters:
                    description: List of filters. The Instance types that match with
                      all filters compose the Ocean's whitelist parameter. Cannot
                      be configured together with whitelist/blacklist.
                    items:
                      properties:
                        excludeFamilies:
                          description: 'Types belonging to a family from the ExcludeFamilies
                            will not be available for scaling (asterisk wildcard is
                            also supported). For example, C* will exclude instance
                            types from these families: c5, c4, c4a, etc.'
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        includeFamilies:
                          description: 'Types belonging to a family from the IncludeFamilies
                            will be available for scaling (asterisk wildcard is also
                            supported). For example, C* will include instance types
                            from these families: c5, c4, c4a, etc.'
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        maxMemoryGib:
                          description: Maximum amount of Memory (GiB).
                          type: number
                        maxVcpu:
                          description: Maximum number of vcpus available.
                          type: number
                        minMemoryGib:
                          description: Minimum amount of Memory (GiB).
                          type: number
                        minVcpu:
                          description: Minimum number of vcpus available.
                          type: number
                      type: object
                    type: array
                  location:
                    description: The zone the master cluster is located in.
                    type: string
                  maxSize:
                    description: The upper limit of instances the cluster can scale
                      up to.
                    type: number
                  minSize:
                    description: The lower limit of instances the cluster can scale
                      down to.
                    type: number
                  rootVolumeType:
                    description: The root volume disk type.
                    type: string
                  scheduledTask:
                    description: Set scheduling object.
                    items:
                      properties:
                        shutdownHours:
                          description: Set shutdown hours for cluster object.
                          items:
                            properties:
                              isEnabled:
                                description: Enable the Ocean Kubernetes AutoUpdate.
                                type: boolean
                              timeWindows:
                                description: |-
                                  Set time windows for shutdown hours. specify a list of 'timeWindows' with at least one time window Each string is in the format of - ddd:hh:mm-ddd:hh:mm ddd = day of week = Sun | Mon | Tue | Wed | Thu | Fri | Sat hh = hour 24 = 0 -23 mm = minute = 0 - 59. Time windows should not overlap. required on cluster.scheduling.isEnabled = true. API Times are in UTC
                                  Example: Fri:15:30-Wed:14:30
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        tasks:
                          description: The scheduling tasks for the cluster.
                          items:
                            properties:
                              cronExpression:
                                description: |-
                                  A valid cron expression. For example : " * * * * * ".The cron is running in UTC time zone and is in Unix cron format Cron Expression Validator Script. Only one of ‘frequency’ or ‘cronExpression’ should be used at a time. Required for cluster.scheduling.tasks object
                                  Example: 0 1 * * *
                                type: string
                              isEnabled:
                                description: Enable the Ocean Kubernetes AutoUpdate.
                                type: boolean
                              taskParameters:
                                description: The scheduling parameters for the cluster.
                                items:
                                  properties:
                                    clusterRoll:
                                      description: The cluster roll parameters for
                                        the cluster.
                                      items:
                                        properties:
                                          batchMinHealthyPercentage:
                                            description: Indicates the threshold of
                                              minimum healthy instances in single
                                              batch. If the amount of healthy instances
                                              in single batch is under the threshold,
                                              the cluster roll will fail. If exists,
                                              the parameter value will be in range
                                              of 1-100. In case of null as value,
                                              the default value in the backend will
                                              be 50%. Value of param should represent
                                              the number in percentage (%) of the
                                              batch.
                                            type: number
                                          batchSizePercentage:
                                            description: |-
                                              Value in % to set size of batch in roll. Valid values are 0-100
                                              Example: 20.
                                            type: number
                                          comment:
                                            description: Add a comment description
                                              for the roll. The comment is limited
                                              to 256 chars.
                                            type: string
                                          respectPdb:
                                            description: During the roll, if the parameter
                                              is set to true we honor PDB during the
                                              instance replacement.
                                            type: boolean
                                        type: object
                                      type: array
                                  type: object
                                type: array
                              taskType:
                                description: 'Valid values: "clusterRoll". Required
                                  for cluster.scheduling.tasks object.'
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  shieldedInstanceConfig:
                    description: The Ocean shielded instance configuration object.
                    items:
                      properties:
                        enableIntegrityMonitoring:
                          description: Boolean. Enable the integrity monitoring parameter
                            on the GCP instances.
                          type: boolean
                        enableSecureBoot:
                          description: Boolean. Enable the secure boot parameter on
                            the GCP instances.
                          type: boolean
                      type: object
                    type: array
                  strategy:
                    description: Strategy object.
                    items:
                      properties:
                        drainingTimeout:
                          description: The draining timeout (in seconds) before terminating
                            the instance.
                          type: number
                        preemptiblePercentage:
                          description: Defines the desired preemptible percentage
                            for the cluster.
                          type: number
                        provisioningModel:
                          description: 'Define the provisioning model of the launched
                            instances. Valid values: SPOT, PREEMPTIBLE.'
                          type: string
                        scalingOrientation:
                          type: string
                        shouldUtilizeCommitments:
                          description: Enable committed use discounts utilization.
                          type: boolean
                      type: object
                    type: array
                  updatePolicy:
                    items:
                      properties:
                        conditionedRoll:
                          description: Spot will perform a cluster Roll in accordance
                            with a relevant modification of the cluster’s settings.
                            When set to true , only specific changes in the cluster’s
                            configuration will trigger a cluster roll (such as AMI,
                            Key Pair, user data, instance types, load balancers, etc).
                          type: boolean
                        rollConfig:
                          description: Holds the roll configuration.
                          items:
                            properties:
                              batchMinHealthyPercentage:
                                description: Indicates the threshold of minimum healthy
                                  instances in single batch. If the amount of healthy
                                  instances in single batch is under the threshold,
                                  the cluster roll will fail. If exists, the parameter
                                  value will be in range of 1-100. In case of null
                                  as value, the default value in the backend will
                                  be 50%. Value of param should represent the number
                                  in percentage (%) of the batch.
                                type: number
                              batchSizePercentage:
                                description: |-
                                  Value in % to set size of batch in roll. Valid values are 0-100
                                  Example: 20.
                                type: number
                              launchSpecIds:
                                description: List of Virtual Node Group identifiers
                                  to be rolled.
                                items:
                                  type: string
                                type: array
                              respectPdb:
                                description: During the roll, if the parameter is
                                  set to true we honor PDB during the instance replacement.
                                type: boolean
                            type: object
                          type: array
                        shouldRoll:
                          description: Enables the roll.
                          type: boolean
                      type: object
                    type: array
                  useAsTemplateOnly:
                    description: launch specification defined on the Ocean object
                      will function only as a template for virtual node groups.
                    type: boolean
                  whitelist:
                    description: Instance types allowed in the Ocean cluster. Cannot
                      be configured if blacklist list is configured.
                    items:
                      type: string
                    type: array
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  autoUpdate:
                    description: The Ocean Kubernetes AutoUpdate object. If set to
                      'true', Ocean will ensure that your clusters have an up-to-date
                      configuration according to the respective GKE cluster.
                    items:
                      properties:
                        isEnabled:
                          description: Enable the Ocean Kubernetes AutoUpdate.
                          type: boolean
                      type: object
                    type: array
                  autoscaler:
                    description: The Ocean Kubernetes Autoscaler object.
                    items:
                      properties:
                        autoHeadroomPercentage:
                          description: Optionally set the auto headroom percentage,
                            set a number between 0-200 to control the headroom % from
                            the cluster. Relevant when isAutoConfig=true.
                          type: number
                        cooldown:
                          description: Cooldown period between scaling actions.
                          type: number
                        down:
                          description: Auto Scaling scale down operations.
                          items:
                            properties:
                              evaluationPeriods:
                                description: The number of evaluation periods that
                                  should accumulate before a scale down action takes
                                  place.
                                type: number
                              isAggressiveScaleDownEnabled:
                                description: When set to 'true', the Aggressive Scale
                                  Down feature is enabled.
                                type: boolean
                              maxScaleDownPercentage:
                                description: Would represent the maximum % to scale-down.
                                  Number between 1-100.
                                type: number
                            type: object
                          type: array
                        enableAutomaticAndManualHeadroom:
                          description: enables automatic and manual headroom to work
                            in parallel. When set to false, automatic headroom overrides
                            all other headroom definitions manually configured, whether
                            they are at cluster or VNG level.
                          type: boolean
                        headroom:
                          description: Spare resource capacity management enabling
                            fast assignment of Pods without waiting for new resources
                            to launch.
                          items:
                            properties:
                              cpuPerUnit:
                                description: Optionally configure the number of CPUs
                                  to allocate the headroom. CPUs are denoted in millicores,
                                  where 1000 millicores = 1 vCPU.
                                type: number
                              gpuPerUnit:
                                description: How much GPU allocate for headroom unit.
                                type: number
                              memoryPerUnit:
                                description: Optionally configure the amount of memory
                                  (MiB) to allocate the headroom.
                                type: number
                              numOfUnits:
                                description: The number of units to retain as headroom,
                                  where each unit has the defined headroom CPU and
                                  memory.
                                type: number
                            type: object
                          type: array
                        isAutoConfig:
                          description: Automatically configure and optimize headroom
                            resources.
                          type: boolean
                        isEnabled:
                          description: Enable the Ocean Kubernetes AutoUpdate.
                          type: boolean
                        resourceLimits:
                          description: Optionally set upper and lower bounds on the
                            resource usage of the cluster.
                          items:
                            properties:
                              maxMemoryGib:
                                description: Maximum amount of Memory (GiB).
                                type: number
                              maxVcpu:
                                description: Maximum number of vcpus available.
                                type: number
                            type: object
                          type: array
                      type: object
                    type: array
                  backendServices:
                    description: Describes the backend service configurations.
                    items:
                      properties:
                        locationType:
                          description: 'Sets which location the backend services will
                            be active. Valid values: regional, global.'
                          type: string
                        namedPorts:
                          description: A list of ports.
                          items:
                            properties:
                              name:
                                type: string
                              ports:
                                description: A list of ports.
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        scheme:
                          description: 'Use when location_type is regional. Set the
                            traffic for the backend service to either between the
                            instances in the vpc or to traffic from the internet.
                            Valid values: INTERNAL, EXTERNAL.'
                          type: string
                        serviceName:
                          description: The name of the backend service.
                          type: string
                      type: object
                    type: array
                  blacklist:
                    description: Instance types to avoid launching in the Ocean cluster.
                      Cannot be configured if whitelist list is configured.
                    items:
                      type: string
                    type: array
                  clusterName:
                    description: The GKE cluster name.
                    type: string
                  controllerClusterId:
                    description: A unique identifier used for connecting the Ocean
                      SaaS platform and the Kubernetes cluster. Typically, the cluster
                      name is used as its identifier.
                    type: string
                  desiredCapacity:
                    description: The number of instances to launch and maintain in
                      the cluster.
                    type: number
                  filters:
                    description: List of filters. The Instance types that match with
                      all filters compose the Ocean's whitelist parameter. Cannot
                      be configured together with whitelist/blacklist.
                    items:
                      properties:
                        excludeFamilies:
                          description: 'Types belonging to a family from the ExcludeFamilies
                            will not be available for scaling (asterisk wildcard is
                            also supported). For example, C* will exclude instance
                            types from these families: c5, c4, c4a, etc.'
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        includeFamilies:
                          description: 'Types belonging to a family from the IncludeFamilies
                            will be available for scaling (asterisk wildcard is also
                            supported). For example, C* will include instance types
                            from these families: c5, c4, c4a, etc.'
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        maxMemoryGib:
                          description: Maximum amount of Memory (GiB).
                          type: number
                        maxVcpu:
                          description: Maximum number of vcpus available.
                          type: number
                        minMemoryGib:
                          description: Minimum amount of Memory (GiB).
                          type: number
                        minVcpu:
                          description: Minimum number of vcpus available.
                          type: number
                      type: object
                    type: array
                  location:
                    description: The zone the master cluster is located in.
                    type: string
                  maxSize:
                    description: The upper limit of instances the cluster can scale
                      up to.
                    type: number
                  minSize:
                    description: The lower limit of instances the cluster can scale
                      down to.
                    type: number
                  rootVolumeType:
                    description: The root volume disk type.
                    type: string
                  scheduledTask:
                    description: Set scheduling object.
                    items:
                      properties:
                        shutdownHours:
                          description: Set shutdown hours for cluster object.
                          items:
                            properties:
                              isEnabled:
                                description: Enable the Ocean Kubernetes AutoUpdate.
                                type: boolean
                              timeWindows:
                                description: |-
                                  Set time windows for shutdown hours. specify a list of 'timeWindows' with at least one time window Each string is in the format of - ddd:hh:mm-ddd:hh:mm ddd = day of week = Sun | Mon | Tue | Wed | Thu | Fri | Sat hh = hour 24 = 0 -23 mm = minute = 0 - 59. Time windows should not overlap. required on cluster.scheduling.isEnabled = true. API Times are in UTC
                                  Example: Fri:15:30-Wed:14:30
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        tasks:
                          description: The scheduling tasks for the cluster.
                          items:
                            properties:
                              cronExpression:
                                description: |-
                                  A valid cron expression. For example : " * * * * * ".The cron is running in UTC time zone and is in Unix cron format Cron Expression Validator Script. Only one of ‘frequency’ or ‘cronExpression’ should be used at a time. Required for cluster.scheduling.tasks object
                                  Example: 0 1 * * *
                                type: string
                              isEnabled:
                                description: Enable the Ocean Kubernetes AutoUpdate.
                                type: boolean
                              taskParameters:
                                description: The scheduling parameters for the cluster.
                                items:
                                  properties:
                                    clusterRoll:
                                      description: The cluster roll parameters for
                                        the cluster.
                                      items:
                                        properties:
                                          batchMinHealthyPercentage:
                                            description: Indicates the threshold of
                                              minimum healthy instances in single
                                              batch. If the amount of healthy instances
                                              in single batch is under the threshold,
                                              the cluster roll will fail. If exists,
                                              the parameter value will be in range
                                              of 1-100. In case of null as value,
                                              the default value in the backend will
                                              be 50%. Value of param should represent
                                              the number in percentage (%) of the
                                              batch.
                                            type: number
                                          batchSizePercentage:
                                            description: |-
                                              Value in % to set size of batch in roll. Valid values are 0-100
                                              Example: 20.
                                            type: number
                                          comment:
                                            description: Add a comment description
                                              for the roll. The comment is limited
                                              to 256 chars.
                                            type: string
                                          respectPdb:
                                            description: During the roll, if the parameter
                                              is set to true we honor PDB during the
                                              instance replacement.
                                            type: boolean
                                        type: object
                                      type: array
                                  type: object
                                type: array
                              taskType:
                                description: 'Valid values: "clusterRoll". Required
                                  for cluster.scheduling.tasks object.'
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  shieldedInstanceConfig:
                    description: The Ocean shielded instance configuration object.
                    items:
                      properties:
                        enableIntegrityMonitoring:
                          description: Boolean. Enable the integrity monitoring parameter
                            on the GCP instances.
                          type: boolean
                        enableSecureBoot:
                          description: Boolean. Enable the secure boot parameter on
                            the GCP instances.
                          type: boolean
                      type: object
                    type: array
                  strategy:
                    description: Strategy object.
                    items:
                      properties:
                        drainingTimeout:
                          description: The draining timeout (in seconds) before terminating
                            the instance.
                          type: number
                        preemptiblePercentage:
                          description: Defines the desired preemptible percentage
                            for the cluster.
                          type: number
                        provisioningModel:
                          description: 'Define the provisioning model of the launched
                            instances. Valid values: SPOT, PREEMPTIBLE.'
                          type: string
                        scalingOrientation:
                          type: string
                        shouldUtilizeCommitments:
                          description: Enable committed use discounts utilization.
                          type: boolean
                      type: object
                    type: array
                  updatePolicy:
                    items:
                      properties:
                        conditionedRoll:
                          description: Spot will perform a cluster Roll in accordance
                            with a relevant modification of the cluster’s settings.
                            When set to true , only specific changes in the cluster’s
                            configuration will trigger a cluster roll (such as AMI,
                            Key Pair, user data, instance types, load balancers, etc).
                          type: boolean
                        rollConfig:
                          description: Holds the roll configuration.
                          items:
                            properties:
                              batchMinHealthyPercentage:
                                description: Indicates the threshold of minimum healthy
                                  instances in single batch. If the amount of healthy
                                  instances in single batch is under the threshold,
                                  the cluster roll will fail. If exists, the parameter
                                  value will be in range of 1-100. In case of null
                                  as value, the default value in the backend will
                                  be 50%. Value of param should represent the number
                                  in percentage (%) of the batch.
                                type: number
                              batchSizePercentage:
                                description: |-
                                  Value in % to set size of batch in roll. Valid values are 0-100
                                  Example: 20.
                                type: number
                              launchSpecIds:
                                description: List of Virtual Node Group identifiers
                                  to be rolled.
                                items:
                                  type: string
                                type: array
                              respectPdb:
                                description: During the roll, if the parameter is
                                  set to true we honor PDB during the instance replacement.
                                type: boolean
                            type: object
                          type: array
                        shouldRoll:
                          description: Enables the roll.
                          type: boolean
                      type: object
                    type: array
                  useAsTemplateOnly:
                    description: launch specification defined on the Ocean object
                      will function only as a template for virtual node groups.
                    type: boolean
                  whitelist:
                    description: Instance types allowed in the Ocean cluster. Cannot
                      be configured if blacklist list is configured.
                    items:
                      type: string
                    type: array
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.clusterName is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.clusterName)
                || (has(self.initProvider) && has(self.initProvider.clusterName))'
            - message: spec.forProvider.location is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.location)
                || (has(self.initProvider) && has(self.initProvider.location))'
          status:
            description: OceanGkeStatus defines the observed state of OceanGke.
            properties:
              atProvider:
                properties:
                  autoUpdate:
                    description: The Ocean Kubernetes AutoUpdate object. If set to
                      'true', Ocean will ensure that your clusters have an up-to-date
                      configuration according to the respective GKE cluster.
                    items:
                      properties:
                        isEnabled:
                          description: Enable the Ocean Kubernetes AutoUpdate.
                          type: boolean
                      type: object
                    type: array
                  autoscaler:
                    description: The Ocean Kubernetes Autoscaler object.
                    items:
                      properties:
                        autoHeadroomPercentage:
                          description: Optionally set the auto headroom percentage,
                            set a number between 0-200 to control the headroom % from
                            the cluster. Relevant when isAutoConfig=true.
                          type: number
                        cooldown:
                          description: Cooldown period between scaling actions.
                          type: number
                        down:
                          description: Auto Scaling scale down operations.
                          items:
                            properties:
                              evaluationPeriods:
                                description: The number of evaluation periods that
                                  should accumulate before a scale down action takes
                                  place.
                                type: number
                              isAggressiveScaleDownEnabled:
                                description: When set to 'true', the Aggressive Scale
                                  Down feature is enabled.
                                type: boolean
                              maxScaleDownPercentage:
                                description: Would represent the maximum % to scale-down.
                                  Number between 1-100.
                                type: number
                            type: object
                          type: array
                        enableAutomaticAndManualHeadroom:
                          description: enables automatic and manual headroom to work
                            in parallel. When set to false, automatic headroom overrides
                            all other headroom definitions manually configured, whether
                            they are at cluster or VNG level.
                          type: boolean
                        headroom:
                          description: Spare resource capacity management enabling
                            fast assignment of Pods without waiting for new resources
                            to launch.
                          items:
                            properties:
                              cpuPerUnit:
                                description: Optionally configure the number of CPUs
                                  to allocate the headroom. CPUs are denoted in millicores,
                                  where 1000 millicores = 1 vCPU.
                                type: number
                              gpuPerUnit:
                                description: How much GPU allocate for headroom unit.
                                type: number
                              memoryPerUnit:
                                description: Optionally configure the amount of memory
                                  (MiB) to allocate the headroom.
                                type: number
                              numOfUnits:
                                description: The number of units to retain as headroom,
                                  where each unit has the defined headroom CPU and
                                  memory.
                                type: number
                            type: object
                          type: array
                        isAutoConfig:
                          description: Automatically configure and optimize headroom
                            resources.
                          type: boolean
                        isEnabled:
                          description: Enable the Ocean Kubernetes AutoUpdate.
                          type: boolean
                        resourceLimits:
                          description: Optionally set upper and lower bounds on the
                            resource usage of the cluster.
                          items:
                            properties:
                              maxMemoryGib:
                                description: Maximum amount of Memory (GiB).
                                type: number
                              maxVcpu:
                                description: Maximum number of vcpus available.
                                type: number
                            type: object
                          type: array
                      type: object
                    type: array
                  backendServices:
                    description: Describes the backend service configurations.
                    items:
                      properties:
                        locationType:
                          description: 'Sets which location the backend services will
                            be active. Valid values: regional, global.'
                          type: string
                        namedPorts:
                          description: A list of ports.
                          items:
                            properties:
                              name:
                                type: string
                              ports:
                                description: A list of ports.
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        scheme:
                          description: 'Use when location_type is regional. Set the
                            traffic for the backend service to either between the
                            instances in the vpc or to traffic from the internet.
                            Valid values: INTERNAL, EXTERNAL.'
                          type: string
                        serviceName:
                          description: The name of the backend service.
                          type: string
                      type: object
                    type: array
                  blacklist:
                    description: Instance types to avoid launching in the Ocean cluster.
                      Cannot be configured if whitelist list is configured.
                    items:
                      type: string
                    type: array
                  clusterControllerId:
                    description: The Spotinst Ocean ID.
                    type: string
                  clusterName:
                    description: The GKE cluster name.
                    type: string
                  controllerClusterId:
                    description: A unique identifier used for connecting the Ocean
                      SaaS platform and the Kubernetes cluster. Typically, the cluster
                      name is used as its identifier.
                    type: string
                  desiredCapacity:
                    description: The number of instances to launch and maintain in
                      the cluster.
                    type: number
                  filters:
                    description: List of filters. The Instance types that match with
                      all filters compose the Ocean's whitelist parameter. Cannot
                      be configured together with whitelist/blacklist.
                    items:
                      properties:
                        excludeFamilies:
                          description: 'Types belonging to a family from the ExcludeFamilies
                            will not be available for scaling (asterisk wildcard is
                            also supported). For example, C* will exclude instance
                            types from these families: c5, c4, c4a, etc.'
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        includeFamilies:
                          description: 'Types belonging to a family from the IncludeFamilies
                            will be available for scaling (asterisk wildcard is also
                            supported). For example, C* will include instance types
                            from these families: c5, c4, c4a, etc.'
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        maxMemoryGib:
                          description: Maximum amount of Memory (GiB).
                          type: number
                        maxVcpu:
                          description: Maximum number of vcpus available.
                          type: number
                        minMemoryGib:
                          description: Minimum amount of Memory (GiB).
                          type: number
                        minVcpu:
                          description: Minimum number of vcpus available.
                          type: number
                      type: object
                    type: array
                  id:
                    description: The Spotinst Ocean ID.
                    type: string
                  location:
                    description: The zone the master cluster is located in.
                    type: string
                  maxSize:
                    description: The upper limit of instances the cluster can scale
                      up to.
                    type: number
                  minSize:
                    description: The lower limit of instances the cluster can scale
                      down to.
                    type: number
                  rootVolumeType:
                    description: The root volume disk type.
                    type: string
                  scheduledTask:
                    description: Set scheduling object.
                    items:
                      properties:
                        shutdownHours:
                          description: Set shutdown hours for cluster object.
                          items:
                            properties:
                              isEnabled:
                                description: Enable the Ocean Kubernetes AutoUpdate.
                                type: boolean
                              timeWindows:
                                description: |-
                                  Set time windows for shutdown hours. specify a list of 'timeWindows' with at least one time window Each string is in the format of - ddd:hh:mm-ddd:hh:mm ddd = day of week = Sun | Mon | Tue | Wed | Thu | Fri | Sat hh = hour 24 = 0 -23 mm = minute = 0 - 59. Time windows should not overlap. required on cluster.scheduling.isEnabled = true. API Times are in UTC
                                  Example: Fri:15:30-Wed:14:30
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        tasks:
                          description: The scheduling tasks for the cluster.
                          items:
                            properties:
                              cronExpression:
                                description: |-
                                  A valid cron expression. For example : " * * * * * ".The cron is running in UTC time zone and is in Unix cron format Cron Expression Validator Script. Only one of ‘frequency’ or ‘cronExpression’ should be used at a time. Required for cluster.scheduling.tasks object
                                  Example: 0 1 * * *
                                type: string
                              isEnabled:
                                description: Enable the Ocean Kubernetes AutoUpdate.
                                type: boolean
                              taskParameters:
                                description: The scheduling parameters for the cluster.
                                items:
                                  properties:
                                    clusterRoll:
                                      description: The cluster roll parameters for
                                        the cluster.
                                      items:
                                        properties:
                                          batchMinHealthyPercentage:
                                            description: Indicates the threshold of
                                              minimum healthy instances in single
                                              batch. If the amount of healthy instances
                                              in single batch is under the threshold,
                                              the cluster roll will fail. If exists,
                                              the parameter value will be in range
                                              of 1-100. In case of null as value,
                                              the default value in the backend will
                                              be 50%. Value of param should represent
                                              the number in percentage (%) of the
                                              batch.
                                            type: number
                                          batchSizePercentage:
                                            description: |-
                                              Value in % to set size of batch in roll. Valid values are 0-100
                                              Example: 20.
                                            type: number
                                          comment:
                                            description: Add a comment description
                                              for the roll. The comment is limited
                                              to 256 chars.
                                            type: string
                                          respectPdb:
                                            description: During the roll, if the parameter
                                              is set to true we honor PDB during the
                                              instance replacement.
                                            type: boolean
                                        type: object
                                      type: array
                                  type: object
                                type: array
                              taskType:
                                description: 'Valid values: "clusterRoll". Required
                                  for cluster.scheduling.tasks object.'
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  shieldedInstanceConfig:
                    description: The Ocean shielded instance configuration object.
                    items:
                      properties:
                        enableIntegrityMonitoring:
                          description: Boolean. Enable the integrity monitoring parameter
                            on the GCP instances.
                          type: boolean
                        enableSecureBoot:
                          description: Boolean. Enable the secure boot parameter on
                            the GCP instances.
                          type: boolean
                      type: object
                    type: array
                  strategy:
                    description: Strategy object.
                    items:
                      properties:
                        drainingTimeout:
                          description: The draining timeout (in seconds) before terminating
                            the instance.
                          type: number
                        preemptiblePercentage:
                          description: Defines the desired preemptible percentage
                            for the cluster.
                          type: number
                        provisioningModel:
                          description: 'Define the provisioning model of the launched
                            instances. Valid values: SPOT, PREEMPTIBLE.'
                          type: string
                        scalingOrientation:
                          type: string
                        shouldUtilizeCommitments:
                          description: Enable committed use discounts utilization.
                          type: boolean
                      type: object
                    type: array
                  updatePolicy:
                    items:
                      properties:
                        conditionedRoll:
                          description: Spot will perform a cluster Roll in accordance
                            with a relevant modification of the cluster’s settings.
                            When set to true , only specific changes in the cluster’s
                            configuration will trigger a cluster roll (such as AMI,
                            Key Pair, user data, instance types, load balancers, etc).
                          type: boolean
                        rollConfig:
                          description: Holds the roll configuration.
                          items:
                            properties:
                              batchMinHealthyPercentage:
                                description: Indicates the threshold of minimum healthy
                                  instances in single batch. If the amount of healthy
                                  instances in single batch is under the threshold,
                                  the cluster roll will fail. If exists, the parameter
                                  value will be in range of 1-100. In case of null
                                  as value, the default value in the backend will
                                  be 50%. Value of param should represent the number
                                  in percentage (%) of the batch.
                                type: number
                              batchSizePercentage:
                                description: |-
                                  Value in % to set size of batch in roll. Valid values are 0-100
                                  Example: 20.
                                type: number
                              launchSpecIds:
                                description: List of Virtual Node Group identifiers
                                  to be rolled.
                                items:
                                  type: string
                                type: array
                              respectPdb:
                                description: During the roll, if the parameter is
                                  set to true we honor PDB during the instance replacement.
                                type: boolean
                            type: object
                          type: array
                        shouldRoll:
                          description: Enables the roll.
                          type: boolean
                      type: object
                    type: array
                  useAsTemplateOnly:
                    description: launch specification defined on the Ocean object
                      will function only as a template for virtual node groups.
                    type: boolean
                  whitelist:
                    description: Instance types allowed in the Ocean cluster. Cannot
                      be configured if blacklist list is configured.
                    items:
                      type: string
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
