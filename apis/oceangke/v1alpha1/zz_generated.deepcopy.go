//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscalerInitParameters) DeepCopyInto(out *AutoscalerInitParameters) {
	*out = *in
	if in.AutoHeadroomPercentage != nil {
		in, out := &in.AutoHeadroomPercentage, &out.AutoHeadroomPercentage
		*out = new(float64)
		**out = **in
	}
	if in.Cooldown != nil {
		in, out := &in.Cooldown, &out.Cooldown
		*out = new(float64)
		**out = **in
	}
	if in.Down != nil {
		in, out := &in.Down, &out.Down
		*out = make([]DownInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnableAutomaticAndManualHeadroom != nil {
		in, out := &in.EnableAutomaticAndManualHeadroom, &out.EnableAutomaticAndManualHeadroom
		*out = new(bool)
		**out = **in
	}
	if in.Headroom != nil {
		in, out := &in.Headroom, &out.Headroom
		*out = make([]HeadroomInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsAutoConfig != nil {
		in, out := &in.IsAutoConfig, &out.IsAutoConfig
		*out = new(bool)
		**out = **in
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ResourceLimits != nil {
		in, out := &in.ResourceLimits, &out.ResourceLimits
		*out = make([]ResourceLimitsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscalerInitParameters.
func (in *AutoscalerInitParameters) DeepCopy() *AutoscalerInitParameters {
	if in == nil {
		return nil
	}
	out := new(AutoscalerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscalerObservation) DeepCopyInto(out *AutoscalerObservation) {
	*out = *in
	if in.AutoHeadroomPercentage != nil {
		in, out := &in.AutoHeadroomPercentage, &out.AutoHeadroomPercentage
		*out = new(float64)
		**out = **in
	}
	if in.Cooldown != nil {
		in, out := &in.Cooldown, &out.Cooldown
		*out = new(float64)
		**out = **in
	}
	if in.Down != nil {
		in, out := &in.Down, &out.Down
		*out = make([]DownObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnableAutomaticAndManualHeadroom != nil {
		in, out := &in.EnableAutomaticAndManualHeadroom, &out.EnableAutomaticAndManualHeadroom
		*out = new(bool)
		**out = **in
	}
	if in.Headroom != nil {
		in, out := &in.Headroom, &out.Headroom
		*out = make([]HeadroomObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsAutoConfig != nil {
		in, out := &in.IsAutoConfig, &out.IsAutoConfig
		*out = new(bool)
		**out = **in
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ResourceLimits != nil {
		in, out := &in.ResourceLimits, &out.ResourceLimits
		*out = make([]ResourceLimitsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscalerObservation.
func (in *AutoscalerObservation) DeepCopy() *AutoscalerObservation {
	if in == nil {
		return nil
	}
	out := new(AutoscalerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscalerParameters) DeepCopyInto(out *AutoscalerParameters) {
	*out = *in
	if in.AutoHeadroomPercentage != nil {
		in, out := &in.AutoHeadroomPercentage, &out.AutoHeadroomPercentage
		*out = new(float64)
		**out = **in
	}
	if in.Cooldown != nil {
		in, out := &in.Cooldown, &out.Cooldown
		*out = new(float64)
		**out = **in
	}
	if in.Down != nil {
		in, out := &in.Down, &out.Down
		*out = make([]DownParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnableAutomaticAndManualHeadroom != nil {
		in, out := &in.EnableAutomaticAndManualHeadroom, &out.EnableAutomaticAndManualHeadroom
		*out = new(bool)
		**out = **in
	}
	if in.Headroom != nil {
		in, out := &in.Headroom, &out.Headroom
		*out = make([]HeadroomParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsAutoConfig != nil {
		in, out := &in.IsAutoConfig, &out.IsAutoConfig
		*out = new(bool)
		**out = **in
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ResourceLimits != nil {
		in, out := &in.ResourceLimits, &out.ResourceLimits
		*out = make([]ResourceLimitsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscalerParameters.
func (in *AutoscalerParameters) DeepCopy() *AutoscalerParameters {
	if in == nil {
		return nil
	}
	out := new(AutoscalerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendServicesInitParameters) DeepCopyInto(out *BackendServicesInitParameters) {
	*out = *in
	if in.LocationType != nil {
		in, out := &in.LocationType, &out.LocationType
		*out = new(string)
		**out = **in
	}
	if in.NamedPorts != nil {
		in, out := &in.NamedPorts, &out.NamedPorts
		*out = make([]NamedPortsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scheme != nil {
		in, out := &in.Scheme, &out.Scheme
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendServicesInitParameters.
func (in *BackendServicesInitParameters) DeepCopy() *BackendServicesInitParameters {
	if in == nil {
		return nil
	}
	out := new(BackendServicesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendServicesObservation) DeepCopyInto(out *BackendServicesObservation) {
	*out = *in
	if in.LocationType != nil {
		in, out := &in.LocationType, &out.LocationType
		*out = new(string)
		**out = **in
	}
	if in.NamedPorts != nil {
		in, out := &in.NamedPorts, &out.NamedPorts
		*out = make([]NamedPortsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scheme != nil {
		in, out := &in.Scheme, &out.Scheme
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendServicesObservation.
func (in *BackendServicesObservation) DeepCopy() *BackendServicesObservation {
	if in == nil {
		return nil
	}
	out := new(BackendServicesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendServicesParameters) DeepCopyInto(out *BackendServicesParameters) {
	*out = *in
	if in.LocationType != nil {
		in, out := &in.LocationType, &out.LocationType
		*out = new(string)
		**out = **in
	}
	if in.NamedPorts != nil {
		in, out := &in.NamedPorts, &out.NamedPorts
		*out = make([]NamedPortsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scheme != nil {
		in, out := &in.Scheme, &out.Scheme
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendServicesParameters.
func (in *BackendServicesParameters) DeepCopy() *BackendServicesParameters {
	if in == nil {
		return nil
	}
	out := new(BackendServicesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterRollInitParameters) DeepCopyInto(out *ClusterRollInitParameters) {
	*out = *in
	if in.BatchMinHealthyPercentage != nil {
		in, out := &in.BatchMinHealthyPercentage, &out.BatchMinHealthyPercentage
		*out = new(float64)
		**out = **in
	}
	if in.BatchSizePercentage != nil {
		in, out := &in.BatchSizePercentage, &out.BatchSizePercentage
		*out = new(float64)
		**out = **in
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.RespectPdb != nil {
		in, out := &in.RespectPdb, &out.RespectPdb
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterRollInitParameters.
func (in *ClusterRollInitParameters) DeepCopy() *ClusterRollInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterRollInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterRollObservation) DeepCopyInto(out *ClusterRollObservation) {
	*out = *in
	if in.BatchMinHealthyPercentage != nil {
		in, out := &in.BatchMinHealthyPercentage, &out.BatchMinHealthyPercentage
		*out = new(float64)
		**out = **in
	}
	if in.BatchSizePercentage != nil {
		in, out := &in.BatchSizePercentage, &out.BatchSizePercentage
		*out = new(float64)
		**out = **in
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.RespectPdb != nil {
		in, out := &in.RespectPdb, &out.RespectPdb
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterRollObservation.
func (in *ClusterRollObservation) DeepCopy() *ClusterRollObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterRollObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterRollParameters) DeepCopyInto(out *ClusterRollParameters) {
	*out = *in
	if in.BatchMinHealthyPercentage != nil {
		in, out := &in.BatchMinHealthyPercentage, &out.BatchMinHealthyPercentage
		*out = new(float64)
		**out = **in
	}
	if in.BatchSizePercentage != nil {
		in, out := &in.BatchSizePercentage, &out.BatchSizePercentage
		*out = new(float64)
		**out = **in
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.RespectPdb != nil {
		in, out := &in.RespectPdb, &out.RespectPdb
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterRollParameters.
func (in *ClusterRollParameters) DeepCopy() *ClusterRollParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterRollParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DownInitParameters) DeepCopyInto(out *DownInitParameters) {
	*out = *in
	if in.EvaluationPeriods != nil {
		in, out := &in.EvaluationPeriods, &out.EvaluationPeriods
		*out = new(float64)
		**out = **in
	}
	if in.IsAggressiveScaleDownEnabled != nil {
		in, out := &in.IsAggressiveScaleDownEnabled, &out.IsAggressiveScaleDownEnabled
		*out = new(bool)
		**out = **in
	}
	if in.MaxScaleDownPercentage != nil {
		in, out := &in.MaxScaleDownPercentage, &out.MaxScaleDownPercentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DownInitParameters.
func (in *DownInitParameters) DeepCopy() *DownInitParameters {
	if in == nil {
		return nil
	}
	out := new(DownInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DownObservation) DeepCopyInto(out *DownObservation) {
	*out = *in
	if in.EvaluationPeriods != nil {
		in, out := &in.EvaluationPeriods, &out.EvaluationPeriods
		*out = new(float64)
		**out = **in
	}
	if in.IsAggressiveScaleDownEnabled != nil {
		in, out := &in.IsAggressiveScaleDownEnabled, &out.IsAggressiveScaleDownEnabled
		*out = new(bool)
		**out = **in
	}
	if in.MaxScaleDownPercentage != nil {
		in, out := &in.MaxScaleDownPercentage, &out.MaxScaleDownPercentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DownObservation.
func (in *DownObservation) DeepCopy() *DownObservation {
	if in == nil {
		return nil
	}
	out := new(DownObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DownParameters) DeepCopyInto(out *DownParameters) {
	*out = *in
	if in.EvaluationPeriods != nil {
		in, out := &in.EvaluationPeriods, &out.EvaluationPeriods
		*out = new(float64)
		**out = **in
	}
	if in.IsAggressiveScaleDownEnabled != nil {
		in, out := &in.IsAggressiveScaleDownEnabled, &out.IsAggressiveScaleDownEnabled
		*out = new(bool)
		**out = **in
	}
	if in.MaxScaleDownPercentage != nil {
		in, out := &in.MaxScaleDownPercentage, &out.MaxScaleDownPercentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DownParameters.
func (in *DownParameters) DeepCopy() *DownParameters {
	if in == nil {
		return nil
	}
	out := new(DownParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FiltersInitParameters) DeepCopyInto(out *FiltersInitParameters) {
	*out = *in
	if in.ExcludeFamilies != nil {
		in, out := &in.ExcludeFamilies, &out.ExcludeFamilies
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeFamilies != nil {
		in, out := &in.IncludeFamilies, &out.IncludeFamilies
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxMemoryGib != nil {
		in, out := &in.MaxMemoryGib, &out.MaxMemoryGib
		*out = new(float64)
		**out = **in
	}
	if in.MaxVcpu != nil {
		in, out := &in.MaxVcpu, &out.MaxVcpu
		*out = new(float64)
		**out = **in
	}
	if in.MinMemoryGib != nil {
		in, out := &in.MinMemoryGib, &out.MinMemoryGib
		*out = new(float64)
		**out = **in
	}
	if in.MinVcpu != nil {
		in, out := &in.MinVcpu, &out.MinVcpu
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FiltersInitParameters.
func (in *FiltersInitParameters) DeepCopy() *FiltersInitParameters {
	if in == nil {
		return nil
	}
	out := new(FiltersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FiltersObservation) DeepCopyInto(out *FiltersObservation) {
	*out = *in
	if in.ExcludeFamilies != nil {
		in, out := &in.ExcludeFamilies, &out.ExcludeFamilies
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeFamilies != nil {
		in, out := &in.IncludeFamilies, &out.IncludeFamilies
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxMemoryGib != nil {
		in, out := &in.MaxMemoryGib, &out.MaxMemoryGib
		*out = new(float64)
		**out = **in
	}
	if in.MaxVcpu != nil {
		in, out := &in.MaxVcpu, &out.MaxVcpu
		*out = new(float64)
		**out = **in
	}
	if in.MinMemoryGib != nil {
		in, out := &in.MinMemoryGib, &out.MinMemoryGib
		*out = new(float64)
		**out = **in
	}
	if in.MinVcpu != nil {
		in, out := &in.MinVcpu, &out.MinVcpu
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FiltersObservation.
func (in *FiltersObservation) DeepCopy() *FiltersObservation {
	if in == nil {
		return nil
	}
	out := new(FiltersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FiltersParameters) DeepCopyInto(out *FiltersParameters) {
	*out = *in
	if in.ExcludeFamilies != nil {
		in, out := &in.ExcludeFamilies, &out.ExcludeFamilies
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeFamilies != nil {
		in, out := &in.IncludeFamilies, &out.IncludeFamilies
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxMemoryGib != nil {
		in, out := &in.MaxMemoryGib, &out.MaxMemoryGib
		*out = new(float64)
		**out = **in
	}
	if in.MaxVcpu != nil {
		in, out := &in.MaxVcpu, &out.MaxVcpu
		*out = new(float64)
		**out = **in
	}
	if in.MinMemoryGib != nil {
		in, out := &in.MinMemoryGib, &out.MinMemoryGib
		*out = new(float64)
		**out = **in
	}
	if in.MinVcpu != nil {
		in, out := &in.MinVcpu, &out.MinVcpu
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FiltersParameters.
func (in *FiltersParameters) DeepCopy() *FiltersParameters {
	if in == nil {
		return nil
	}
	out := new(FiltersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeadroomInitParameters) DeepCopyInto(out *HeadroomInitParameters) {
	*out = *in
	if in.CPUPerUnit != nil {
		in, out := &in.CPUPerUnit, &out.CPUPerUnit
		*out = new(float64)
		**out = **in
	}
	if in.GpuPerUnit != nil {
		in, out := &in.GpuPerUnit, &out.GpuPerUnit
		*out = new(float64)
		**out = **in
	}
	if in.MemoryPerUnit != nil {
		in, out := &in.MemoryPerUnit, &out.MemoryPerUnit
		*out = new(float64)
		**out = **in
	}
	if in.NumOfUnits != nil {
		in, out := &in.NumOfUnits, &out.NumOfUnits
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeadroomInitParameters.
func (in *HeadroomInitParameters) DeepCopy() *HeadroomInitParameters {
	if in == nil {
		return nil
	}
	out := new(HeadroomInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeadroomObservation) DeepCopyInto(out *HeadroomObservation) {
	*out = *in
	if in.CPUPerUnit != nil {
		in, out := &in.CPUPerUnit, &out.CPUPerUnit
		*out = new(float64)
		**out = **in
	}
	if in.GpuPerUnit != nil {
		in, out := &in.GpuPerUnit, &out.GpuPerUnit
		*out = new(float64)
		**out = **in
	}
	if in.MemoryPerUnit != nil {
		in, out := &in.MemoryPerUnit, &out.MemoryPerUnit
		*out = new(float64)
		**out = **in
	}
	if in.NumOfUnits != nil {
		in, out := &in.NumOfUnits, &out.NumOfUnits
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeadroomObservation.
func (in *HeadroomObservation) DeepCopy() *HeadroomObservation {
	if in == nil {
		return nil
	}
	out := new(HeadroomObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeadroomParameters) DeepCopyInto(out *HeadroomParameters) {
	*out = *in
	if in.CPUPerUnit != nil {
		in, out := &in.CPUPerUnit, &out.CPUPerUnit
		*out = new(float64)
		**out = **in
	}
	if in.GpuPerUnit != nil {
		in, out := &in.GpuPerUnit, &out.GpuPerUnit
		*out = new(float64)
		**out = **in
	}
	if in.MemoryPerUnit != nil {
		in, out := &in.MemoryPerUnit, &out.MemoryPerUnit
		*out = new(float64)
		**out = **in
	}
	if in.NumOfUnits != nil {
		in, out := &in.NumOfUnits, &out.NumOfUnits
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeadroomParameters.
func (in *HeadroomParameters) DeepCopy() *HeadroomParameters {
	if in == nil {
		return nil
	}
	out := new(HeadroomParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamedPortsInitParameters) DeepCopyInto(out *NamedPortsInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Ports != nil {
		in, out := &in.Ports, &out.Ports
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamedPortsInitParameters.
func (in *NamedPortsInitParameters) DeepCopy() *NamedPortsInitParameters {
	if in == nil {
		return nil
	}
	out := new(NamedPortsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamedPortsObservation) DeepCopyInto(out *NamedPortsObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Ports != nil {
		in, out := &in.Ports, &out.Ports
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamedPortsObservation.
func (in *NamedPortsObservation) DeepCopy() *NamedPortsObservation {
	if in == nil {
		return nil
	}
	out := new(NamedPortsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamedPortsParameters) DeepCopyInto(out *NamedPortsParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Ports != nil {
		in, out := &in.Ports, &out.Ports
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamedPortsParameters.
func (in *NamedPortsParameters) DeepCopy() *NamedPortsParameters {
	if in == nil {
		return nil
	}
	out := new(NamedPortsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OceanGke) DeepCopyInto(out *OceanGke) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OceanGke.
func (in *OceanGke) DeepCopy() *OceanGke {
	if in == nil {
		return nil
	}
	out := new(OceanGke)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OceanGke) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OceanGkeInitParameters) DeepCopyInto(out *OceanGkeInitParameters) {
	*out = *in
	if in.Autoscaler != nil {
		in, out := &in.Autoscaler, &out.Autoscaler
		*out = make([]AutoscalerInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BackendServices != nil {
		in, out := &in.BackendServices, &out.BackendServices
		*out = make([]BackendServicesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Blacklist != nil {
		in, out := &in.Blacklist, &out.Blacklist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.ControllerClusterID != nil {
		in, out := &in.ControllerClusterID, &out.ControllerClusterID
		*out = new(string)
		**out = **in
	}
	if in.DesiredCapacity != nil {
		in, out := &in.DesiredCapacity, &out.DesiredCapacity
		*out = new(float64)
		**out = **in
	}
	if in.Filters != nil {
		in, out := &in.Filters, &out.Filters
		*out = make([]FiltersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MaxSize != nil {
		in, out := &in.MaxSize, &out.MaxSize
		*out = new(float64)
		**out = **in
	}
	if in.MinSize != nil {
		in, out := &in.MinSize, &out.MinSize
		*out = new(float64)
		**out = **in
	}
	if in.RootVolumeType != nil {
		in, out := &in.RootVolumeType, &out.RootVolumeType
		*out = new(string)
		**out = **in
	}
	if in.ScheduledTask != nil {
		in, out := &in.ScheduledTask, &out.ScheduledTask
		*out = make([]ScheduledTaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ShieldedInstanceConfig != nil {
		in, out := &in.ShieldedInstanceConfig, &out.ShieldedInstanceConfig
		*out = make([]ShieldedInstanceConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Strategy != nil {
		in, out := &in.Strategy, &out.Strategy
		*out = make([]StrategyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdatePolicy != nil {
		in, out := &in.UpdatePolicy, &out.UpdatePolicy
		*out = make([]UpdatePolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UseAsTemplateOnly != nil {
		in, out := &in.UseAsTemplateOnly, &out.UseAsTemplateOnly
		*out = new(bool)
		**out = **in
	}
	if in.Whitelist != nil {
		in, out := &in.Whitelist, &out.Whitelist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OceanGkeInitParameters.
func (in *OceanGkeInitParameters) DeepCopy() *OceanGkeInitParameters {
	if in == nil {
		return nil
	}
	out := new(OceanGkeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OceanGkeList) DeepCopyInto(out *OceanGkeList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]OceanGke, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OceanGkeList.
func (in *OceanGkeList) DeepCopy() *OceanGkeList {
	if in == nil {
		return nil
	}
	out := new(OceanGkeList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OceanGkeList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OceanGkeObservation) DeepCopyInto(out *OceanGkeObservation) {
	*out = *in
	if in.Autoscaler != nil {
		in, out := &in.Autoscaler, &out.Autoscaler
		*out = make([]AutoscalerObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BackendServices != nil {
		in, out := &in.BackendServices, &out.BackendServices
		*out = make([]BackendServicesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Blacklist != nil {
		in, out := &in.Blacklist, &out.Blacklist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClusterControllerID != nil {
		in, out := &in.ClusterControllerID, &out.ClusterControllerID
		*out = new(string)
		**out = **in
	}
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.ControllerClusterID != nil {
		in, out := &in.ControllerClusterID, &out.ControllerClusterID
		*out = new(string)
		**out = **in
	}
	if in.DesiredCapacity != nil {
		in, out := &in.DesiredCapacity, &out.DesiredCapacity
		*out = new(float64)
		**out = **in
	}
	if in.Filters != nil {
		in, out := &in.Filters, &out.Filters
		*out = make([]FiltersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MaxSize != nil {
		in, out := &in.MaxSize, &out.MaxSize
		*out = new(float64)
		**out = **in
	}
	if in.MinSize != nil {
		in, out := &in.MinSize, &out.MinSize
		*out = new(float64)
		**out = **in
	}
	if in.RootVolumeType != nil {
		in, out := &in.RootVolumeType, &out.RootVolumeType
		*out = new(string)
		**out = **in
	}
	if in.ScheduledTask != nil {
		in, out := &in.ScheduledTask, &out.ScheduledTask
		*out = make([]ScheduledTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ShieldedInstanceConfig != nil {
		in, out := &in.ShieldedInstanceConfig, &out.ShieldedInstanceConfig
		*out = make([]ShieldedInstanceConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Strategy != nil {
		in, out := &in.Strategy, &out.Strategy
		*out = make([]StrategyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdatePolicy != nil {
		in, out := &in.UpdatePolicy, &out.UpdatePolicy
		*out = make([]UpdatePolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UseAsTemplateOnly != nil {
		in, out := &in.UseAsTemplateOnly, &out.UseAsTemplateOnly
		*out = new(bool)
		**out = **in
	}
	if in.Whitelist != nil {
		in, out := &in.Whitelist, &out.Whitelist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OceanGkeObservation.
func (in *OceanGkeObservation) DeepCopy() *OceanGkeObservation {
	if in == nil {
		return nil
	}
	out := new(OceanGkeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OceanGkeParameters) DeepCopyInto(out *OceanGkeParameters) {
	*out = *in
	if in.Autoscaler != nil {
		in, out := &in.Autoscaler, &out.Autoscaler
		*out = make([]AutoscalerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BackendServices != nil {
		in, out := &in.BackendServices, &out.BackendServices
		*out = make([]BackendServicesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Blacklist != nil {
		in, out := &in.Blacklist, &out.Blacklist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.ControllerClusterID != nil {
		in, out := &in.ControllerClusterID, &out.ControllerClusterID
		*out = new(string)
		**out = **in
	}
	if in.DesiredCapacity != nil {
		in, out := &in.DesiredCapacity, &out.DesiredCapacity
		*out = new(float64)
		**out = **in
	}
	if in.Filters != nil {
		in, out := &in.Filters, &out.Filters
		*out = make([]FiltersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MaxSize != nil {
		in, out := &in.MaxSize, &out.MaxSize
		*out = new(float64)
		**out = **in
	}
	if in.MinSize != nil {
		in, out := &in.MinSize, &out.MinSize
		*out = new(float64)
		**out = **in
	}
	if in.RootVolumeType != nil {
		in, out := &in.RootVolumeType, &out.RootVolumeType
		*out = new(string)
		**out = **in
	}
	if in.ScheduledTask != nil {
		in, out := &in.ScheduledTask, &out.ScheduledTask
		*out = make([]ScheduledTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ShieldedInstanceConfig != nil {
		in, out := &in.ShieldedInstanceConfig, &out.ShieldedInstanceConfig
		*out = make([]ShieldedInstanceConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Strategy != nil {
		in, out := &in.Strategy, &out.Strategy
		*out = make([]StrategyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdatePolicy != nil {
		in, out := &in.UpdatePolicy, &out.UpdatePolicy
		*out = make([]UpdatePolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UseAsTemplateOnly != nil {
		in, out := &in.UseAsTemplateOnly, &out.UseAsTemplateOnly
		*out = new(bool)
		**out = **in
	}
	if in.Whitelist != nil {
		in, out := &in.Whitelist, &out.Whitelist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OceanGkeParameters.
func (in *OceanGkeParameters) DeepCopy() *OceanGkeParameters {
	if in == nil {
		return nil
	}
	out := new(OceanGkeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OceanGkeSpec) DeepCopyInto(out *OceanGkeSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OceanGkeSpec.
func (in *OceanGkeSpec) DeepCopy() *OceanGkeSpec {
	if in == nil {
		return nil
	}
	out := new(OceanGkeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OceanGkeStatus) DeepCopyInto(out *OceanGkeStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OceanGkeStatus.
func (in *OceanGkeStatus) DeepCopy() *OceanGkeStatus {
	if in == nil {
		return nil
	}
	out := new(OceanGkeStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceLimitsInitParameters) DeepCopyInto(out *ResourceLimitsInitParameters) {
	*out = *in
	if in.MaxMemoryGib != nil {
		in, out := &in.MaxMemoryGib, &out.MaxMemoryGib
		*out = new(float64)
		**out = **in
	}
	if in.MaxVcpu != nil {
		in, out := &in.MaxVcpu, &out.MaxVcpu
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceLimitsInitParameters.
func (in *ResourceLimitsInitParameters) DeepCopy() *ResourceLimitsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ResourceLimitsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceLimitsObservation) DeepCopyInto(out *ResourceLimitsObservation) {
	*out = *in
	if in.MaxMemoryGib != nil {
		in, out := &in.MaxMemoryGib, &out.MaxMemoryGib
		*out = new(float64)
		**out = **in
	}
	if in.MaxVcpu != nil {
		in, out := &in.MaxVcpu, &out.MaxVcpu
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceLimitsObservation.
func (in *ResourceLimitsObservation) DeepCopy() *ResourceLimitsObservation {
	if in == nil {
		return nil
	}
	out := new(ResourceLimitsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceLimitsParameters) DeepCopyInto(out *ResourceLimitsParameters) {
	*out = *in
	if in.MaxMemoryGib != nil {
		in, out := &in.MaxMemoryGib, &out.MaxMemoryGib
		*out = new(float64)
		**out = **in
	}
	if in.MaxVcpu != nil {
		in, out := &in.MaxVcpu, &out.MaxVcpu
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceLimitsParameters.
func (in *ResourceLimitsParameters) DeepCopy() *ResourceLimitsParameters {
	if in == nil {
		return nil
	}
	out := new(ResourceLimitsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RollConfigInitParameters) DeepCopyInto(out *RollConfigInitParameters) {
	*out = *in
	if in.BatchMinHealthyPercentage != nil {
		in, out := &in.BatchMinHealthyPercentage, &out.BatchMinHealthyPercentage
		*out = new(float64)
		**out = **in
	}
	if in.BatchSizePercentage != nil {
		in, out := &in.BatchSizePercentage, &out.BatchSizePercentage
		*out = new(float64)
		**out = **in
	}
	if in.LaunchSpecIds != nil {
		in, out := &in.LaunchSpecIds, &out.LaunchSpecIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RespectPdb != nil {
		in, out := &in.RespectPdb, &out.RespectPdb
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RollConfigInitParameters.
func (in *RollConfigInitParameters) DeepCopy() *RollConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(RollConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RollConfigObservation) DeepCopyInto(out *RollConfigObservation) {
	*out = *in
	if in.BatchMinHealthyPercentage != nil {
		in, out := &in.BatchMinHealthyPercentage, &out.BatchMinHealthyPercentage
		*out = new(float64)
		**out = **in
	}
	if in.BatchSizePercentage != nil {
		in, out := &in.BatchSizePercentage, &out.BatchSizePercentage
		*out = new(float64)
		**out = **in
	}
	if in.LaunchSpecIds != nil {
		in, out := &in.LaunchSpecIds, &out.LaunchSpecIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RespectPdb != nil {
		in, out := &in.RespectPdb, &out.RespectPdb
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RollConfigObservation.
func (in *RollConfigObservation) DeepCopy() *RollConfigObservation {
	if in == nil {
		return nil
	}
	out := new(RollConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RollConfigParameters) DeepCopyInto(out *RollConfigParameters) {
	*out = *in
	if in.BatchMinHealthyPercentage != nil {
		in, out := &in.BatchMinHealthyPercentage, &out.BatchMinHealthyPercentage
		*out = new(float64)
		**out = **in
	}
	if in.BatchSizePercentage != nil {
		in, out := &in.BatchSizePercentage, &out.BatchSizePercentage
		*out = new(float64)
		**out = **in
	}
	if in.LaunchSpecIds != nil {
		in, out := &in.LaunchSpecIds, &out.LaunchSpecIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RespectPdb != nil {
		in, out := &in.RespectPdb, &out.RespectPdb
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RollConfigParameters.
func (in *RollConfigParameters) DeepCopy() *RollConfigParameters {
	if in == nil {
		return nil
	}
	out := new(RollConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduledTaskInitParameters) DeepCopyInto(out *ScheduledTaskInitParameters) {
	*out = *in
	if in.ShutdownHours != nil {
		in, out := &in.ShutdownHours, &out.ShutdownHours
		*out = make([]ShutdownHoursInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tasks != nil {
		in, out := &in.Tasks, &out.Tasks
		*out = make([]TasksInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduledTaskInitParameters.
func (in *ScheduledTaskInitParameters) DeepCopy() *ScheduledTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(ScheduledTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduledTaskObservation) DeepCopyInto(out *ScheduledTaskObservation) {
	*out = *in
	if in.ShutdownHours != nil {
		in, out := &in.ShutdownHours, &out.ShutdownHours
		*out = make([]ShutdownHoursObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tasks != nil {
		in, out := &in.Tasks, &out.Tasks
		*out = make([]TasksObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduledTaskObservation.
func (in *ScheduledTaskObservation) DeepCopy() *ScheduledTaskObservation {
	if in == nil {
		return nil
	}
	out := new(ScheduledTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduledTaskParameters) DeepCopyInto(out *ScheduledTaskParameters) {
	*out = *in
	if in.ShutdownHours != nil {
		in, out := &in.ShutdownHours, &out.ShutdownHours
		*out = make([]ShutdownHoursParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tasks != nil {
		in, out := &in.Tasks, &out.Tasks
		*out = make([]TasksParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduledTaskParameters.
func (in *ScheduledTaskParameters) DeepCopy() *ScheduledTaskParameters {
	if in == nil {
		return nil
	}
	out := new(ScheduledTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShieldedInstanceConfigInitParameters) DeepCopyInto(out *ShieldedInstanceConfigInitParameters) {
	*out = *in
	if in.EnableIntegrityMonitoring != nil {
		in, out := &in.EnableIntegrityMonitoring, &out.EnableIntegrityMonitoring
		*out = new(bool)
		**out = **in
	}
	if in.EnableSecureBoot != nil {
		in, out := &in.EnableSecureBoot, &out.EnableSecureBoot
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShieldedInstanceConfigInitParameters.
func (in *ShieldedInstanceConfigInitParameters) DeepCopy() *ShieldedInstanceConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(ShieldedInstanceConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShieldedInstanceConfigObservation) DeepCopyInto(out *ShieldedInstanceConfigObservation) {
	*out = *in
	if in.EnableIntegrityMonitoring != nil {
		in, out := &in.EnableIntegrityMonitoring, &out.EnableIntegrityMonitoring
		*out = new(bool)
		**out = **in
	}
	if in.EnableSecureBoot != nil {
		in, out := &in.EnableSecureBoot, &out.EnableSecureBoot
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShieldedInstanceConfigObservation.
func (in *ShieldedInstanceConfigObservation) DeepCopy() *ShieldedInstanceConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ShieldedInstanceConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShieldedInstanceConfigParameters) DeepCopyInto(out *ShieldedInstanceConfigParameters) {
	*out = *in
	if in.EnableIntegrityMonitoring != nil {
		in, out := &in.EnableIntegrityMonitoring, &out.EnableIntegrityMonitoring
		*out = new(bool)
		**out = **in
	}
	if in.EnableSecureBoot != nil {
		in, out := &in.EnableSecureBoot, &out.EnableSecureBoot
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShieldedInstanceConfigParameters.
func (in *ShieldedInstanceConfigParameters) DeepCopy() *ShieldedInstanceConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ShieldedInstanceConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShutdownHoursInitParameters) DeepCopyInto(out *ShutdownHoursInitParameters) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.TimeWindows != nil {
		in, out := &in.TimeWindows, &out.TimeWindows
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShutdownHoursInitParameters.
func (in *ShutdownHoursInitParameters) DeepCopy() *ShutdownHoursInitParameters {
	if in == nil {
		return nil
	}
	out := new(ShutdownHoursInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShutdownHoursObservation) DeepCopyInto(out *ShutdownHoursObservation) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.TimeWindows != nil {
		in, out := &in.TimeWindows, &out.TimeWindows
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShutdownHoursObservation.
func (in *ShutdownHoursObservation) DeepCopy() *ShutdownHoursObservation {
	if in == nil {
		return nil
	}
	out := new(ShutdownHoursObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShutdownHoursParameters) DeepCopyInto(out *ShutdownHoursParameters) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.TimeWindows != nil {
		in, out := &in.TimeWindows, &out.TimeWindows
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShutdownHoursParameters.
func (in *ShutdownHoursParameters) DeepCopy() *ShutdownHoursParameters {
	if in == nil {
		return nil
	}
	out := new(ShutdownHoursParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StrategyInitParameters) DeepCopyInto(out *StrategyInitParameters) {
	*out = *in
	if in.DrainingTimeout != nil {
		in, out := &in.DrainingTimeout, &out.DrainingTimeout
		*out = new(float64)
		**out = **in
	}
	if in.PreemptiblePercentage != nil {
		in, out := &in.PreemptiblePercentage, &out.PreemptiblePercentage
		*out = new(float64)
		**out = **in
	}
	if in.ProvisioningModel != nil {
		in, out := &in.ProvisioningModel, &out.ProvisioningModel
		*out = new(string)
		**out = **in
	}
	if in.ShouldUtilizeCommitments != nil {
		in, out := &in.ShouldUtilizeCommitments, &out.ShouldUtilizeCommitments
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StrategyInitParameters.
func (in *StrategyInitParameters) DeepCopy() *StrategyInitParameters {
	if in == nil {
		return nil
	}
	out := new(StrategyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StrategyObservation) DeepCopyInto(out *StrategyObservation) {
	*out = *in
	if in.DrainingTimeout != nil {
		in, out := &in.DrainingTimeout, &out.DrainingTimeout
		*out = new(float64)
		**out = **in
	}
	if in.PreemptiblePercentage != nil {
		in, out := &in.PreemptiblePercentage, &out.PreemptiblePercentage
		*out = new(float64)
		**out = **in
	}
	if in.ProvisioningModel != nil {
		in, out := &in.ProvisioningModel, &out.ProvisioningModel
		*out = new(string)
		**out = **in
	}
	if in.ShouldUtilizeCommitments != nil {
		in, out := &in.ShouldUtilizeCommitments, &out.ShouldUtilizeCommitments
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StrategyObservation.
func (in *StrategyObservation) DeepCopy() *StrategyObservation {
	if in == nil {
		return nil
	}
	out := new(StrategyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StrategyParameters) DeepCopyInto(out *StrategyParameters) {
	*out = *in
	if in.DrainingTimeout != nil {
		in, out := &in.DrainingTimeout, &out.DrainingTimeout
		*out = new(float64)
		**out = **in
	}
	if in.PreemptiblePercentage != nil {
		in, out := &in.PreemptiblePercentage, &out.PreemptiblePercentage
		*out = new(float64)
		**out = **in
	}
	if in.ProvisioningModel != nil {
		in, out := &in.ProvisioningModel, &out.ProvisioningModel
		*out = new(string)
		**out = **in
	}
	if in.ShouldUtilizeCommitments != nil {
		in, out := &in.ShouldUtilizeCommitments, &out.ShouldUtilizeCommitments
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StrategyParameters.
func (in *StrategyParameters) DeepCopy() *StrategyParameters {
	if in == nil {
		return nil
	}
	out := new(StrategyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskParametersInitParameters) DeepCopyInto(out *TaskParametersInitParameters) {
	*out = *in
	if in.ClusterRoll != nil {
		in, out := &in.ClusterRoll, &out.ClusterRoll
		*out = make([]ClusterRollInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskParametersInitParameters.
func (in *TaskParametersInitParameters) DeepCopy() *TaskParametersInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskParametersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskParametersObservation) DeepCopyInto(out *TaskParametersObservation) {
	*out = *in
	if in.ClusterRoll != nil {
		in, out := &in.ClusterRoll, &out.ClusterRoll
		*out = make([]ClusterRollObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskParametersObservation.
func (in *TaskParametersObservation) DeepCopy() *TaskParametersObservation {
	if in == nil {
		return nil
	}
	out := new(TaskParametersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskParametersParameters) DeepCopyInto(out *TaskParametersParameters) {
	*out = *in
	if in.ClusterRoll != nil {
		in, out := &in.ClusterRoll, &out.ClusterRoll
		*out = make([]ClusterRollParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskParametersParameters.
func (in *TaskParametersParameters) DeepCopy() *TaskParametersParameters {
	if in == nil {
		return nil
	}
	out := new(TaskParametersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TasksInitParameters) DeepCopyInto(out *TasksInitParameters) {
	*out = *in
	if in.CronExpression != nil {
		in, out := &in.CronExpression, &out.CronExpression
		*out = new(string)
		**out = **in
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.TaskParameters != nil {
		in, out := &in.TaskParameters, &out.TaskParameters
		*out = make([]TaskParametersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TaskType != nil {
		in, out := &in.TaskType, &out.TaskType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TasksInitParameters.
func (in *TasksInitParameters) DeepCopy() *TasksInitParameters {
	if in == nil {
		return nil
	}
	out := new(TasksInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TasksObservation) DeepCopyInto(out *TasksObservation) {
	*out = *in
	if in.CronExpression != nil {
		in, out := &in.CronExpression, &out.CronExpression
		*out = new(string)
		**out = **in
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.TaskParameters != nil {
		in, out := &in.TaskParameters, &out.TaskParameters
		*out = make([]TaskParametersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TaskType != nil {
		in, out := &in.TaskType, &out.TaskType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TasksObservation.
func (in *TasksObservation) DeepCopy() *TasksObservation {
	if in == nil {
		return nil
	}
	out := new(TasksObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TasksParameters) DeepCopyInto(out *TasksParameters) {
	*out = *in
	if in.CronExpression != nil {
		in, out := &in.CronExpression, &out.CronExpression
		*out = new(string)
		**out = **in
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.TaskParameters != nil {
		in, out := &in.TaskParameters, &out.TaskParameters
		*out = make([]TaskParametersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TaskType != nil {
		in, out := &in.TaskType, &out.TaskType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TasksParameters.
func (in *TasksParameters) DeepCopy() *TasksParameters {
	if in == nil {
		return nil
	}
	out := new(TasksParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UpdatePolicyInitParameters) DeepCopyInto(out *UpdatePolicyInitParameters) {
	*out = *in
	if in.ConditionedRoll != nil {
		in, out := &in.ConditionedRoll, &out.ConditionedRoll
		*out = new(bool)
		**out = **in
	}
	if in.RollConfig != nil {
		in, out := &in.RollConfig, &out.RollConfig
		*out = make([]RollConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ShouldRoll != nil {
		in, out := &in.ShouldRoll, &out.ShouldRoll
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UpdatePolicyInitParameters.
func (in *UpdatePolicyInitParameters) DeepCopy() *UpdatePolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(UpdatePolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UpdatePolicyObservation) DeepCopyInto(out *UpdatePolicyObservation) {
	*out = *in
	if in.ConditionedRoll != nil {
		in, out := &in.ConditionedRoll, &out.ConditionedRoll
		*out = new(bool)
		**out = **in
	}
	if in.RollConfig != nil {
		in, out := &in.RollConfig, &out.RollConfig
		*out = make([]RollConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ShouldRoll != nil {
		in, out := &in.ShouldRoll, &out.ShouldRoll
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UpdatePolicyObservation.
func (in *UpdatePolicyObservation) DeepCopy() *UpdatePolicyObservation {
	if in == nil {
		return nil
	}
	out := new(UpdatePolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UpdatePolicyParameters) DeepCopyInto(out *UpdatePolicyParameters) {
	*out = *in
	if in.ConditionedRoll != nil {
		in, out := &in.ConditionedRoll, &out.ConditionedRoll
		*out = new(bool)
		**out = **in
	}
	if in.RollConfig != nil {
		in, out := &in.RollConfig, &out.RollConfig
		*out = make([]RollConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ShouldRoll != nil {
		in, out := &in.ShouldRoll, &out.ShouldRoll
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UpdatePolicyParameters.
func (in *UpdatePolicyParameters) DeepCopy() *UpdatePolicyParameters {
	if in == nil {
		return nil
	}
	out := new(UpdatePolicyParameters)
	in.DeepCopyInto(out)
	return out
}
