//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomaticInitParameters) DeepCopyInto(out *AutomaticInitParameters) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomaticInitParameters.
func (in *AutomaticInitParameters) DeepCopy() *AutomaticInitParameters {
	if in == nil {
		return nil
	}
	out := new(AutomaticInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomaticObservation) DeepCopyInto(out *AutomaticObservation) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomaticObservation.
func (in *AutomaticObservation) DeepCopy() *AutomaticObservation {
	if in == nil {
		return nil
	}
	out := new(AutomaticObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomaticParameters) DeepCopyInto(out *AutomaticParameters) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomaticParameters.
func (in *AutomaticParameters) DeepCopy() *AutomaticParameters {
	if in == nil {
		return nil
	}
	out := new(AutomaticParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscaleDownInitParameters) DeepCopyInto(out *AutoscaleDownInitParameters) {
	*out = *in
	if in.MaxScaleDownPercentage != nil {
		in, out := &in.MaxScaleDownPercentage, &out.MaxScaleDownPercentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscaleDownInitParameters.
func (in *AutoscaleDownInitParameters) DeepCopy() *AutoscaleDownInitParameters {
	if in == nil {
		return nil
	}
	out := new(AutoscaleDownInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscaleDownObservation) DeepCopyInto(out *AutoscaleDownObservation) {
	*out = *in
	if in.MaxScaleDownPercentage != nil {
		in, out := &in.MaxScaleDownPercentage, &out.MaxScaleDownPercentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscaleDownObservation.
func (in *AutoscaleDownObservation) DeepCopy() *AutoscaleDownObservation {
	if in == nil {
		return nil
	}
	out := new(AutoscaleDownObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscaleDownParameters) DeepCopyInto(out *AutoscaleDownParameters) {
	*out = *in
	if in.MaxScaleDownPercentage != nil {
		in, out := &in.MaxScaleDownPercentage, &out.MaxScaleDownPercentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscaleDownParameters.
func (in *AutoscaleDownParameters) DeepCopy() *AutoscaleDownParameters {
	if in == nil {
		return nil
	}
	out := new(AutoscaleDownParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscaleHeadroomInitParameters) DeepCopyInto(out *AutoscaleHeadroomInitParameters) {
	*out = *in
	if in.Automatic != nil {
		in, out := &in.Automatic, &out.Automatic
		*out = make([]AutomaticInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscaleHeadroomInitParameters.
func (in *AutoscaleHeadroomInitParameters) DeepCopy() *AutoscaleHeadroomInitParameters {
	if in == nil {
		return nil
	}
	out := new(AutoscaleHeadroomInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscaleHeadroomObservation) DeepCopyInto(out *AutoscaleHeadroomObservation) {
	*out = *in
	if in.Automatic != nil {
		in, out := &in.Automatic, &out.Automatic
		*out = make([]AutomaticObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscaleHeadroomObservation.
func (in *AutoscaleHeadroomObservation) DeepCopy() *AutoscaleHeadroomObservation {
	if in == nil {
		return nil
	}
	out := new(AutoscaleHeadroomObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscaleHeadroomParameters) DeepCopyInto(out *AutoscaleHeadroomParameters) {
	*out = *in
	if in.Automatic != nil {
		in, out := &in.Automatic, &out.Automatic
		*out = make([]AutomaticParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscaleHeadroomParameters.
func (in *AutoscaleHeadroomParameters) DeepCopy() *AutoscaleHeadroomParameters {
	if in == nil {
		return nil
	}
	out := new(AutoscaleHeadroomParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscalerInitParameters) DeepCopyInto(out *AutoscalerInitParameters) {
	*out = *in
	if in.AutoscaleDown != nil {
		in, out := &in.AutoscaleDown, &out.AutoscaleDown
		*out = make([]AutoscaleDownInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoscaleHeadroom != nil {
		in, out := &in.AutoscaleHeadroom, &out.AutoscaleHeadroom
		*out = make([]AutoscaleHeadroomInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoscaleIsEnabled != nil {
		in, out := &in.AutoscaleIsEnabled, &out.AutoscaleIsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ResourceLimits != nil {
		in, out := &in.ResourceLimits, &out.ResourceLimits
		*out = make([]ResourceLimitsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscalerInitParameters.
func (in *AutoscalerInitParameters) DeepCopy() *AutoscalerInitParameters {
	if in == nil {
		return nil
	}
	out := new(AutoscalerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscalerObservation) DeepCopyInto(out *AutoscalerObservation) {
	*out = *in
	if in.AutoscaleDown != nil {
		in, out := &in.AutoscaleDown, &out.AutoscaleDown
		*out = make([]AutoscaleDownObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoscaleHeadroom != nil {
		in, out := &in.AutoscaleHeadroom, &out.AutoscaleHeadroom
		*out = make([]AutoscaleHeadroomObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoscaleIsEnabled != nil {
		in, out := &in.AutoscaleIsEnabled, &out.AutoscaleIsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ResourceLimits != nil {
		in, out := &in.ResourceLimits, &out.ResourceLimits
		*out = make([]ResourceLimitsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscalerObservation.
func (in *AutoscalerObservation) DeepCopy() *AutoscalerObservation {
	if in == nil {
		return nil
	}
	out := new(AutoscalerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscalerParameters) DeepCopyInto(out *AutoscalerParameters) {
	*out = *in
	if in.AutoscaleDown != nil {
		in, out := &in.AutoscaleDown, &out.AutoscaleDown
		*out = make([]AutoscaleDownParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoscaleHeadroom != nil {
		in, out := &in.AutoscaleHeadroom, &out.AutoscaleHeadroom
		*out = make([]AutoscaleHeadroomParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoscaleIsEnabled != nil {
		in, out := &in.AutoscaleIsEnabled, &out.AutoscaleIsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ResourceLimits != nil {
		in, out := &in.ResourceLimits, &out.ResourceLimits
		*out = make([]ResourceLimitsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscalerParameters.
func (in *AutoscalerParameters) DeepCopy() *AutoscalerParameters {
	if in == nil {
		return nil
	}
	out := new(AutoscalerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureBlobInitParameters) DeepCopyInto(out *AzureBlobInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureBlobInitParameters.
func (in *AzureBlobInitParameters) DeepCopy() *AzureBlobInitParameters {
	if in == nil {
		return nil
	}
	out := new(AzureBlobInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureBlobObservation) DeepCopyInto(out *AzureBlobObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureBlobObservation.
func (in *AzureBlobObservation) DeepCopy() *AzureBlobObservation {
	if in == nil {
		return nil
	}
	out := new(AzureBlobObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureBlobParameters) DeepCopyInto(out *AzureBlobParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureBlobParameters.
func (in *AzureBlobParameters) DeepCopy() *AzureBlobParameters {
	if in == nil {
		return nil
	}
	out := new(AzureBlobParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExportInitParameters) DeepCopyInto(out *ExportInitParameters) {
	*out = *in
	if in.AzureBlob != nil {
		in, out := &in.AzureBlob, &out.AzureBlob
		*out = make([]AzureBlobInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExportInitParameters.
func (in *ExportInitParameters) DeepCopy() *ExportInitParameters {
	if in == nil {
		return nil
	}
	out := new(ExportInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExportObservation) DeepCopyInto(out *ExportObservation) {
	*out = *in
	if in.AzureBlob != nil {
		in, out := &in.AzureBlob, &out.AzureBlob
		*out = make([]AzureBlobObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExportObservation.
func (in *ExportObservation) DeepCopy() *ExportObservation {
	if in == nil {
		return nil
	}
	out := new(ExportObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExportParameters) DeepCopyInto(out *ExportParameters) {
	*out = *in
	if in.AzureBlob != nil {
		in, out := &in.AzureBlob, &out.AzureBlob
		*out = make([]AzureBlobParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExportParameters.
func (in *ExportParameters) DeepCopy() *ExportParameters {
	if in == nil {
		return nil
	}
	out := new(ExportParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FiltersInitParameters) DeepCopyInto(out *FiltersInitParameters) {
	*out = *in
	if in.AcceleratedNetworking != nil {
		in, out := &in.AcceleratedNetworking, &out.AcceleratedNetworking
		*out = new(string)
		**out = **in
	}
	if in.Architectures != nil {
		in, out := &in.Architectures, &out.Architectures
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DiskPerformance != nil {
		in, out := &in.DiskPerformance, &out.DiskPerformance
		*out = new(string)
		**out = **in
	}
	if in.ExcludeSeries != nil {
		in, out := &in.ExcludeSeries, &out.ExcludeSeries
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.GpuTypes != nil {
		in, out := &in.GpuTypes, &out.GpuTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxGpu != nil {
		in, out := &in.MaxGpu, &out.MaxGpu
		*out = new(float64)
		**out = **in
	}
	if in.MaxMemoryGib != nil {
		in, out := &in.MaxMemoryGib, &out.MaxMemoryGib
		*out = new(float64)
		**out = **in
	}
	if in.MaxVcpu != nil {
		in, out := &in.MaxVcpu, &out.MaxVcpu
		*out = new(float64)
		**out = **in
	}
	if in.MinDisk != nil {
		in, out := &in.MinDisk, &out.MinDisk
		*out = new(float64)
		**out = **in
	}
	if in.MinGpu != nil {
		in, out := &in.MinGpu, &out.MinGpu
		*out = new(float64)
		**out = **in
	}
	if in.MinMemoryGib != nil {
		in, out := &in.MinMemoryGib, &out.MinMemoryGib
		*out = new(float64)
		**out = **in
	}
	if in.MinNics != nil {
		in, out := &in.MinNics, &out.MinNics
		*out = new(float64)
		**out = **in
	}
	if in.MinVcpu != nil {
		in, out := &in.MinVcpu, &out.MinVcpu
		*out = new(float64)
		**out = **in
	}
	if in.Series != nil {
		in, out := &in.Series, &out.Series
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.VMTypes != nil {
		in, out := &in.VMTypes, &out.VMTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FiltersInitParameters.
func (in *FiltersInitParameters) DeepCopy() *FiltersInitParameters {
	if in == nil {
		return nil
	}
	out := new(FiltersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FiltersObservation) DeepCopyInto(out *FiltersObservation) {
	*out = *in
	if in.AcceleratedNetworking != nil {
		in, out := &in.AcceleratedNetworking, &out.AcceleratedNetworking
		*out = new(string)
		**out = **in
	}
	if in.Architectures != nil {
		in, out := &in.Architectures, &out.Architectures
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DiskPerformance != nil {
		in, out := &in.DiskPerformance, &out.DiskPerformance
		*out = new(string)
		**out = **in
	}
	if in.ExcludeSeries != nil {
		in, out := &in.ExcludeSeries, &out.ExcludeSeries
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.GpuTypes != nil {
		in, out := &in.GpuTypes, &out.GpuTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxGpu != nil {
		in, out := &in.MaxGpu, &out.MaxGpu
		*out = new(float64)
		**out = **in
	}
	if in.MaxMemoryGib != nil {
		in, out := &in.MaxMemoryGib, &out.MaxMemoryGib
		*out = new(float64)
		**out = **in
	}
	if in.MaxVcpu != nil {
		in, out := &in.MaxVcpu, &out.MaxVcpu
		*out = new(float64)
		**out = **in
	}
	if in.MinDisk != nil {
		in, out := &in.MinDisk, &out.MinDisk
		*out = new(float64)
		**out = **in
	}
	if in.MinGpu != nil {
		in, out := &in.MinGpu, &out.MinGpu
		*out = new(float64)
		**out = **in
	}
	if in.MinMemoryGib != nil {
		in, out := &in.MinMemoryGib, &out.MinMemoryGib
		*out = new(float64)
		**out = **in
	}
	if in.MinNics != nil {
		in, out := &in.MinNics, &out.MinNics
		*out = new(float64)
		**out = **in
	}
	if in.MinVcpu != nil {
		in, out := &in.MinVcpu, &out.MinVcpu
		*out = new(float64)
		**out = **in
	}
	if in.Series != nil {
		in, out := &in.Series, &out.Series
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.VMTypes != nil {
		in, out := &in.VMTypes, &out.VMTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FiltersObservation.
func (in *FiltersObservation) DeepCopy() *FiltersObservation {
	if in == nil {
		return nil
	}
	out := new(FiltersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FiltersParameters) DeepCopyInto(out *FiltersParameters) {
	*out = *in
	if in.AcceleratedNetworking != nil {
		in, out := &in.AcceleratedNetworking, &out.AcceleratedNetworking
		*out = new(string)
		**out = **in
	}
	if in.Architectures != nil {
		in, out := &in.Architectures, &out.Architectures
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DiskPerformance != nil {
		in, out := &in.DiskPerformance, &out.DiskPerformance
		*out = new(string)
		**out = **in
	}
	if in.ExcludeSeries != nil {
		in, out := &in.ExcludeSeries, &out.ExcludeSeries
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.GpuTypes != nil {
		in, out := &in.GpuTypes, &out.GpuTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxGpu != nil {
		in, out := &in.MaxGpu, &out.MaxGpu
		*out = new(float64)
		**out = **in
	}
	if in.MaxMemoryGib != nil {
		in, out := &in.MaxMemoryGib, &out.MaxMemoryGib
		*out = new(float64)
		**out = **in
	}
	if in.MaxVcpu != nil {
		in, out := &in.MaxVcpu, &out.MaxVcpu
		*out = new(float64)
		**out = **in
	}
	if in.MinDisk != nil {
		in, out := &in.MinDisk, &out.MinDisk
		*out = new(float64)
		**out = **in
	}
	if in.MinGpu != nil {
		in, out := &in.MinGpu, &out.MinGpu
		*out = new(float64)
		**out = **in
	}
	if in.MinMemoryGib != nil {
		in, out := &in.MinMemoryGib, &out.MinMemoryGib
		*out = new(float64)
		**out = **in
	}
	if in.MinNics != nil {
		in, out := &in.MinNics, &out.MinNics
		*out = new(float64)
		**out = **in
	}
	if in.MinVcpu != nil {
		in, out := &in.MinVcpu, &out.MinVcpu
		*out = new(float64)
		**out = **in
	}
	if in.Series != nil {
		in, out := &in.Series, &out.Series
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.VMTypes != nil {
		in, out := &in.VMTypes, &out.VMTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FiltersParameters.
func (in *FiltersParameters) DeepCopy() *FiltersParameters {
	if in == nil {
		return nil
	}
	out := new(FiltersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeadroomsInitParameters) DeepCopyInto(out *HeadroomsInitParameters) {
	*out = *in
	if in.CPUPerUnit != nil {
		in, out := &in.CPUPerUnit, &out.CPUPerUnit
		*out = new(float64)
		**out = **in
	}
	if in.GpuPerUnit != nil {
		in, out := &in.GpuPerUnit, &out.GpuPerUnit
		*out = new(float64)
		**out = **in
	}
	if in.MemoryPerUnit != nil {
		in, out := &in.MemoryPerUnit, &out.MemoryPerUnit
		*out = new(float64)
		**out = **in
	}
	if in.NumOfUnits != nil {
		in, out := &in.NumOfUnits, &out.NumOfUnits
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeadroomsInitParameters.
func (in *HeadroomsInitParameters) DeepCopy() *HeadroomsInitParameters {
	if in == nil {
		return nil
	}
	out := new(HeadroomsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeadroomsObservation) DeepCopyInto(out *HeadroomsObservation) {
	*out = *in
	if in.CPUPerUnit != nil {
		in, out := &in.CPUPerUnit, &out.CPUPerUnit
		*out = new(float64)
		**out = **in
	}
	if in.GpuPerUnit != nil {
		in, out := &in.GpuPerUnit, &out.GpuPerUnit
		*out = new(float64)
		**out = **in
	}
	if in.MemoryPerUnit != nil {
		in, out := &in.MemoryPerUnit, &out.MemoryPerUnit
		*out = new(float64)
		**out = **in
	}
	if in.NumOfUnits != nil {
		in, out := &in.NumOfUnits, &out.NumOfUnits
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeadroomsObservation.
func (in *HeadroomsObservation) DeepCopy() *HeadroomsObservation {
	if in == nil {
		return nil
	}
	out := new(HeadroomsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeadroomsParameters) DeepCopyInto(out *HeadroomsParameters) {
	*out = *in
	if in.CPUPerUnit != nil {
		in, out := &in.CPUPerUnit, &out.CPUPerUnit
		*out = new(float64)
		**out = **in
	}
	if in.GpuPerUnit != nil {
		in, out := &in.GpuPerUnit, &out.GpuPerUnit
		*out = new(float64)
		**out = **in
	}
	if in.MemoryPerUnit != nil {
		in, out := &in.MemoryPerUnit, &out.MemoryPerUnit
		*out = new(float64)
		**out = **in
	}
	if in.NumOfUnits != nil {
		in, out := &in.NumOfUnits, &out.NumOfUnits
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeadroomsParameters.
func (in *HeadroomsParameters) DeepCopy() *HeadroomsParameters {
	if in == nil {
		return nil
	}
	out := new(HeadroomsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthInitParameters) DeepCopyInto(out *HealthInitParameters) {
	*out = *in
	if in.GracePeriod != nil {
		in, out := &in.GracePeriod, &out.GracePeriod
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthInitParameters.
func (in *HealthInitParameters) DeepCopy() *HealthInitParameters {
	if in == nil {
		return nil
	}
	out := new(HealthInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthObservation) DeepCopyInto(out *HealthObservation) {
	*out = *in
	if in.GracePeriod != nil {
		in, out := &in.GracePeriod, &out.GracePeriod
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthObservation.
func (in *HealthObservation) DeepCopy() *HealthObservation {
	if in == nil {
		return nil
	}
	out := new(HealthObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthParameters) DeepCopyInto(out *HealthParameters) {
	*out = *in
	if in.GracePeriod != nil {
		in, out := &in.GracePeriod, &out.GracePeriod
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthParameters.
func (in *HealthParameters) DeepCopy() *HealthParameters {
	if in == nil {
		return nil
	}
	out := new(HealthParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxOsConfigInitParameters) DeepCopyInto(out *LinuxOsConfigInitParameters) {
	*out = *in
	if in.Sysctls != nil {
		in, out := &in.Sysctls, &out.Sysctls
		*out = make([]SysctlsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxOsConfigInitParameters.
func (in *LinuxOsConfigInitParameters) DeepCopy() *LinuxOsConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxOsConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxOsConfigObservation) DeepCopyInto(out *LinuxOsConfigObservation) {
	*out = *in
	if in.Sysctls != nil {
		in, out := &in.Sysctls, &out.Sysctls
		*out = make([]SysctlsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxOsConfigObservation.
func (in *LinuxOsConfigObservation) DeepCopy() *LinuxOsConfigObservation {
	if in == nil {
		return nil
	}
	out := new(LinuxOsConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinuxOsConfigParameters) DeepCopyInto(out *LinuxOsConfigParameters) {
	*out = *in
	if in.Sysctls != nil {
		in, out := &in.Sysctls, &out.Sysctls
		*out = make([]SysctlsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinuxOsConfigParameters.
func (in *LinuxOsConfigParameters) DeepCopy() *LinuxOsConfigParameters {
	if in == nil {
		return nil
	}
	out := new(LinuxOsConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoggingInitParameters) DeepCopyInto(out *LoggingInitParameters) {
	*out = *in
	if in.Export != nil {
		in, out := &in.Export, &out.Export
		*out = make([]ExportInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoggingInitParameters.
func (in *LoggingInitParameters) DeepCopy() *LoggingInitParameters {
	if in == nil {
		return nil
	}
	out := new(LoggingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoggingObservation) DeepCopyInto(out *LoggingObservation) {
	*out = *in
	if in.Export != nil {
		in, out := &in.Export, &out.Export
		*out = make([]ExportObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoggingObservation.
func (in *LoggingObservation) DeepCopy() *LoggingObservation {
	if in == nil {
		return nil
	}
	out := new(LoggingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoggingParameters) DeepCopyInto(out *LoggingParameters) {
	*out = *in
	if in.Export != nil {
		in, out := &in.Export, &out.Export
		*out = make([]ExportParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoggingParameters.
func (in *LoggingParameters) DeepCopy() *LoggingParameters {
	if in == nil {
		return nil
	}
	out := new(LoggingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OceanAks) DeepCopyInto(out *OceanAks) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OceanAks.
func (in *OceanAks) DeepCopy() *OceanAks {
	if in == nil {
		return nil
	}
	out := new(OceanAks)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OceanAks) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OceanAksInitParameters) DeepCopyInto(out *OceanAksInitParameters) {
	*out = *in
	if in.AksClusterName != nil {
		in, out := &in.AksClusterName, &out.AksClusterName
		*out = new(string)
		**out = **in
	}
	if in.AksInfrastructureResourceGroupName != nil {
		in, out := &in.AksInfrastructureResourceGroupName, &out.AksInfrastructureResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.AksRegion != nil {
		in, out := &in.AksRegion, &out.AksRegion
		*out = new(string)
		**out = **in
	}
	if in.AksResourceGroupName != nil {
		in, out := &in.AksResourceGroupName, &out.AksResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.Autoscaler != nil {
		in, out := &in.Autoscaler, &out.Autoscaler
		*out = make([]AutoscalerInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AvailabilityZones != nil {
		in, out := &in.AvailabilityZones, &out.AvailabilityZones
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ControllerClusterID != nil {
		in, out := &in.ControllerClusterID, &out.ControllerClusterID
		*out = new(string)
		**out = **in
	}
	if in.EnableNodePublicIP != nil {
		in, out := &in.EnableNodePublicIP, &out.EnableNodePublicIP
		*out = new(bool)
		**out = **in
	}
	if in.FallbackToOndemand != nil {
		in, out := &in.FallbackToOndemand, &out.FallbackToOndemand
		*out = new(bool)
		**out = **in
	}
	if in.Filters != nil {
		in, out := &in.Filters, &out.Filters
		*out = make([]FiltersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Headrooms != nil {
		in, out := &in.Headrooms, &out.Headrooms
		*out = make([]HeadroomsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Health != nil {
		in, out := &in.Health, &out.Health
		*out = make([]HealthInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KubernetesVersion != nil {
		in, out := &in.KubernetesVersion, &out.KubernetesVersion
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.LinuxOsConfig != nil {
		in, out := &in.LinuxOsConfig, &out.LinuxOsConfig
		*out = make([]LinuxOsConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Logging != nil {
		in, out := &in.Logging, &out.Logging
		*out = make([]LoggingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxCount != nil {
		in, out := &in.MaxCount, &out.MaxCount
		*out = new(float64)
		**out = **in
	}
	if in.MaxPodsPerNode != nil {
		in, out := &in.MaxPodsPerNode, &out.MaxPodsPerNode
		*out = new(float64)
		**out = **in
	}
	if in.MinCount != nil {
		in, out := &in.MinCount, &out.MinCount
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OsDiskSizeGb != nil {
		in, out := &in.OsDiskSizeGb, &out.OsDiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.OsDiskType != nil {
		in, out := &in.OsDiskType, &out.OsDiskType
		*out = new(string)
		**out = **in
	}
	if in.OsSku != nil {
		in, out := &in.OsSku, &out.OsSku
		*out = new(string)
		**out = **in
	}
	if in.OsType != nil {
		in, out := &in.OsType, &out.OsType
		*out = new(string)
		**out = **in
	}
	if in.PodSubnetIds != nil {
		in, out := &in.PodSubnetIds, &out.PodSubnetIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Scheduling != nil {
		in, out := &in.Scheduling, &out.Scheduling
		*out = make([]SchedulingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpotPercentage != nil {
		in, out := &in.SpotPercentage, &out.SpotPercentage
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Taints != nil {
		in, out := &in.Taints, &out.Taints
		*out = make([]TaintsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdatePolicy != nil {
		in, out := &in.UpdatePolicy, &out.UpdatePolicy
		*out = make([]UpdatePolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VnetSubnetIds != nil {
		in, out := &in.VnetSubnetIds, &out.VnetSubnetIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.VngTemplateScheduling != nil {
		in, out := &in.VngTemplateScheduling, &out.VngTemplateScheduling
		*out = make([]VngTemplateSchedulingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OceanAksInitParameters.
func (in *OceanAksInitParameters) DeepCopy() *OceanAksInitParameters {
	if in == nil {
		return nil
	}
	out := new(OceanAksInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OceanAksList) DeepCopyInto(out *OceanAksList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]OceanAks, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OceanAksList.
func (in *OceanAksList) DeepCopy() *OceanAksList {
	if in == nil {
		return nil
	}
	out := new(OceanAksList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OceanAksList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OceanAksObservation) DeepCopyInto(out *OceanAksObservation) {
	*out = *in
	if in.AksClusterName != nil {
		in, out := &in.AksClusterName, &out.AksClusterName
		*out = new(string)
		**out = **in
	}
	if in.AksInfrastructureResourceGroupName != nil {
		in, out := &in.AksInfrastructureResourceGroupName, &out.AksInfrastructureResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.AksRegion != nil {
		in, out := &in.AksRegion, &out.AksRegion
		*out = new(string)
		**out = **in
	}
	if in.AksResourceGroupName != nil {
		in, out := &in.AksResourceGroupName, &out.AksResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.Autoscaler != nil {
		in, out := &in.Autoscaler, &out.Autoscaler
		*out = make([]AutoscalerObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AvailabilityZones != nil {
		in, out := &in.AvailabilityZones, &out.AvailabilityZones
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ControllerClusterID != nil {
		in, out := &in.ControllerClusterID, &out.ControllerClusterID
		*out = new(string)
		**out = **in
	}
	if in.EnableNodePublicIP != nil {
		in, out := &in.EnableNodePublicIP, &out.EnableNodePublicIP
		*out = new(bool)
		**out = **in
	}
	if in.FallbackToOndemand != nil {
		in, out := &in.FallbackToOndemand, &out.FallbackToOndemand
		*out = new(bool)
		**out = **in
	}
	if in.Filters != nil {
		in, out := &in.Filters, &out.Filters
		*out = make([]FiltersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Headrooms != nil {
		in, out := &in.Headrooms, &out.Headrooms
		*out = make([]HeadroomsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Health != nil {
		in, out := &in.Health, &out.Health
		*out = make([]HealthObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.KubernetesVersion != nil {
		in, out := &in.KubernetesVersion, &out.KubernetesVersion
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.LinuxOsConfig != nil {
		in, out := &in.LinuxOsConfig, &out.LinuxOsConfig
		*out = make([]LinuxOsConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Logging != nil {
		in, out := &in.Logging, &out.Logging
		*out = make([]LoggingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxCount != nil {
		in, out := &in.MaxCount, &out.MaxCount
		*out = new(float64)
		**out = **in
	}
	if in.MaxPodsPerNode != nil {
		in, out := &in.MaxPodsPerNode, &out.MaxPodsPerNode
		*out = new(float64)
		**out = **in
	}
	if in.MinCount != nil {
		in, out := &in.MinCount, &out.MinCount
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OsDiskSizeGb != nil {
		in, out := &in.OsDiskSizeGb, &out.OsDiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.OsDiskType != nil {
		in, out := &in.OsDiskType, &out.OsDiskType
		*out = new(string)
		**out = **in
	}
	if in.OsSku != nil {
		in, out := &in.OsSku, &out.OsSku
		*out = new(string)
		**out = **in
	}
	if in.OsType != nil {
		in, out := &in.OsType, &out.OsType
		*out = new(string)
		**out = **in
	}
	if in.PodSubnetIds != nil {
		in, out := &in.PodSubnetIds, &out.PodSubnetIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Scheduling != nil {
		in, out := &in.Scheduling, &out.Scheduling
		*out = make([]SchedulingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpotPercentage != nil {
		in, out := &in.SpotPercentage, &out.SpotPercentage
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Taints != nil {
		in, out := &in.Taints, &out.Taints
		*out = make([]TaintsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdatePolicy != nil {
		in, out := &in.UpdatePolicy, &out.UpdatePolicy
		*out = make([]UpdatePolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VnetSubnetIds != nil {
		in, out := &in.VnetSubnetIds, &out.VnetSubnetIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.VngTemplateScheduling != nil {
		in, out := &in.VngTemplateScheduling, &out.VngTemplateScheduling
		*out = make([]VngTemplateSchedulingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OceanAksObservation.
func (in *OceanAksObservation) DeepCopy() *OceanAksObservation {
	if in == nil {
		return nil
	}
	out := new(OceanAksObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OceanAksParameters) DeepCopyInto(out *OceanAksParameters) {
	*out = *in
	if in.AksClusterName != nil {
		in, out := &in.AksClusterName, &out.AksClusterName
		*out = new(string)
		**out = **in
	}
	if in.AksInfrastructureResourceGroupName != nil {
		in, out := &in.AksInfrastructureResourceGroupName, &out.AksInfrastructureResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.AksRegion != nil {
		in, out := &in.AksRegion, &out.AksRegion
		*out = new(string)
		**out = **in
	}
	if in.AksResourceGroupName != nil {
		in, out := &in.AksResourceGroupName, &out.AksResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.Autoscaler != nil {
		in, out := &in.Autoscaler, &out.Autoscaler
		*out = make([]AutoscalerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AvailabilityZones != nil {
		in, out := &in.AvailabilityZones, &out.AvailabilityZones
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ControllerClusterID != nil {
		in, out := &in.ControllerClusterID, &out.ControllerClusterID
		*out = new(string)
		**out = **in
	}
	if in.EnableNodePublicIP != nil {
		in, out := &in.EnableNodePublicIP, &out.EnableNodePublicIP
		*out = new(bool)
		**out = **in
	}
	if in.FallbackToOndemand != nil {
		in, out := &in.FallbackToOndemand, &out.FallbackToOndemand
		*out = new(bool)
		**out = **in
	}
	if in.Filters != nil {
		in, out := &in.Filters, &out.Filters
		*out = make([]FiltersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Headrooms != nil {
		in, out := &in.Headrooms, &out.Headrooms
		*out = make([]HeadroomsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Health != nil {
		in, out := &in.Health, &out.Health
		*out = make([]HealthParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KubernetesVersion != nil {
		in, out := &in.KubernetesVersion, &out.KubernetesVersion
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.LinuxOsConfig != nil {
		in, out := &in.LinuxOsConfig, &out.LinuxOsConfig
		*out = make([]LinuxOsConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Logging != nil {
		in, out := &in.Logging, &out.Logging
		*out = make([]LoggingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxCount != nil {
		in, out := &in.MaxCount, &out.MaxCount
		*out = new(float64)
		**out = **in
	}
	if in.MaxPodsPerNode != nil {
		in, out := &in.MaxPodsPerNode, &out.MaxPodsPerNode
		*out = new(float64)
		**out = **in
	}
	if in.MinCount != nil {
		in, out := &in.MinCount, &out.MinCount
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OsDiskSizeGb != nil {
		in, out := &in.OsDiskSizeGb, &out.OsDiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.OsDiskType != nil {
		in, out := &in.OsDiskType, &out.OsDiskType
		*out = new(string)
		**out = **in
	}
	if in.OsSku != nil {
		in, out := &in.OsSku, &out.OsSku
		*out = new(string)
		**out = **in
	}
	if in.OsType != nil {
		in, out := &in.OsType, &out.OsType
		*out = new(string)
		**out = **in
	}
	if in.PodSubnetIds != nil {
		in, out := &in.PodSubnetIds, &out.PodSubnetIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Scheduling != nil {
		in, out := &in.Scheduling, &out.Scheduling
		*out = make([]SchedulingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpotPercentage != nil {
		in, out := &in.SpotPercentage, &out.SpotPercentage
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Taints != nil {
		in, out := &in.Taints, &out.Taints
		*out = make([]TaintsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdatePolicy != nil {
		in, out := &in.UpdatePolicy, &out.UpdatePolicy
		*out = make([]UpdatePolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VnetSubnetIds != nil {
		in, out := &in.VnetSubnetIds, &out.VnetSubnetIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.VngTemplateScheduling != nil {
		in, out := &in.VngTemplateScheduling, &out.VngTemplateScheduling
		*out = make([]VngTemplateSchedulingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OceanAksParameters.
func (in *OceanAksParameters) DeepCopy() *OceanAksParameters {
	if in == nil {
		return nil
	}
	out := new(OceanAksParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OceanAksSpec) DeepCopyInto(out *OceanAksSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OceanAksSpec.
func (in *OceanAksSpec) DeepCopy() *OceanAksSpec {
	if in == nil {
		return nil
	}
	out := new(OceanAksSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OceanAksStatus) DeepCopyInto(out *OceanAksStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OceanAksStatus.
func (in *OceanAksStatus) DeepCopy() *OceanAksStatus {
	if in == nil {
		return nil
	}
	out := new(OceanAksStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParametersClusterRollInitParameters) DeepCopyInto(out *ParametersClusterRollInitParameters) {
	*out = *in
	if in.BatchMinHealthyPercentage != nil {
		in, out := &in.BatchMinHealthyPercentage, &out.BatchMinHealthyPercentage
		*out = new(float64)
		**out = **in
	}
	if in.BatchSizePercentage != nil {
		in, out := &in.BatchSizePercentage, &out.BatchSizePercentage
		*out = new(float64)
		**out = **in
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.RespectPdb != nil {
		in, out := &in.RespectPdb, &out.RespectPdb
		*out = new(bool)
		**out = **in
	}
	if in.RespectRestrictScaleDown != nil {
		in, out := &in.RespectRestrictScaleDown, &out.RespectRestrictScaleDown
		*out = new(bool)
		**out = **in
	}
	if in.VngIds != nil {
		in, out := &in.VngIds, &out.VngIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParametersClusterRollInitParameters.
func (in *ParametersClusterRollInitParameters) DeepCopy() *ParametersClusterRollInitParameters {
	if in == nil {
		return nil
	}
	out := new(ParametersClusterRollInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParametersClusterRollObservation) DeepCopyInto(out *ParametersClusterRollObservation) {
	*out = *in
	if in.BatchMinHealthyPercentage != nil {
		in, out := &in.BatchMinHealthyPercentage, &out.BatchMinHealthyPercentage
		*out = new(float64)
		**out = **in
	}
	if in.BatchSizePercentage != nil {
		in, out := &in.BatchSizePercentage, &out.BatchSizePercentage
		*out = new(float64)
		**out = **in
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.RespectPdb != nil {
		in, out := &in.RespectPdb, &out.RespectPdb
		*out = new(bool)
		**out = **in
	}
	if in.RespectRestrictScaleDown != nil {
		in, out := &in.RespectRestrictScaleDown, &out.RespectRestrictScaleDown
		*out = new(bool)
		**out = **in
	}
	if in.VngIds != nil {
		in, out := &in.VngIds, &out.VngIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParametersClusterRollObservation.
func (in *ParametersClusterRollObservation) DeepCopy() *ParametersClusterRollObservation {
	if in == nil {
		return nil
	}
	out := new(ParametersClusterRollObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParametersClusterRollParameters) DeepCopyInto(out *ParametersClusterRollParameters) {
	*out = *in
	if in.BatchMinHealthyPercentage != nil {
		in, out := &in.BatchMinHealthyPercentage, &out.BatchMinHealthyPercentage
		*out = new(float64)
		**out = **in
	}
	if in.BatchSizePercentage != nil {
		in, out := &in.BatchSizePercentage, &out.BatchSizePercentage
		*out = new(float64)
		**out = **in
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.RespectPdb != nil {
		in, out := &in.RespectPdb, &out.RespectPdb
		*out = new(bool)
		**out = **in
	}
	if in.RespectRestrictScaleDown != nil {
		in, out := &in.RespectRestrictScaleDown, &out.RespectRestrictScaleDown
		*out = new(bool)
		**out = **in
	}
	if in.VngIds != nil {
		in, out := &in.VngIds, &out.VngIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParametersClusterRollParameters.
func (in *ParametersClusterRollParameters) DeepCopy() *ParametersClusterRollParameters {
	if in == nil {
		return nil
	}
	out := new(ParametersClusterRollParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParametersInitParameters) DeepCopyInto(out *ParametersInitParameters) {
	*out = *in
	if in.ParametersClusterRoll != nil {
		in, out := &in.ParametersClusterRoll, &out.ParametersClusterRoll
		*out = make([]ParametersClusterRollInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ParametersUpgradeConfig != nil {
		in, out := &in.ParametersUpgradeConfig, &out.ParametersUpgradeConfig
		*out = make([]ParametersUpgradeConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParametersInitParameters.
func (in *ParametersInitParameters) DeepCopy() *ParametersInitParameters {
	if in == nil {
		return nil
	}
	out := new(ParametersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParametersObservation) DeepCopyInto(out *ParametersObservation) {
	*out = *in
	if in.ParametersClusterRoll != nil {
		in, out := &in.ParametersClusterRoll, &out.ParametersClusterRoll
		*out = make([]ParametersClusterRollObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ParametersUpgradeConfig != nil {
		in, out := &in.ParametersUpgradeConfig, &out.ParametersUpgradeConfig
		*out = make([]ParametersUpgradeConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParametersObservation.
func (in *ParametersObservation) DeepCopy() *ParametersObservation {
	if in == nil {
		return nil
	}
	out := new(ParametersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParametersParameters) DeepCopyInto(out *ParametersParameters) {
	*out = *in
	if in.ParametersClusterRoll != nil {
		in, out := &in.ParametersClusterRoll, &out.ParametersClusterRoll
		*out = make([]ParametersClusterRollParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ParametersUpgradeConfig != nil {
		in, out := &in.ParametersUpgradeConfig, &out.ParametersUpgradeConfig
		*out = make([]ParametersUpgradeConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParametersParameters.
func (in *ParametersParameters) DeepCopy() *ParametersParameters {
	if in == nil {
		return nil
	}
	out := new(ParametersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParametersUpgradeConfigInitParameters) DeepCopyInto(out *ParametersUpgradeConfigInitParameters) {
	*out = *in
	if in.ApplyRoll != nil {
		in, out := &in.ApplyRoll, &out.ApplyRoll
		*out = new(bool)
		**out = **in
	}
	if in.RollParameters != nil {
		in, out := &in.RollParameters, &out.RollParameters
		*out = make([]RollParametersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScopeVersion != nil {
		in, out := &in.ScopeVersion, &out.ScopeVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParametersUpgradeConfigInitParameters.
func (in *ParametersUpgradeConfigInitParameters) DeepCopy() *ParametersUpgradeConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(ParametersUpgradeConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParametersUpgradeConfigObservation) DeepCopyInto(out *ParametersUpgradeConfigObservation) {
	*out = *in
	if in.ApplyRoll != nil {
		in, out := &in.ApplyRoll, &out.ApplyRoll
		*out = new(bool)
		**out = **in
	}
	if in.RollParameters != nil {
		in, out := &in.RollParameters, &out.RollParameters
		*out = make([]RollParametersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScopeVersion != nil {
		in, out := &in.ScopeVersion, &out.ScopeVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParametersUpgradeConfigObservation.
func (in *ParametersUpgradeConfigObservation) DeepCopy() *ParametersUpgradeConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ParametersUpgradeConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParametersUpgradeConfigParameters) DeepCopyInto(out *ParametersUpgradeConfigParameters) {
	*out = *in
	if in.ApplyRoll != nil {
		in, out := &in.ApplyRoll, &out.ApplyRoll
		*out = new(bool)
		**out = **in
	}
	if in.RollParameters != nil {
		in, out := &in.RollParameters, &out.RollParameters
		*out = make([]RollParametersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScopeVersion != nil {
		in, out := &in.ScopeVersion, &out.ScopeVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParametersUpgradeConfigParameters.
func (in *ParametersUpgradeConfigParameters) DeepCopy() *ParametersUpgradeConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ParametersUpgradeConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceLimitsInitParameters) DeepCopyInto(out *ResourceLimitsInitParameters) {
	*out = *in
	if in.MaxMemoryGib != nil {
		in, out := &in.MaxMemoryGib, &out.MaxMemoryGib
		*out = new(float64)
		**out = **in
	}
	if in.MaxVcpu != nil {
		in, out := &in.MaxVcpu, &out.MaxVcpu
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceLimitsInitParameters.
func (in *ResourceLimitsInitParameters) DeepCopy() *ResourceLimitsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ResourceLimitsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceLimitsObservation) DeepCopyInto(out *ResourceLimitsObservation) {
	*out = *in
	if in.MaxMemoryGib != nil {
		in, out := &in.MaxMemoryGib, &out.MaxMemoryGib
		*out = new(float64)
		**out = **in
	}
	if in.MaxVcpu != nil {
		in, out := &in.MaxVcpu, &out.MaxVcpu
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceLimitsObservation.
func (in *ResourceLimitsObservation) DeepCopy() *ResourceLimitsObservation {
	if in == nil {
		return nil
	}
	out := new(ResourceLimitsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceLimitsParameters) DeepCopyInto(out *ResourceLimitsParameters) {
	*out = *in
	if in.MaxMemoryGib != nil {
		in, out := &in.MaxMemoryGib, &out.MaxMemoryGib
		*out = new(float64)
		**out = **in
	}
	if in.MaxVcpu != nil {
		in, out := &in.MaxVcpu, &out.MaxVcpu
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceLimitsParameters.
func (in *ResourceLimitsParameters) DeepCopy() *ResourceLimitsParameters {
	if in == nil {
		return nil
	}
	out := new(ResourceLimitsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RollConfigInitParameters) DeepCopyInto(out *RollConfigInitParameters) {
	*out = *in
	if in.BatchMinHealthyPercentage != nil {
		in, out := &in.BatchMinHealthyPercentage, &out.BatchMinHealthyPercentage
		*out = new(float64)
		**out = **in
	}
	if in.BatchSizePercentage != nil {
		in, out := &in.BatchSizePercentage, &out.BatchSizePercentage
		*out = new(float64)
		**out = **in
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.NodeNames != nil {
		in, out := &in.NodeNames, &out.NodeNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NodePoolNames != nil {
		in, out := &in.NodePoolNames, &out.NodePoolNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RespectPdb != nil {
		in, out := &in.RespectPdb, &out.RespectPdb
		*out = new(bool)
		**out = **in
	}
	if in.RespectRestrictScaleDown != nil {
		in, out := &in.RespectRestrictScaleDown, &out.RespectRestrictScaleDown
		*out = new(bool)
		**out = **in
	}
	if in.VngIds != nil {
		in, out := &in.VngIds, &out.VngIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RollConfigInitParameters.
func (in *RollConfigInitParameters) DeepCopy() *RollConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(RollConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RollConfigObservation) DeepCopyInto(out *RollConfigObservation) {
	*out = *in
	if in.BatchMinHealthyPercentage != nil {
		in, out := &in.BatchMinHealthyPercentage, &out.BatchMinHealthyPercentage
		*out = new(float64)
		**out = **in
	}
	if in.BatchSizePercentage != nil {
		in, out := &in.BatchSizePercentage, &out.BatchSizePercentage
		*out = new(float64)
		**out = **in
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.NodeNames != nil {
		in, out := &in.NodeNames, &out.NodeNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NodePoolNames != nil {
		in, out := &in.NodePoolNames, &out.NodePoolNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RespectPdb != nil {
		in, out := &in.RespectPdb, &out.RespectPdb
		*out = new(bool)
		**out = **in
	}
	if in.RespectRestrictScaleDown != nil {
		in, out := &in.RespectRestrictScaleDown, &out.RespectRestrictScaleDown
		*out = new(bool)
		**out = **in
	}
	if in.VngIds != nil {
		in, out := &in.VngIds, &out.VngIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RollConfigObservation.
func (in *RollConfigObservation) DeepCopy() *RollConfigObservation {
	if in == nil {
		return nil
	}
	out := new(RollConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RollConfigParameters) DeepCopyInto(out *RollConfigParameters) {
	*out = *in
	if in.BatchMinHealthyPercentage != nil {
		in, out := &in.BatchMinHealthyPercentage, &out.BatchMinHealthyPercentage
		*out = new(float64)
		**out = **in
	}
	if in.BatchSizePercentage != nil {
		in, out := &in.BatchSizePercentage, &out.BatchSizePercentage
		*out = new(float64)
		**out = **in
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.NodeNames != nil {
		in, out := &in.NodeNames, &out.NodeNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NodePoolNames != nil {
		in, out := &in.NodePoolNames, &out.NodePoolNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RespectPdb != nil {
		in, out := &in.RespectPdb, &out.RespectPdb
		*out = new(bool)
		**out = **in
	}
	if in.RespectRestrictScaleDown != nil {
		in, out := &in.RespectRestrictScaleDown, &out.RespectRestrictScaleDown
		*out = new(bool)
		**out = **in
	}
	if in.VngIds != nil {
		in, out := &in.VngIds, &out.VngIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RollConfigParameters.
func (in *RollConfigParameters) DeepCopy() *RollConfigParameters {
	if in == nil {
		return nil
	}
	out := new(RollConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RollParametersInitParameters) DeepCopyInto(out *RollParametersInitParameters) {
	*out = *in
	if in.BatchMinHealthyPercentage != nil {
		in, out := &in.BatchMinHealthyPercentage, &out.BatchMinHealthyPercentage
		*out = new(float64)
		**out = **in
	}
	if in.BatchSizePercentage != nil {
		in, out := &in.BatchSizePercentage, &out.BatchSizePercentage
		*out = new(float64)
		**out = **in
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.RespectPdb != nil {
		in, out := &in.RespectPdb, &out.RespectPdb
		*out = new(bool)
		**out = **in
	}
	if in.RespectRestrictScaleDown != nil {
		in, out := &in.RespectRestrictScaleDown, &out.RespectRestrictScaleDown
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RollParametersInitParameters.
func (in *RollParametersInitParameters) DeepCopy() *RollParametersInitParameters {
	if in == nil {
		return nil
	}
	out := new(RollParametersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RollParametersObservation) DeepCopyInto(out *RollParametersObservation) {
	*out = *in
	if in.BatchMinHealthyPercentage != nil {
		in, out := &in.BatchMinHealthyPercentage, &out.BatchMinHealthyPercentage
		*out = new(float64)
		**out = **in
	}
	if in.BatchSizePercentage != nil {
		in, out := &in.BatchSizePercentage, &out.BatchSizePercentage
		*out = new(float64)
		**out = **in
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.RespectPdb != nil {
		in, out := &in.RespectPdb, &out.RespectPdb
		*out = new(bool)
		**out = **in
	}
	if in.RespectRestrictScaleDown != nil {
		in, out := &in.RespectRestrictScaleDown, &out.RespectRestrictScaleDown
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RollParametersObservation.
func (in *RollParametersObservation) DeepCopy() *RollParametersObservation {
	if in == nil {
		return nil
	}
	out := new(RollParametersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RollParametersParameters) DeepCopyInto(out *RollParametersParameters) {
	*out = *in
	if in.BatchMinHealthyPercentage != nil {
		in, out := &in.BatchMinHealthyPercentage, &out.BatchMinHealthyPercentage
		*out = new(float64)
		**out = **in
	}
	if in.BatchSizePercentage != nil {
		in, out := &in.BatchSizePercentage, &out.BatchSizePercentage
		*out = new(float64)
		**out = **in
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.RespectPdb != nil {
		in, out := &in.RespectPdb, &out.RespectPdb
		*out = new(bool)
		**out = **in
	}
	if in.RespectRestrictScaleDown != nil {
		in, out := &in.RespectRestrictScaleDown, &out.RespectRestrictScaleDown
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RollParametersParameters.
func (in *RollParametersParameters) DeepCopy() *RollParametersParameters {
	if in == nil {
		return nil
	}
	out := new(RollParametersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchedulingInitParameters) DeepCopyInto(out *SchedulingInitParameters) {
	*out = *in
	if in.ShutdownHours != nil {
		in, out := &in.ShutdownHours, &out.ShutdownHours
		*out = make([]ShutdownHoursInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SuspensionHours != nil {
		in, out := &in.SuspensionHours, &out.SuspensionHours
		*out = make([]SuspensionHoursInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tasks != nil {
		in, out := &in.Tasks, &out.Tasks
		*out = make([]TasksInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchedulingInitParameters.
func (in *SchedulingInitParameters) DeepCopy() *SchedulingInitParameters {
	if in == nil {
		return nil
	}
	out := new(SchedulingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchedulingObservation) DeepCopyInto(out *SchedulingObservation) {
	*out = *in
	if in.ShutdownHours != nil {
		in, out := &in.ShutdownHours, &out.ShutdownHours
		*out = make([]ShutdownHoursObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SuspensionHours != nil {
		in, out := &in.SuspensionHours, &out.SuspensionHours
		*out = make([]SuspensionHoursObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tasks != nil {
		in, out := &in.Tasks, &out.Tasks
		*out = make([]TasksObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchedulingObservation.
func (in *SchedulingObservation) DeepCopy() *SchedulingObservation {
	if in == nil {
		return nil
	}
	out := new(SchedulingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchedulingParameters) DeepCopyInto(out *SchedulingParameters) {
	*out = *in
	if in.ShutdownHours != nil {
		in, out := &in.ShutdownHours, &out.ShutdownHours
		*out = make([]ShutdownHoursParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SuspensionHours != nil {
		in, out := &in.SuspensionHours, &out.SuspensionHours
		*out = make([]SuspensionHoursParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tasks != nil {
		in, out := &in.Tasks, &out.Tasks
		*out = make([]TasksParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchedulingParameters.
func (in *SchedulingParameters) DeepCopy() *SchedulingParameters {
	if in == nil {
		return nil
	}
	out := new(SchedulingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShutdownHoursInitParameters) DeepCopyInto(out *ShutdownHoursInitParameters) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.TimeWindows != nil {
		in, out := &in.TimeWindows, &out.TimeWindows
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShutdownHoursInitParameters.
func (in *ShutdownHoursInitParameters) DeepCopy() *ShutdownHoursInitParameters {
	if in == nil {
		return nil
	}
	out := new(ShutdownHoursInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShutdownHoursObservation) DeepCopyInto(out *ShutdownHoursObservation) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.TimeWindows != nil {
		in, out := &in.TimeWindows, &out.TimeWindows
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShutdownHoursObservation.
func (in *ShutdownHoursObservation) DeepCopy() *ShutdownHoursObservation {
	if in == nil {
		return nil
	}
	out := new(ShutdownHoursObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShutdownHoursParameters) DeepCopyInto(out *ShutdownHoursParameters) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.TimeWindows != nil {
		in, out := &in.TimeWindows, &out.TimeWindows
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShutdownHoursParameters.
func (in *ShutdownHoursParameters) DeepCopy() *ShutdownHoursParameters {
	if in == nil {
		return nil
	}
	out := new(ShutdownHoursParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SuspensionHoursInitParameters) DeepCopyInto(out *SuspensionHoursInitParameters) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.TimeWindows != nil {
		in, out := &in.TimeWindows, &out.TimeWindows
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SuspensionHoursInitParameters.
func (in *SuspensionHoursInitParameters) DeepCopy() *SuspensionHoursInitParameters {
	if in == nil {
		return nil
	}
	out := new(SuspensionHoursInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SuspensionHoursObservation) DeepCopyInto(out *SuspensionHoursObservation) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.TimeWindows != nil {
		in, out := &in.TimeWindows, &out.TimeWindows
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SuspensionHoursObservation.
func (in *SuspensionHoursObservation) DeepCopy() *SuspensionHoursObservation {
	if in == nil {
		return nil
	}
	out := new(SuspensionHoursObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SuspensionHoursParameters) DeepCopyInto(out *SuspensionHoursParameters) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.TimeWindows != nil {
		in, out := &in.TimeWindows, &out.TimeWindows
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SuspensionHoursParameters.
func (in *SuspensionHoursParameters) DeepCopy() *SuspensionHoursParameters {
	if in == nil {
		return nil
	}
	out := new(SuspensionHoursParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SysctlsInitParameters) DeepCopyInto(out *SysctlsInitParameters) {
	*out = *in
	if in.VMMaxMapCount != nil {
		in, out := &in.VMMaxMapCount, &out.VMMaxMapCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SysctlsInitParameters.
func (in *SysctlsInitParameters) DeepCopy() *SysctlsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SysctlsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SysctlsObservation) DeepCopyInto(out *SysctlsObservation) {
	*out = *in
	if in.VMMaxMapCount != nil {
		in, out := &in.VMMaxMapCount, &out.VMMaxMapCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SysctlsObservation.
func (in *SysctlsObservation) DeepCopy() *SysctlsObservation {
	if in == nil {
		return nil
	}
	out := new(SysctlsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SysctlsParameters) DeepCopyInto(out *SysctlsParameters) {
	*out = *in
	if in.VMMaxMapCount != nil {
		in, out := &in.VMMaxMapCount, &out.VMMaxMapCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SysctlsParameters.
func (in *SysctlsParameters) DeepCopy() *SysctlsParameters {
	if in == nil {
		return nil
	}
	out := new(SysctlsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaintsInitParameters) DeepCopyInto(out *TaintsInitParameters) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaintsInitParameters.
func (in *TaintsInitParameters) DeepCopy() *TaintsInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaintsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaintsObservation) DeepCopyInto(out *TaintsObservation) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaintsObservation.
func (in *TaintsObservation) DeepCopy() *TaintsObservation {
	if in == nil {
		return nil
	}
	out := new(TaintsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaintsParameters) DeepCopyInto(out *TaintsParameters) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaintsParameters.
func (in *TaintsParameters) DeepCopy() *TaintsParameters {
	if in == nil {
		return nil
	}
	out := new(TaintsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TasksInitParameters) DeepCopyInto(out *TasksInitParameters) {
	*out = *in
	if in.CronExpression != nil {
		in, out := &in.CronExpression, &out.CronExpression
		*out = new(string)
		**out = **in
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]ParametersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TaskType != nil {
		in, out := &in.TaskType, &out.TaskType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TasksInitParameters.
func (in *TasksInitParameters) DeepCopy() *TasksInitParameters {
	if in == nil {
		return nil
	}
	out := new(TasksInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TasksObservation) DeepCopyInto(out *TasksObservation) {
	*out = *in
	if in.CronExpression != nil {
		in, out := &in.CronExpression, &out.CronExpression
		*out = new(string)
		**out = **in
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]ParametersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TaskType != nil {
		in, out := &in.TaskType, &out.TaskType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TasksObservation.
func (in *TasksObservation) DeepCopy() *TasksObservation {
	if in == nil {
		return nil
	}
	out := new(TasksObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TasksParameters) DeepCopyInto(out *TasksParameters) {
	*out = *in
	if in.CronExpression != nil {
		in, out := &in.CronExpression, &out.CronExpression
		*out = new(string)
		**out = **in
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]ParametersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TaskType != nil {
		in, out := &in.TaskType, &out.TaskType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TasksParameters.
func (in *TasksParameters) DeepCopy() *TasksParameters {
	if in == nil {
		return nil
	}
	out := new(TasksParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UpdatePolicyInitParameters) DeepCopyInto(out *UpdatePolicyInitParameters) {
	*out = *in
	if in.ConditionedRoll != nil {
		in, out := &in.ConditionedRoll, &out.ConditionedRoll
		*out = new(bool)
		**out = **in
	}
	if in.RollConfig != nil {
		in, out := &in.RollConfig, &out.RollConfig
		*out = make([]RollConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ShouldRoll != nil {
		in, out := &in.ShouldRoll, &out.ShouldRoll
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UpdatePolicyInitParameters.
func (in *UpdatePolicyInitParameters) DeepCopy() *UpdatePolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(UpdatePolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UpdatePolicyObservation) DeepCopyInto(out *UpdatePolicyObservation) {
	*out = *in
	if in.ConditionedRoll != nil {
		in, out := &in.ConditionedRoll, &out.ConditionedRoll
		*out = new(bool)
		**out = **in
	}
	if in.RollConfig != nil {
		in, out := &in.RollConfig, &out.RollConfig
		*out = make([]RollConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ShouldRoll != nil {
		in, out := &in.ShouldRoll, &out.ShouldRoll
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UpdatePolicyObservation.
func (in *UpdatePolicyObservation) DeepCopy() *UpdatePolicyObservation {
	if in == nil {
		return nil
	}
	out := new(UpdatePolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UpdatePolicyParameters) DeepCopyInto(out *UpdatePolicyParameters) {
	*out = *in
	if in.ConditionedRoll != nil {
		in, out := &in.ConditionedRoll, &out.ConditionedRoll
		*out = new(bool)
		**out = **in
	}
	if in.RollConfig != nil {
		in, out := &in.RollConfig, &out.RollConfig
		*out = make([]RollConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ShouldRoll != nil {
		in, out := &in.ShouldRoll, &out.ShouldRoll
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UpdatePolicyParameters.
func (in *UpdatePolicyParameters) DeepCopy() *UpdatePolicyParameters {
	if in == nil {
		return nil
	}
	out := new(UpdatePolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VngTemplateSchedulingInitParameters) DeepCopyInto(out *VngTemplateSchedulingInitParameters) {
	*out = *in
	if in.VngTemplateShutdownHours != nil {
		in, out := &in.VngTemplateShutdownHours, &out.VngTemplateShutdownHours
		*out = make([]VngTemplateShutdownHoursInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VngTemplateSchedulingInitParameters.
func (in *VngTemplateSchedulingInitParameters) DeepCopy() *VngTemplateSchedulingInitParameters {
	if in == nil {
		return nil
	}
	out := new(VngTemplateSchedulingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VngTemplateSchedulingObservation) DeepCopyInto(out *VngTemplateSchedulingObservation) {
	*out = *in
	if in.VngTemplateShutdownHours != nil {
		in, out := &in.VngTemplateShutdownHours, &out.VngTemplateShutdownHours
		*out = make([]VngTemplateShutdownHoursObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VngTemplateSchedulingObservation.
func (in *VngTemplateSchedulingObservation) DeepCopy() *VngTemplateSchedulingObservation {
	if in == nil {
		return nil
	}
	out := new(VngTemplateSchedulingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VngTemplateSchedulingParameters) DeepCopyInto(out *VngTemplateSchedulingParameters) {
	*out = *in
	if in.VngTemplateShutdownHours != nil {
		in, out := &in.VngTemplateShutdownHours, &out.VngTemplateShutdownHours
		*out = make([]VngTemplateShutdownHoursParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VngTemplateSchedulingParameters.
func (in *VngTemplateSchedulingParameters) DeepCopy() *VngTemplateSchedulingParameters {
	if in == nil {
		return nil
	}
	out := new(VngTemplateSchedulingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VngTemplateShutdownHoursInitParameters) DeepCopyInto(out *VngTemplateShutdownHoursInitParameters) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.TimeWindows != nil {
		in, out := &in.TimeWindows, &out.TimeWindows
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VngTemplateShutdownHoursInitParameters.
func (in *VngTemplateShutdownHoursInitParameters) DeepCopy() *VngTemplateShutdownHoursInitParameters {
	if in == nil {
		return nil
	}
	out := new(VngTemplateShutdownHoursInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VngTemplateShutdownHoursObservation) DeepCopyInto(out *VngTemplateShutdownHoursObservation) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.TimeWindows != nil {
		in, out := &in.TimeWindows, &out.TimeWindows
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VngTemplateShutdownHoursObservation.
func (in *VngTemplateShutdownHoursObservation) DeepCopy() *VngTemplateShutdownHoursObservation {
	if in == nil {
		return nil
	}
	out := new(VngTemplateShutdownHoursObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VngTemplateShutdownHoursParameters) DeepCopyInto(out *VngTemplateShutdownHoursParameters) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.TimeWindows != nil {
		in, out := &in.TimeWindows, &out.TimeWindows
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VngTemplateShutdownHoursParameters.
func (in *VngTemplateShutdownHoursParameters) DeepCopy() *VngTemplateShutdownHoursParameters {
	if in == nil {
		return nil
	}
	out := new(VngTemplateShutdownHoursParameters)
	in.DeepCopyInto(out)
	return out
}
