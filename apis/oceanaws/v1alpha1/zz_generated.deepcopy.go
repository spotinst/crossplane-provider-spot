//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AMIAutoUpdateClusterRollObservation) DeepCopyInto(out *AMIAutoUpdateClusterRollObservation) {
	*out = *in
	if in.BatchMinHealthyPercentage != nil {
		in, out := &in.BatchMinHealthyPercentage, &out.BatchMinHealthyPercentage
		*out = new(float64)
		**out = **in
	}
	if in.BatchSizePercentage != nil {
		in, out := &in.BatchSizePercentage, &out.BatchSizePercentage
		*out = new(float64)
		**out = **in
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.RespectPdb != nil {
		in, out := &in.RespectPdb, &out.RespectPdb
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AMIAutoUpdateClusterRollObservation.
func (in *AMIAutoUpdateClusterRollObservation) DeepCopy() *AMIAutoUpdateClusterRollObservation {
	if in == nil {
		return nil
	}
	out := new(AMIAutoUpdateClusterRollObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AMIAutoUpdateClusterRollParameters) DeepCopyInto(out *AMIAutoUpdateClusterRollParameters) {
	*out = *in
	if in.BatchMinHealthyPercentage != nil {
		in, out := &in.BatchMinHealthyPercentage, &out.BatchMinHealthyPercentage
		*out = new(float64)
		**out = **in
	}
	if in.BatchSizePercentage != nil {
		in, out := &in.BatchSizePercentage, &out.BatchSizePercentage
		*out = new(float64)
		**out = **in
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.RespectPdb != nil {
		in, out := &in.RespectPdb, &out.RespectPdb
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AMIAutoUpdateClusterRollParameters.
func (in *AMIAutoUpdateClusterRollParameters) DeepCopy() *AMIAutoUpdateClusterRollParameters {
	if in == nil {
		return nil
	}
	out := new(AMIAutoUpdateClusterRollParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AMIAutoUpdateObservation) DeepCopyInto(out *AMIAutoUpdateObservation) {
	*out = *in
	if in.AMIAutoUpdateClusterRoll != nil {
		in, out := &in.AMIAutoUpdateClusterRoll, &out.AMIAutoUpdateClusterRoll
		*out = make([]AMIAutoUpdateClusterRollObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ApplyRoll != nil {
		in, out := &in.ApplyRoll, &out.ApplyRoll
		*out = new(bool)
		**out = **in
	}
	if in.MinorVersion != nil {
		in, out := &in.MinorVersion, &out.MinorVersion
		*out = new(bool)
		**out = **in
	}
	if in.Patch != nil {
		in, out := &in.Patch, &out.Patch
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AMIAutoUpdateObservation.
func (in *AMIAutoUpdateObservation) DeepCopy() *AMIAutoUpdateObservation {
	if in == nil {
		return nil
	}
	out := new(AMIAutoUpdateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AMIAutoUpdateParameters) DeepCopyInto(out *AMIAutoUpdateParameters) {
	*out = *in
	if in.AMIAutoUpdateClusterRoll != nil {
		in, out := &in.AMIAutoUpdateClusterRoll, &out.AMIAutoUpdateClusterRoll
		*out = make([]AMIAutoUpdateClusterRollParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ApplyRoll != nil {
		in, out := &in.ApplyRoll, &out.ApplyRoll
		*out = new(bool)
		**out = **in
	}
	if in.MinorVersion != nil {
		in, out := &in.MinorVersion, &out.MinorVersion
		*out = new(bool)
		**out = **in
	}
	if in.Patch != nil {
		in, out := &in.Patch, &out.Patch
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AMIAutoUpdateParameters.
func (in *AMIAutoUpdateParameters) DeepCopy() *AMIAutoUpdateParameters {
	if in == nil {
		return nil
	}
	out := new(AMIAutoUpdateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttachLoadBalancerObservation) DeepCopyInto(out *AttachLoadBalancerObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttachLoadBalancerObservation.
func (in *AttachLoadBalancerObservation) DeepCopy() *AttachLoadBalancerObservation {
	if in == nil {
		return nil
	}
	out := new(AttachLoadBalancerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttachLoadBalancerParameters) DeepCopyInto(out *AttachLoadBalancerParameters) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttachLoadBalancerParameters.
func (in *AttachLoadBalancerParameters) DeepCopy() *AttachLoadBalancerParameters {
	if in == nil {
		return nil
	}
	out := new(AttachLoadBalancerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscaleDownObservation) DeepCopyInto(out *AutoscaleDownObservation) {
	*out = *in
	if in.EvaluationPeriods != nil {
		in, out := &in.EvaluationPeriods, &out.EvaluationPeriods
		*out = new(float64)
		**out = **in
	}
	if in.IsAggressiveScaleDownEnabled != nil {
		in, out := &in.IsAggressiveScaleDownEnabled, &out.IsAggressiveScaleDownEnabled
		*out = new(bool)
		**out = **in
	}
	if in.MaxScaleDownPercentage != nil {
		in, out := &in.MaxScaleDownPercentage, &out.MaxScaleDownPercentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscaleDownObservation.
func (in *AutoscaleDownObservation) DeepCopy() *AutoscaleDownObservation {
	if in == nil {
		return nil
	}
	out := new(AutoscaleDownObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscaleDownParameters) DeepCopyInto(out *AutoscaleDownParameters) {
	*out = *in
	if in.EvaluationPeriods != nil {
		in, out := &in.EvaluationPeriods, &out.EvaluationPeriods
		*out = new(float64)
		**out = **in
	}
	if in.IsAggressiveScaleDownEnabled != nil {
		in, out := &in.IsAggressiveScaleDownEnabled, &out.IsAggressiveScaleDownEnabled
		*out = new(bool)
		**out = **in
	}
	if in.MaxScaleDownPercentage != nil {
		in, out := &in.MaxScaleDownPercentage, &out.MaxScaleDownPercentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscaleDownParameters.
func (in *AutoscaleDownParameters) DeepCopy() *AutoscaleDownParameters {
	if in == nil {
		return nil
	}
	out := new(AutoscaleDownParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscaleHeadroomObservation) DeepCopyInto(out *AutoscaleHeadroomObservation) {
	*out = *in
	if in.CPUPerUnit != nil {
		in, out := &in.CPUPerUnit, &out.CPUPerUnit
		*out = new(float64)
		**out = **in
	}
	if in.GpuPerUnit != nil {
		in, out := &in.GpuPerUnit, &out.GpuPerUnit
		*out = new(float64)
		**out = **in
	}
	if in.MemoryPerUnit != nil {
		in, out := &in.MemoryPerUnit, &out.MemoryPerUnit
		*out = new(float64)
		**out = **in
	}
	if in.NumOfUnits != nil {
		in, out := &in.NumOfUnits, &out.NumOfUnits
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscaleHeadroomObservation.
func (in *AutoscaleHeadroomObservation) DeepCopy() *AutoscaleHeadroomObservation {
	if in == nil {
		return nil
	}
	out := new(AutoscaleHeadroomObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscaleHeadroomParameters) DeepCopyInto(out *AutoscaleHeadroomParameters) {
	*out = *in
	if in.CPUPerUnit != nil {
		in, out := &in.CPUPerUnit, &out.CPUPerUnit
		*out = new(float64)
		**out = **in
	}
	if in.GpuPerUnit != nil {
		in, out := &in.GpuPerUnit, &out.GpuPerUnit
		*out = new(float64)
		**out = **in
	}
	if in.MemoryPerUnit != nil {
		in, out := &in.MemoryPerUnit, &out.MemoryPerUnit
		*out = new(float64)
		**out = **in
	}
	if in.NumOfUnits != nil {
		in, out := &in.NumOfUnits, &out.NumOfUnits
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscaleHeadroomParameters.
func (in *AutoscaleHeadroomParameters) DeepCopy() *AutoscaleHeadroomParameters {
	if in == nil {
		return nil
	}
	out := new(AutoscaleHeadroomParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscalerObservation) DeepCopyInto(out *AutoscalerObservation) {
	*out = *in
	if in.AutoHeadroomPercentage != nil {
		in, out := &in.AutoHeadroomPercentage, &out.AutoHeadroomPercentage
		*out = new(float64)
		**out = **in
	}
	if in.AutoscaleCooldown != nil {
		in, out := &in.AutoscaleCooldown, &out.AutoscaleCooldown
		*out = new(float64)
		**out = **in
	}
	if in.AutoscaleDown != nil {
		in, out := &in.AutoscaleDown, &out.AutoscaleDown
		*out = make([]AutoscaleDownObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoscaleHeadroom != nil {
		in, out := &in.AutoscaleHeadroom, &out.AutoscaleHeadroom
		*out = make([]AutoscaleHeadroomObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoscaleIsAutoConfig != nil {
		in, out := &in.AutoscaleIsAutoConfig, &out.AutoscaleIsAutoConfig
		*out = new(bool)
		**out = **in
	}
	if in.AutoscaleIsEnabled != nil {
		in, out := &in.AutoscaleIsEnabled, &out.AutoscaleIsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.EnableAutomaticAndManualHeadroom != nil {
		in, out := &in.EnableAutomaticAndManualHeadroom, &out.EnableAutomaticAndManualHeadroom
		*out = new(bool)
		**out = **in
	}
	if in.ExtendedResourceDefinitions != nil {
		in, out := &in.ExtendedResourceDefinitions, &out.ExtendedResourceDefinitions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResourceLimits != nil {
		in, out := &in.ResourceLimits, &out.ResourceLimits
		*out = make([]ResourceLimitsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscalerObservation.
func (in *AutoscalerObservation) DeepCopy() *AutoscalerObservation {
	if in == nil {
		return nil
	}
	out := new(AutoscalerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscalerParameters) DeepCopyInto(out *AutoscalerParameters) {
	*out = *in
	if in.AutoHeadroomPercentage != nil {
		in, out := &in.AutoHeadroomPercentage, &out.AutoHeadroomPercentage
		*out = new(float64)
		**out = **in
	}
	if in.AutoscaleCooldown != nil {
		in, out := &in.AutoscaleCooldown, &out.AutoscaleCooldown
		*out = new(float64)
		**out = **in
	}
	if in.AutoscaleDown != nil {
		in, out := &in.AutoscaleDown, &out.AutoscaleDown
		*out = make([]AutoscaleDownParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoscaleHeadroom != nil {
		in, out := &in.AutoscaleHeadroom, &out.AutoscaleHeadroom
		*out = make([]AutoscaleHeadroomParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoscaleIsAutoConfig != nil {
		in, out := &in.AutoscaleIsAutoConfig, &out.AutoscaleIsAutoConfig
		*out = new(bool)
		**out = **in
	}
	if in.AutoscaleIsEnabled != nil {
		in, out := &in.AutoscaleIsEnabled, &out.AutoscaleIsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.EnableAutomaticAndManualHeadroom != nil {
		in, out := &in.EnableAutomaticAndManualHeadroom, &out.EnableAutomaticAndManualHeadroom
		*out = new(bool)
		**out = **in
	}
	if in.ExtendedResourceDefinitions != nil {
		in, out := &in.ExtendedResourceDefinitions, &out.ExtendedResourceDefinitions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResourceLimits != nil {
		in, out := &in.ResourceLimits, &out.ResourceLimits
		*out = make([]ResourceLimitsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscalerParameters.
func (in *AutoscalerParameters) DeepCopy() *AutoscalerParameters {
	if in == nil {
		return nil
	}
	out := new(AutoscalerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlockDeviceMappingsObservation) DeepCopyInto(out *BlockDeviceMappingsObservation) {
	*out = *in
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.EBS != nil {
		in, out := &in.EBS, &out.EBS
		*out = make([]EBSObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlockDeviceMappingsObservation.
func (in *BlockDeviceMappingsObservation) DeepCopy() *BlockDeviceMappingsObservation {
	if in == nil {
		return nil
	}
	out := new(BlockDeviceMappingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlockDeviceMappingsParameters) DeepCopyInto(out *BlockDeviceMappingsParameters) {
	*out = *in
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.EBS != nil {
		in, out := &in.EBS, &out.EBS
		*out = make([]EBSParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlockDeviceMappingsParameters.
func (in *BlockDeviceMappingsParameters) DeepCopy() *BlockDeviceMappingsParameters {
	if in == nil {
		return nil
	}
	out := new(BlockDeviceMappingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterOrientationObservation) DeepCopyInto(out *ClusterOrientationObservation) {
	*out = *in
	if in.AvailabilityVsCost != nil {
		in, out := &in.AvailabilityVsCost, &out.AvailabilityVsCost
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterOrientationObservation.
func (in *ClusterOrientationObservation) DeepCopy() *ClusterOrientationObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterOrientationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterOrientationParameters) DeepCopyInto(out *ClusterOrientationParameters) {
	*out = *in
	if in.AvailabilityVsCost != nil {
		in, out := &in.AvailabilityVsCost, &out.AvailabilityVsCost
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterOrientationParameters.
func (in *ClusterOrientationParameters) DeepCopy() *ClusterOrientationParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterOrientationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DetachLoadBalancerObservation) DeepCopyInto(out *DetachLoadBalancerObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DetachLoadBalancerObservation.
func (in *DetachLoadBalancerObservation) DeepCopy() *DetachLoadBalancerObservation {
	if in == nil {
		return nil
	}
	out := new(DetachLoadBalancerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DetachLoadBalancerParameters) DeepCopyInto(out *DetachLoadBalancerParameters) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DetachLoadBalancerParameters.
func (in *DetachLoadBalancerParameters) DeepCopy() *DetachLoadBalancerParameters {
	if in == nil {
		return nil
	}
	out := new(DetachLoadBalancerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DynamicIopsObservation) DeepCopyInto(out *DynamicIopsObservation) {
	*out = *in
	if in.BaseSize != nil {
		in, out := &in.BaseSize, &out.BaseSize
		*out = new(float64)
		**out = **in
	}
	if in.Resource != nil {
		in, out := &in.Resource, &out.Resource
		*out = new(string)
		**out = **in
	}
	if in.SizePerResourceUnit != nil {
		in, out := &in.SizePerResourceUnit, &out.SizePerResourceUnit
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DynamicIopsObservation.
func (in *DynamicIopsObservation) DeepCopy() *DynamicIopsObservation {
	if in == nil {
		return nil
	}
	out := new(DynamicIopsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DynamicIopsParameters) DeepCopyInto(out *DynamicIopsParameters) {
	*out = *in
	if in.BaseSize != nil {
		in, out := &in.BaseSize, &out.BaseSize
		*out = new(float64)
		**out = **in
	}
	if in.Resource != nil {
		in, out := &in.Resource, &out.Resource
		*out = new(string)
		**out = **in
	}
	if in.SizePerResourceUnit != nil {
		in, out := &in.SizePerResourceUnit, &out.SizePerResourceUnit
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DynamicIopsParameters.
func (in *DynamicIopsParameters) DeepCopy() *DynamicIopsParameters {
	if in == nil {
		return nil
	}
	out := new(DynamicIopsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DynamicVolumeSizeObservation) DeepCopyInto(out *DynamicVolumeSizeObservation) {
	*out = *in
	if in.BaseSize != nil {
		in, out := &in.BaseSize, &out.BaseSize
		*out = new(float64)
		**out = **in
	}
	if in.Resource != nil {
		in, out := &in.Resource, &out.Resource
		*out = new(string)
		**out = **in
	}
	if in.SizePerResourceUnit != nil {
		in, out := &in.SizePerResourceUnit, &out.SizePerResourceUnit
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DynamicVolumeSizeObservation.
func (in *DynamicVolumeSizeObservation) DeepCopy() *DynamicVolumeSizeObservation {
	if in == nil {
		return nil
	}
	out := new(DynamicVolumeSizeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DynamicVolumeSizeParameters) DeepCopyInto(out *DynamicVolumeSizeParameters) {
	*out = *in
	if in.BaseSize != nil {
		in, out := &in.BaseSize, &out.BaseSize
		*out = new(float64)
		**out = **in
	}
	if in.Resource != nil {
		in, out := &in.Resource, &out.Resource
		*out = new(string)
		**out = **in
	}
	if in.SizePerResourceUnit != nil {
		in, out := &in.SizePerResourceUnit, &out.SizePerResourceUnit
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DynamicVolumeSizeParameters.
func (in *DynamicVolumeSizeParameters) DeepCopy() *DynamicVolumeSizeParameters {
	if in == nil {
		return nil
	}
	out := new(DynamicVolumeSizeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSObservation) DeepCopyInto(out *EBSObservation) {
	*out = *in
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(bool)
		**out = **in
	}
	if in.DynamicIops != nil {
		in, out := &in.DynamicIops, &out.DynamicIops
		*out = make([]DynamicIopsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DynamicVolumeSize != nil {
		in, out := &in.DynamicVolumeSize, &out.DynamicVolumeSize
		*out = make([]DynamicVolumeSizeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SnapshotID != nil {
		in, out := &in.SnapshotID, &out.SnapshotID
		*out = new(string)
		**out = **in
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
	if in.VolumeSize != nil {
		in, out := &in.VolumeSize, &out.VolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSObservation.
func (in *EBSObservation) DeepCopy() *EBSObservation {
	if in == nil {
		return nil
	}
	out := new(EBSObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSParameters) DeepCopyInto(out *EBSParameters) {
	*out = *in
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(bool)
		**out = **in
	}
	if in.DynamicIops != nil {
		in, out := &in.DynamicIops, &out.DynamicIops
		*out = make([]DynamicIopsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DynamicVolumeSize != nil {
		in, out := &in.DynamicVolumeSize, &out.DynamicVolumeSize
		*out = make([]DynamicVolumeSizeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SnapshotID != nil {
		in, out := &in.SnapshotID, &out.SnapshotID
		*out = new(string)
		**out = **in
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
	if in.VolumeSize != nil {
		in, out := &in.VolumeSize, &out.VolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSParameters.
func (in *EBSParameters) DeepCopy() *EBSParameters {
	if in == nil {
		return nil
	}
	out := new(EBSParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExportObservation) DeepCopyInto(out *ExportObservation) {
	*out = *in
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]S3Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExportObservation.
func (in *ExportObservation) DeepCopy() *ExportObservation {
	if in == nil {
		return nil
	}
	out := new(ExportObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExportParameters) DeepCopyInto(out *ExportParameters) {
	*out = *in
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]S3Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExportParameters.
func (in *ExportParameters) DeepCopy() *ExportParameters {
	if in == nil {
		return nil
	}
	out := new(ExportParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FiltersObservation) DeepCopyInto(out *FiltersObservation) {
	*out = *in
	if in.Architectures != nil {
		in, out := &in.Architectures, &out.Architectures
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Categories != nil {
		in, out := &in.Categories, &out.Categories
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DiskTypes != nil {
		in, out := &in.DiskTypes, &out.DiskTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExcludeFamilies != nil {
		in, out := &in.ExcludeFamilies, &out.ExcludeFamilies
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExcludeMetal != nil {
		in, out := &in.ExcludeMetal, &out.ExcludeMetal
		*out = new(bool)
		**out = **in
	}
	if in.Hypervisor != nil {
		in, out := &in.Hypervisor, &out.Hypervisor
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeFamilies != nil {
		in, out := &in.IncludeFamilies, &out.IncludeFamilies
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IsEnaSupported != nil {
		in, out := &in.IsEnaSupported, &out.IsEnaSupported
		*out = new(string)
		**out = **in
	}
	if in.MaxGpu != nil {
		in, out := &in.MaxGpu, &out.MaxGpu
		*out = new(float64)
		**out = **in
	}
	if in.MaxMemoryGib != nil {
		in, out := &in.MaxMemoryGib, &out.MaxMemoryGib
		*out = new(float64)
		**out = **in
	}
	if in.MaxNetworkPerformance != nil {
		in, out := &in.MaxNetworkPerformance, &out.MaxNetworkPerformance
		*out = new(float64)
		**out = **in
	}
	if in.MaxVcpu != nil {
		in, out := &in.MaxVcpu, &out.MaxVcpu
		*out = new(float64)
		**out = **in
	}
	if in.MinEnis != nil {
		in, out := &in.MinEnis, &out.MinEnis
		*out = new(float64)
		**out = **in
	}
	if in.MinGpu != nil {
		in, out := &in.MinGpu, &out.MinGpu
		*out = new(float64)
		**out = **in
	}
	if in.MinMemoryGib != nil {
		in, out := &in.MinMemoryGib, &out.MinMemoryGib
		*out = new(float64)
		**out = **in
	}
	if in.MinNetworkPerformance != nil {
		in, out := &in.MinNetworkPerformance, &out.MinNetworkPerformance
		*out = new(float64)
		**out = **in
	}
	if in.MinVcpu != nil {
		in, out := &in.MinVcpu, &out.MinVcpu
		*out = new(float64)
		**out = **in
	}
	if in.RootDeviceTypes != nil {
		in, out := &in.RootDeviceTypes, &out.RootDeviceTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.VirtualizationTypes != nil {
		in, out := &in.VirtualizationTypes, &out.VirtualizationTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FiltersObservation.
func (in *FiltersObservation) DeepCopy() *FiltersObservation {
	if in == nil {
		return nil
	}
	out := new(FiltersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FiltersParameters) DeepCopyInto(out *FiltersParameters) {
	*out = *in
	if in.Architectures != nil {
		in, out := &in.Architectures, &out.Architectures
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Categories != nil {
		in, out := &in.Categories, &out.Categories
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DiskTypes != nil {
		in, out := &in.DiskTypes, &out.DiskTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExcludeFamilies != nil {
		in, out := &in.ExcludeFamilies, &out.ExcludeFamilies
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExcludeMetal != nil {
		in, out := &in.ExcludeMetal, &out.ExcludeMetal
		*out = new(bool)
		**out = **in
	}
	if in.Hypervisor != nil {
		in, out := &in.Hypervisor, &out.Hypervisor
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeFamilies != nil {
		in, out := &in.IncludeFamilies, &out.IncludeFamilies
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IsEnaSupported != nil {
		in, out := &in.IsEnaSupported, &out.IsEnaSupported
		*out = new(string)
		**out = **in
	}
	if in.MaxGpu != nil {
		in, out := &in.MaxGpu, &out.MaxGpu
		*out = new(float64)
		**out = **in
	}
	if in.MaxMemoryGib != nil {
		in, out := &in.MaxMemoryGib, &out.MaxMemoryGib
		*out = new(float64)
		**out = **in
	}
	if in.MaxNetworkPerformance != nil {
		in, out := &in.MaxNetworkPerformance, &out.MaxNetworkPerformance
		*out = new(float64)
		**out = **in
	}
	if in.MaxVcpu != nil {
		in, out := &in.MaxVcpu, &out.MaxVcpu
		*out = new(float64)
		**out = **in
	}
	if in.MinEnis != nil {
		in, out := &in.MinEnis, &out.MinEnis
		*out = new(float64)
		**out = **in
	}
	if in.MinGpu != nil {
		in, out := &in.MinGpu, &out.MinGpu
		*out = new(float64)
		**out = **in
	}
	if in.MinMemoryGib != nil {
		in, out := &in.MinMemoryGib, &out.MinMemoryGib
		*out = new(float64)
		**out = **in
	}
	if in.MinNetworkPerformance != nil {
		in, out := &in.MinNetworkPerformance, &out.MinNetworkPerformance
		*out = new(float64)
		**out = **in
	}
	if in.MinVcpu != nil {
		in, out := &in.MinVcpu, &out.MinVcpu
		*out = new(float64)
		**out = **in
	}
	if in.RootDeviceTypes != nil {
		in, out := &in.RootDeviceTypes, &out.RootDeviceTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.VirtualizationTypes != nil {
		in, out := &in.VirtualizationTypes, &out.VirtualizationTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FiltersParameters.
func (in *FiltersParameters) DeepCopy() *FiltersParameters {
	if in == nil {
		return nil
	}
	out := new(FiltersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceMetadataOptionsObservation) DeepCopyInto(out *InstanceMetadataOptionsObservation) {
	*out = *in
	if in.HTTPPutResponseHopLimit != nil {
		in, out := &in.HTTPPutResponseHopLimit, &out.HTTPPutResponseHopLimit
		*out = new(float64)
		**out = **in
	}
	if in.HTTPTokens != nil {
		in, out := &in.HTTPTokens, &out.HTTPTokens
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceMetadataOptionsObservation.
func (in *InstanceMetadataOptionsObservation) DeepCopy() *InstanceMetadataOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceMetadataOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceMetadataOptionsParameters) DeepCopyInto(out *InstanceMetadataOptionsParameters) {
	*out = *in
	if in.HTTPPutResponseHopLimit != nil {
		in, out := &in.HTTPPutResponseHopLimit, &out.HTTPPutResponseHopLimit
		*out = new(float64)
		**out = **in
	}
	if in.HTTPTokens != nil {
		in, out := &in.HTTPTokens, &out.HTTPTokens
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceMetadataOptionsParameters.
func (in *InstanceMetadataOptionsParameters) DeepCopy() *InstanceMetadataOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceMetadataOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancersObservation) DeepCopyInto(out *LoadBalancersObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancersObservation.
func (in *LoadBalancersObservation) DeepCopy() *LoadBalancersObservation {
	if in == nil {
		return nil
	}
	out := new(LoadBalancersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancersParameters) DeepCopyInto(out *LoadBalancersParameters) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancersParameters.
func (in *LoadBalancersParameters) DeepCopy() *LoadBalancersParameters {
	if in == nil {
		return nil
	}
	out := new(LoadBalancersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoggingObservation) DeepCopyInto(out *LoggingObservation) {
	*out = *in
	if in.Export != nil {
		in, out := &in.Export, &out.Export
		*out = make([]ExportObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoggingObservation.
func (in *LoggingObservation) DeepCopy() *LoggingObservation {
	if in == nil {
		return nil
	}
	out := new(LoggingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoggingParameters) DeepCopyInto(out *LoggingParameters) {
	*out = *in
	if in.Export != nil {
		in, out := &in.Export, &out.Export
		*out = make([]ExportParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoggingParameters.
func (in *LoggingParameters) DeepCopy() *LoggingParameters {
	if in == nil {
		return nil
	}
	out := new(LoggingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OceanAws) DeepCopyInto(out *OceanAws) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OceanAws.
func (in *OceanAws) DeepCopy() *OceanAws {
	if in == nil {
		return nil
	}
	out := new(OceanAws)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OceanAws) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OceanAwsList) DeepCopyInto(out *OceanAwsList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]OceanAws, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OceanAwsList.
func (in *OceanAwsList) DeepCopy() *OceanAwsList {
	if in == nil {
		return nil
	}
	out := new(OceanAwsList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OceanAwsList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OceanAwsObservation) DeepCopyInto(out *OceanAwsObservation) {
	*out = *in
	if in.AssociateIPv6Address != nil {
		in, out := &in.AssociateIPv6Address, &out.AssociateIPv6Address
		*out = new(bool)
		**out = **in
	}
	if in.AssociatePublicIPAddress != nil {
		in, out := &in.AssociatePublicIPAddress, &out.AssociatePublicIPAddress
		*out = new(bool)
		**out = **in
	}
	if in.AttachLoadBalancer != nil {
		in, out := &in.AttachLoadBalancer, &out.AttachLoadBalancer
		*out = make([]AttachLoadBalancerObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Autoscaler != nil {
		in, out := &in.Autoscaler, &out.Autoscaler
		*out = make([]AutoscalerObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Blacklist != nil {
		in, out := &in.Blacklist, &out.Blacklist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.BlockDeviceMappings != nil {
		in, out := &in.BlockDeviceMappings, &out.BlockDeviceMappings
		*out = make([]BlockDeviceMappingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterOrientation != nil {
		in, out := &in.ClusterOrientation, &out.ClusterOrientation
		*out = make([]ClusterOrientationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ControllerID != nil {
		in, out := &in.ControllerID, &out.ControllerID
		*out = new(string)
		**out = **in
	}
	if in.DesiredCapacity != nil {
		in, out := &in.DesiredCapacity, &out.DesiredCapacity
		*out = new(float64)
		**out = **in
	}
	if in.DetachLoadBalancer != nil {
		in, out := &in.DetachLoadBalancer, &out.DetachLoadBalancer
		*out = make([]DetachLoadBalancerObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DrainingTimeout != nil {
		in, out := &in.DrainingTimeout, &out.DrainingTimeout
		*out = new(float64)
		**out = **in
	}
	if in.EBSOptimized != nil {
		in, out := &in.EBSOptimized, &out.EBSOptimized
		*out = new(bool)
		**out = **in
	}
	if in.FallbackToOndemand != nil {
		in, out := &in.FallbackToOndemand, &out.FallbackToOndemand
		*out = new(bool)
		**out = **in
	}
	if in.Filters != nil {
		in, out := &in.Filters, &out.Filters
		*out = make([]FiltersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GracePeriod != nil {
		in, out := &in.GracePeriod, &out.GracePeriod
		*out = new(float64)
		**out = **in
	}
	if in.HealthCheckUnhealthyDurationBeforeReplacement != nil {
		in, out := &in.HealthCheckUnhealthyDurationBeforeReplacement, &out.HealthCheckUnhealthyDurationBeforeReplacement
		*out = new(float64)
		**out = **in
	}
	if in.IAMInstanceProfile != nil {
		in, out := &in.IAMInstanceProfile, &out.IAMInstanceProfile
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ImageID != nil {
		in, out := &in.ImageID, &out.ImageID
		*out = new(string)
		**out = **in
	}
	if in.InstanceMetadataOptions != nil {
		in, out := &in.InstanceMetadataOptions, &out.InstanceMetadataOptions
		*out = make([]InstanceMetadataOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KeyName != nil {
		in, out := &in.KeyName, &out.KeyName
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancers != nil {
		in, out := &in.LoadBalancers, &out.LoadBalancers
		*out = make([]LoadBalancersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Logging != nil {
		in, out := &in.Logging, &out.Logging
		*out = make([]LoggingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxSize != nil {
		in, out := &in.MaxSize, &out.MaxSize
		*out = new(float64)
		**out = **in
	}
	if in.MinSize != nil {
		in, out := &in.MinSize, &out.MinSize
		*out = new(float64)
		**out = **in
	}
	if in.Monitoring != nil {
		in, out := &in.Monitoring, &out.Monitoring
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ResourceTagSpecification != nil {
		in, out := &in.ResourceTagSpecification, &out.ResourceTagSpecification
		*out = make([]ResourceTagSpecificationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RootVolumeSize != nil {
		in, out := &in.RootVolumeSize, &out.RootVolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.ScheduledTask != nil {
		in, out := &in.ScheduledTask, &out.ScheduledTask
		*out = make([]ScheduledTaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SpotPercentage != nil {
		in, out := &in.SpotPercentage, &out.SpotPercentage
		*out = new(float64)
		**out = **in
	}
	if in.SpreadNodesBy != nil {
		in, out := &in.SpreadNodesBy, &out.SpreadNodesBy
		*out = new(string)
		**out = **in
	}
	if in.SubnetIds != nil {
		in, out := &in.SubnetIds, &out.SubnetIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]TagsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdatePolicy != nil {
		in, out := &in.UpdatePolicy, &out.UpdatePolicy
		*out = make([]UpdatePolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UseAsTemplateOnly != nil {
		in, out := &in.UseAsTemplateOnly, &out.UseAsTemplateOnly
		*out = new(bool)
		**out = **in
	}
	if in.UserData != nil {
		in, out := &in.UserData, &out.UserData
		*out = new(string)
		**out = **in
	}
	if in.UtilizeCommitments != nil {
		in, out := &in.UtilizeCommitments, &out.UtilizeCommitments
		*out = new(bool)
		**out = **in
	}
	if in.UtilizeReservedInstances != nil {
		in, out := &in.UtilizeReservedInstances, &out.UtilizeReservedInstances
		*out = new(bool)
		**out = **in
	}
	if in.Whitelist != nil {
		in, out := &in.Whitelist, &out.Whitelist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OceanAwsObservation.
func (in *OceanAwsObservation) DeepCopy() *OceanAwsObservation {
	if in == nil {
		return nil
	}
	out := new(OceanAwsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OceanAwsParameters) DeepCopyInto(out *OceanAwsParameters) {
	*out = *in
	if in.AssociateIPv6Address != nil {
		in, out := &in.AssociateIPv6Address, &out.AssociateIPv6Address
		*out = new(bool)
		**out = **in
	}
	if in.AssociatePublicIPAddress != nil {
		in, out := &in.AssociatePublicIPAddress, &out.AssociatePublicIPAddress
		*out = new(bool)
		**out = **in
	}
	if in.AttachLoadBalancer != nil {
		in, out := &in.AttachLoadBalancer, &out.AttachLoadBalancer
		*out = make([]AttachLoadBalancerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Autoscaler != nil {
		in, out := &in.Autoscaler, &out.Autoscaler
		*out = make([]AutoscalerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Blacklist != nil {
		in, out := &in.Blacklist, &out.Blacklist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.BlockDeviceMappings != nil {
		in, out := &in.BlockDeviceMappings, &out.BlockDeviceMappings
		*out = make([]BlockDeviceMappingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterOrientation != nil {
		in, out := &in.ClusterOrientation, &out.ClusterOrientation
		*out = make([]ClusterOrientationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ControllerID != nil {
		in, out := &in.ControllerID, &out.ControllerID
		*out = new(string)
		**out = **in
	}
	if in.DesiredCapacity != nil {
		in, out := &in.DesiredCapacity, &out.DesiredCapacity
		*out = new(float64)
		**out = **in
	}
	if in.DetachLoadBalancer != nil {
		in, out := &in.DetachLoadBalancer, &out.DetachLoadBalancer
		*out = make([]DetachLoadBalancerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DrainingTimeout != nil {
		in, out := &in.DrainingTimeout, &out.DrainingTimeout
		*out = new(float64)
		**out = **in
	}
	if in.EBSOptimized != nil {
		in, out := &in.EBSOptimized, &out.EBSOptimized
		*out = new(bool)
		**out = **in
	}
	if in.FallbackToOndemand != nil {
		in, out := &in.FallbackToOndemand, &out.FallbackToOndemand
		*out = new(bool)
		**out = **in
	}
	if in.Filters != nil {
		in, out := &in.Filters, &out.Filters
		*out = make([]FiltersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GracePeriod != nil {
		in, out := &in.GracePeriod, &out.GracePeriod
		*out = new(float64)
		**out = **in
	}
	if in.HealthCheckUnhealthyDurationBeforeReplacement != nil {
		in, out := &in.HealthCheckUnhealthyDurationBeforeReplacement, &out.HealthCheckUnhealthyDurationBeforeReplacement
		*out = new(float64)
		**out = **in
	}
	if in.IAMInstanceProfile != nil {
		in, out := &in.IAMInstanceProfile, &out.IAMInstanceProfile
		*out = new(string)
		**out = **in
	}
	if in.ImageID != nil {
		in, out := &in.ImageID, &out.ImageID
		*out = new(string)
		**out = **in
	}
	if in.InstanceMetadataOptions != nil {
		in, out := &in.InstanceMetadataOptions, &out.InstanceMetadataOptions
		*out = make([]InstanceMetadataOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KeyName != nil {
		in, out := &in.KeyName, &out.KeyName
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancers != nil {
		in, out := &in.LoadBalancers, &out.LoadBalancers
		*out = make([]LoadBalancersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Logging != nil {
		in, out := &in.Logging, &out.Logging
		*out = make([]LoggingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxSize != nil {
		in, out := &in.MaxSize, &out.MaxSize
		*out = new(float64)
		**out = **in
	}
	if in.MinSize != nil {
		in, out := &in.MinSize, &out.MinSize
		*out = new(float64)
		**out = **in
	}
	if in.Monitoring != nil {
		in, out := &in.Monitoring, &out.Monitoring
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ResourceTagSpecification != nil {
		in, out := &in.ResourceTagSpecification, &out.ResourceTagSpecification
		*out = make([]ResourceTagSpecificationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RootVolumeSize != nil {
		in, out := &in.RootVolumeSize, &out.RootVolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.ScheduledTask != nil {
		in, out := &in.ScheduledTask, &out.ScheduledTask
		*out = make([]ScheduledTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SpotPercentage != nil {
		in, out := &in.SpotPercentage, &out.SpotPercentage
		*out = new(float64)
		**out = **in
	}
	if in.SpreadNodesBy != nil {
		in, out := &in.SpreadNodesBy, &out.SpreadNodesBy
		*out = new(string)
		**out = **in
	}
	if in.SubnetIds != nil {
		in, out := &in.SubnetIds, &out.SubnetIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]TagsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdatePolicy != nil {
		in, out := &in.UpdatePolicy, &out.UpdatePolicy
		*out = make([]UpdatePolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UseAsTemplateOnly != nil {
		in, out := &in.UseAsTemplateOnly, &out.UseAsTemplateOnly
		*out = new(bool)
		**out = **in
	}
	if in.UserData != nil {
		in, out := &in.UserData, &out.UserData
		*out = new(string)
		**out = **in
	}
	if in.UtilizeCommitments != nil {
		in, out := &in.UtilizeCommitments, &out.UtilizeCommitments
		*out = new(bool)
		**out = **in
	}
	if in.UtilizeReservedInstances != nil {
		in, out := &in.UtilizeReservedInstances, &out.UtilizeReservedInstances
		*out = new(bool)
		**out = **in
	}
	if in.Whitelist != nil {
		in, out := &in.Whitelist, &out.Whitelist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OceanAwsParameters.
func (in *OceanAwsParameters) DeepCopy() *OceanAwsParameters {
	if in == nil {
		return nil
	}
	out := new(OceanAwsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OceanAwsSpec) DeepCopyInto(out *OceanAwsSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OceanAwsSpec.
func (in *OceanAwsSpec) DeepCopy() *OceanAwsSpec {
	if in == nil {
		return nil
	}
	out := new(OceanAwsSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OceanAwsStatus) DeepCopyInto(out *OceanAwsStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OceanAwsStatus.
func (in *OceanAwsStatus) DeepCopy() *OceanAwsStatus {
	if in == nil {
		return nil
	}
	out := new(OceanAwsStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParametersClusterRollObservation) DeepCopyInto(out *ParametersClusterRollObservation) {
	*out = *in
	if in.BatchMinHealthyPercentage != nil {
		in, out := &in.BatchMinHealthyPercentage, &out.BatchMinHealthyPercentage
		*out = new(float64)
		**out = **in
	}
	if in.BatchSizePercentage != nil {
		in, out := &in.BatchSizePercentage, &out.BatchSizePercentage
		*out = new(float64)
		**out = **in
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.RespectPdb != nil {
		in, out := &in.RespectPdb, &out.RespectPdb
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParametersClusterRollObservation.
func (in *ParametersClusterRollObservation) DeepCopy() *ParametersClusterRollObservation {
	if in == nil {
		return nil
	}
	out := new(ParametersClusterRollObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParametersClusterRollParameters) DeepCopyInto(out *ParametersClusterRollParameters) {
	*out = *in
	if in.BatchMinHealthyPercentage != nil {
		in, out := &in.BatchMinHealthyPercentage, &out.BatchMinHealthyPercentage
		*out = new(float64)
		**out = **in
	}
	if in.BatchSizePercentage != nil {
		in, out := &in.BatchSizePercentage, &out.BatchSizePercentage
		*out = new(float64)
		**out = **in
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.RespectPdb != nil {
		in, out := &in.RespectPdb, &out.RespectPdb
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParametersClusterRollParameters.
func (in *ParametersClusterRollParameters) DeepCopy() *ParametersClusterRollParameters {
	if in == nil {
		return nil
	}
	out := new(ParametersClusterRollParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParametersObservation) DeepCopyInto(out *ParametersObservation) {
	*out = *in
	if in.AMIAutoUpdate != nil {
		in, out := &in.AMIAutoUpdate, &out.AMIAutoUpdate
		*out = make([]AMIAutoUpdateObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ParametersClusterRoll != nil {
		in, out := &in.ParametersClusterRoll, &out.ParametersClusterRoll
		*out = make([]ParametersClusterRollObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParametersObservation.
func (in *ParametersObservation) DeepCopy() *ParametersObservation {
	if in == nil {
		return nil
	}
	out := new(ParametersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParametersParameters) DeepCopyInto(out *ParametersParameters) {
	*out = *in
	if in.AMIAutoUpdate != nil {
		in, out := &in.AMIAutoUpdate, &out.AMIAutoUpdate
		*out = make([]AMIAutoUpdateParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ParametersClusterRoll != nil {
		in, out := &in.ParametersClusterRoll, &out.ParametersClusterRoll
		*out = make([]ParametersClusterRollParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParametersParameters.
func (in *ParametersParameters) DeepCopy() *ParametersParameters {
	if in == nil {
		return nil
	}
	out := new(ParametersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceLimitsObservation) DeepCopyInto(out *ResourceLimitsObservation) {
	*out = *in
	if in.MaxMemoryGib != nil {
		in, out := &in.MaxMemoryGib, &out.MaxMemoryGib
		*out = new(float64)
		**out = **in
	}
	if in.MaxVcpu != nil {
		in, out := &in.MaxVcpu, &out.MaxVcpu
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceLimitsObservation.
func (in *ResourceLimitsObservation) DeepCopy() *ResourceLimitsObservation {
	if in == nil {
		return nil
	}
	out := new(ResourceLimitsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceLimitsParameters) DeepCopyInto(out *ResourceLimitsParameters) {
	*out = *in
	if in.MaxMemoryGib != nil {
		in, out := &in.MaxMemoryGib, &out.MaxMemoryGib
		*out = new(float64)
		**out = **in
	}
	if in.MaxVcpu != nil {
		in, out := &in.MaxVcpu, &out.MaxVcpu
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceLimitsParameters.
func (in *ResourceLimitsParameters) DeepCopy() *ResourceLimitsParameters {
	if in == nil {
		return nil
	}
	out := new(ResourceLimitsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceTagSpecificationObservation) DeepCopyInto(out *ResourceTagSpecificationObservation) {
	*out = *in
	if in.ShouldTagVolumes != nil {
		in, out := &in.ShouldTagVolumes, &out.ShouldTagVolumes
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceTagSpecificationObservation.
func (in *ResourceTagSpecificationObservation) DeepCopy() *ResourceTagSpecificationObservation {
	if in == nil {
		return nil
	}
	out := new(ResourceTagSpecificationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceTagSpecificationParameters) DeepCopyInto(out *ResourceTagSpecificationParameters) {
	*out = *in
	if in.ShouldTagVolumes != nil {
		in, out := &in.ShouldTagVolumes, &out.ShouldTagVolumes
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceTagSpecificationParameters.
func (in *ResourceTagSpecificationParameters) DeepCopy() *ResourceTagSpecificationParameters {
	if in == nil {
		return nil
	}
	out := new(ResourceTagSpecificationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RollConfigObservation) DeepCopyInto(out *RollConfigObservation) {
	*out = *in
	if in.BatchMinHealthyPercentage != nil {
		in, out := &in.BatchMinHealthyPercentage, &out.BatchMinHealthyPercentage
		*out = new(float64)
		**out = **in
	}
	if in.BatchSizePercentage != nil {
		in, out := &in.BatchSizePercentage, &out.BatchSizePercentage
		*out = new(float64)
		**out = **in
	}
	if in.LaunchSpecIds != nil {
		in, out := &in.LaunchSpecIds, &out.LaunchSpecIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RespectPdb != nil {
		in, out := &in.RespectPdb, &out.RespectPdb
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RollConfigObservation.
func (in *RollConfigObservation) DeepCopy() *RollConfigObservation {
	if in == nil {
		return nil
	}
	out := new(RollConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RollConfigParameters) DeepCopyInto(out *RollConfigParameters) {
	*out = *in
	if in.BatchMinHealthyPercentage != nil {
		in, out := &in.BatchMinHealthyPercentage, &out.BatchMinHealthyPercentage
		*out = new(float64)
		**out = **in
	}
	if in.BatchSizePercentage != nil {
		in, out := &in.BatchSizePercentage, &out.BatchSizePercentage
		*out = new(float64)
		**out = **in
	}
	if in.LaunchSpecIds != nil {
		in, out := &in.LaunchSpecIds, &out.LaunchSpecIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RespectPdb != nil {
		in, out := &in.RespectPdb, &out.RespectPdb
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RollConfigParameters.
func (in *RollConfigParameters) DeepCopy() *RollConfigParameters {
	if in == nil {
		return nil
	}
	out := new(RollConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3Observation) DeepCopyInto(out *S3Observation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3Observation.
func (in *S3Observation) DeepCopy() *S3Observation {
	if in == nil {
		return nil
	}
	out := new(S3Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3Parameters) DeepCopyInto(out *S3Parameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3Parameters.
func (in *S3Parameters) DeepCopy() *S3Parameters {
	if in == nil {
		return nil
	}
	out := new(S3Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduledTaskObservation) DeepCopyInto(out *ScheduledTaskObservation) {
	*out = *in
	if in.ShutdownHours != nil {
		in, out := &in.ShutdownHours, &out.ShutdownHours
		*out = make([]ShutdownHoursObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tasks != nil {
		in, out := &in.Tasks, &out.Tasks
		*out = make([]TasksObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduledTaskObservation.
func (in *ScheduledTaskObservation) DeepCopy() *ScheduledTaskObservation {
	if in == nil {
		return nil
	}
	out := new(ScheduledTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduledTaskParameters) DeepCopyInto(out *ScheduledTaskParameters) {
	*out = *in
	if in.ShutdownHours != nil {
		in, out := &in.ShutdownHours, &out.ShutdownHours
		*out = make([]ShutdownHoursParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tasks != nil {
		in, out := &in.Tasks, &out.Tasks
		*out = make([]TasksParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduledTaskParameters.
func (in *ScheduledTaskParameters) DeepCopy() *ScheduledTaskParameters {
	if in == nil {
		return nil
	}
	out := new(ScheduledTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShutdownHoursObservation) DeepCopyInto(out *ShutdownHoursObservation) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.TimeWindows != nil {
		in, out := &in.TimeWindows, &out.TimeWindows
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShutdownHoursObservation.
func (in *ShutdownHoursObservation) DeepCopy() *ShutdownHoursObservation {
	if in == nil {
		return nil
	}
	out := new(ShutdownHoursObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShutdownHoursParameters) DeepCopyInto(out *ShutdownHoursParameters) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.TimeWindows != nil {
		in, out := &in.TimeWindows, &out.TimeWindows
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShutdownHoursParameters.
func (in *ShutdownHoursParameters) DeepCopy() *ShutdownHoursParameters {
	if in == nil {
		return nil
	}
	out := new(ShutdownHoursParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TagsObservation) DeepCopyInto(out *TagsObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TagsObservation.
func (in *TagsObservation) DeepCopy() *TagsObservation {
	if in == nil {
		return nil
	}
	out := new(TagsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TagsParameters) DeepCopyInto(out *TagsParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TagsParameters.
func (in *TagsParameters) DeepCopy() *TagsParameters {
	if in == nil {
		return nil
	}
	out := new(TagsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TasksObservation) DeepCopyInto(out *TasksObservation) {
	*out = *in
	if in.CronExpression != nil {
		in, out := &in.CronExpression, &out.CronExpression
		*out = new(string)
		**out = **in
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]ParametersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TaskType != nil {
		in, out := &in.TaskType, &out.TaskType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TasksObservation.
func (in *TasksObservation) DeepCopy() *TasksObservation {
	if in == nil {
		return nil
	}
	out := new(TasksObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TasksParameters) DeepCopyInto(out *TasksParameters) {
	*out = *in
	if in.CronExpression != nil {
		in, out := &in.CronExpression, &out.CronExpression
		*out = new(string)
		**out = **in
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]ParametersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TaskType != nil {
		in, out := &in.TaskType, &out.TaskType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TasksParameters.
func (in *TasksParameters) DeepCopy() *TasksParameters {
	if in == nil {
		return nil
	}
	out := new(TasksParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UpdatePolicyObservation) DeepCopyInto(out *UpdatePolicyObservation) {
	*out = *in
	if in.AutoApplyTags != nil {
		in, out := &in.AutoApplyTags, &out.AutoApplyTags
		*out = new(bool)
		**out = **in
	}
	if in.ConditionedRoll != nil {
		in, out := &in.ConditionedRoll, &out.ConditionedRoll
		*out = new(bool)
		**out = **in
	}
	if in.ConditionedRollParams != nil {
		in, out := &in.ConditionedRollParams, &out.ConditionedRollParams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RollConfig != nil {
		in, out := &in.RollConfig, &out.RollConfig
		*out = make([]RollConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ShouldRoll != nil {
		in, out := &in.ShouldRoll, &out.ShouldRoll
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UpdatePolicyObservation.
func (in *UpdatePolicyObservation) DeepCopy() *UpdatePolicyObservation {
	if in == nil {
		return nil
	}
	out := new(UpdatePolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UpdatePolicyParameters) DeepCopyInto(out *UpdatePolicyParameters) {
	*out = *in
	if in.AutoApplyTags != nil {
		in, out := &in.AutoApplyTags, &out.AutoApplyTags
		*out = new(bool)
		**out = **in
	}
	if in.ConditionedRoll != nil {
		in, out := &in.ConditionedRoll, &out.ConditionedRoll
		*out = new(bool)
		**out = **in
	}
	if in.ConditionedRollParams != nil {
		in, out := &in.ConditionedRollParams, &out.ConditionedRollParams
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RollConfig != nil {
		in, out := &in.RollConfig, &out.RollConfig
		*out = make([]RollConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ShouldRoll != nil {
		in, out := &in.ShouldRoll, &out.ShouldRoll
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UpdatePolicyParameters.
func (in *UpdatePolicyParameters) DeepCopy() *UpdatePolicyParameters {
	if in == nil {
		return nil
	}
	out := new(UpdatePolicyParameters)
	in.DeepCopyInto(out)
	return out
}
